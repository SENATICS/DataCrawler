/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.2 on Wed Sep  3 09:36:43 2014
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * If you are unsure which license is appropriate for your use, please
 * contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtXml.h"

#line 409 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"

#line 62 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 38 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 384 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 41 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 36 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 44 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 345 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 47 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qtextstream.sip"
#include <qtextstream.h>
#line 50 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 397 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 53 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 303 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 56 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 462 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 59 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 421 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 62 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 435 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 65 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 450 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 68 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 198 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 71 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 216 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 74 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 291 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 77 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 328 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 80 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 260 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 83 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"
#line 173 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtXml/qdom.sip"
#include <qdom.h>
#line 86 "/home/desa2/PyQt-x11-gpl-4.10.4/QtXml/sipQtXmlQDomCDATASection.cpp"


PyDoc_STRVAR(doc_QDomCDATASection_nodeType, "QDomCDATASection.nodeType() -> QDomNode.NodeType");

extern "C" {static PyObject *meth_QDomCDATASection_nodeType(PyObject *, PyObject *);}
static PyObject *meth_QDomCDATASection_nodeType(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QDomCDATASection *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QDomCDATASection, &sipCpp))
        {
            QDomNode::NodeType sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->nodeType();
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_QDomNode_NodeType);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QDomCDATASection, sipName_nodeType, doc_QDomCDATASection_nodeType);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QDomCDATASection(void *, const sipTypeDef *);}
static void *cast_QDomCDATASection(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QDomCDATASection)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QDomText)->ctd_cast((QDomText *)(QDomCDATASection *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QDomCDATASection(void *, int);}
static void release_QDomCDATASection(void *sipCppV,int)
{
    Py_BEGIN_ALLOW_THREADS

    delete reinterpret_cast<QDomCDATASection *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void assign_QDomCDATASection(void *, SIP_SSIZE_T, const void *);}
static void assign_QDomCDATASection(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<QDomCDATASection *>(sipDst)[sipDstIdx] = *reinterpret_cast<const QDomCDATASection *>(sipSrc);
}


extern "C" {static void *array_QDomCDATASection(SIP_SSIZE_T);}
static void *array_QDomCDATASection(SIP_SSIZE_T sipNrElem)
{
    return new QDomCDATASection[sipNrElem];
}


extern "C" {static void *copy_QDomCDATASection(const void *, SIP_SSIZE_T);}
static void *copy_QDomCDATASection(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QDomCDATASection(reinterpret_cast<const QDomCDATASection *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_QDomCDATASection(sipSimpleWrapper *);}
static void dealloc_QDomCDATASection(sipSimpleWrapper *sipSelf)
{
    if (sipIsPyOwned(sipSelf))
    {
        release_QDomCDATASection(sipGetAddress(sipSelf),0);
    }
}


extern "C" {static void *init_type_QDomCDATASection(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QDomCDATASection(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    QDomCDATASection *sipCpp = 0;

    {
        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, ""))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new QDomCDATASection();
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    {
        const QDomCDATASection* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QDomCDATASection, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new QDomCDATASection(*a0);
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QDomCDATASection[] = {{19, 255, 1}};


static PyMethodDef methods_QDomCDATASection[] = {
    {SIP_MLNAME_CAST(sipName_nodeType), meth_QDomCDATASection_nodeType, METH_VARARGS, SIP_MLDOC_CAST(doc_QDomCDATASection_nodeType)}
};

PyDoc_STRVAR(doc_QDomCDATASection, "\1QDomCDATASection()\n"
    "QDomCDATASection(QDomCDATASection)");


pyqt4ClassTypeDef sipTypeDef_QtXml_QDomCDATASection = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_QDomCDATASection,
        {0}
    },
    {
        sipNameNr_QDomCDATASection,
        {0, 0, 1},
        1, methods_QDomCDATASection,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QDomCDATASection,
    -1,
    -1,
    supers_QDomCDATASection,
    0,
    init_type_QDomCDATASection,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QDomCDATASection,
    assign_QDomCDATASection,
    array_QDomCDATASection,
    copy_QDomCDATASection,
    release_QDomCDATASection,
    cast_QDomCDATASection,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0
};
