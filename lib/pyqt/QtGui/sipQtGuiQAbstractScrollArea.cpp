/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.2 on Wed Sep  3 09:36:19 2014
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * If you are unsure which license is appropriate for your use, please
 * contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qabstractscrollarea.sip"
#include <qabstractscrollarea.h>
#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"

#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 38 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 120 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 41 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 44 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qscrollbar.sip"
#include <qscrollbar.h>
#line 47 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 483 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 50 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 748 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 53 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 801 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 56 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 774 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 59 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 790 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 62 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 627 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 65 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 356 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 68 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 261 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 71 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 533 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 74 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 570 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 77 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 80 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qmargins.sip"
#include <qmargins.h>
#line 83 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 86 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 89 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 92 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 95 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qframe.sip"
#include <qframe.h>
#line 98 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 101 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 104 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 107 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 110 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 36 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 113 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlocale.sip"
#include <qlocale.h>
#line 116 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpaintdevice.sip"
#include <qpaintdevice.h>
#line 119 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 122 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qregion.sip"
#include <qregion.h>
#line 125 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 128 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 37 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 131 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qfontinfo.sip"
#include <qfontinfo.h>
#line 134 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qfontmetrics.sip"
#include <qfontmetrics.h>
#line 137 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qfont.sip"
#include <qfont.h>
#line 140 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 143 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 146 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 274 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 149 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 656 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 152 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 616 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 155 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 605 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 158 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 863 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 161 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 412 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 164 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 583 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 167 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 557 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 170 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 514 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 173 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qinputcontext.sip"
#include <qinputcontext.h>
#line 176 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 61 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpaintengine.sip"
#include <qpaintengine.h>
#line 179 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qx11info_x11.sip"
#include <qx11info_x11.h>
#line 182 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 120 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 185 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qaction.sip"
#include <qaction.h>
#line 188 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qlayout.sip"
#include <qlayout.h>
#line 191 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 194 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 197 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 200 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 203 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qicon.sip"
#include <qicon.h>
#line 206 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qbitmap.sip"
#include <qbitmap.h>
#line 209 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qstyle.sip"
#include <qstyle.h>
#line 212 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 355 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 215 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 338 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 218 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qobject.sip"
#include <qobject.h>
#line 221 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 224 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 120 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 227 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qthread.sip"
#include <qthread.h>
#line 230 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 233 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 236 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQAbstractScrollArea.cpp"


class sipQAbstractScrollArea : public QAbstractScrollArea
{
public:
    sipQAbstractScrollArea(QWidget*);
    virtual ~sipQAbstractScrollArea();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void disconnectNotify(const char*);
    void connectNotify(const char*);
    void customEvent(QEvent*);
    void childEvent(QChildEvent*);
    void timerEvent(QTimerEvent*);
    bool eventFilter(QObject*,QEvent*);
    void languageChange();
    void windowActivationChange(bool);
    void fontChange(const QFont&);
    void paletteChange(const QPalette&);
    void enabledChange(bool);
    bool focusNextPrevChild(bool);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    void inputMethodEvent(QInputMethodEvent*);
    int metric(QPaintDevice::PaintDeviceMetric) const;
    void hideEvent(QHideEvent*);
    void showEvent(QShowEvent*);
    void actionEvent(QActionEvent*);
    void tabletEvent(QTabletEvent*);
    void closeEvent(QCloseEvent*);
    void moveEvent(QMoveEvent*);
    void leaveEvent(QEvent*);
    void enterEvent(QEvent*);
    void focusOutEvent(QFocusEvent*);
    void focusInEvent(QFocusEvent*);
    void keyReleaseEvent(QKeyEvent*);
    QPaintEngine* paintEngine() const;
    int heightForWidth(int) const;
    void setVisible(bool);
    int devType() const;
    void changeEvent(QEvent*);
    void scrollContentsBy(int,int);
    void keyPressEvent(QKeyEvent*);
    void dropEvent(QDropEvent*);
    void dragLeaveEvent(QDragLeaveEvent*);
    void dragMoveEvent(QDragMoveEvent*);
    void dragEnterEvent(QDragEnterEvent*);
    void contextMenuEvent(QContextMenuEvent*);
    void wheelEvent(QWheelEvent*);
    void mouseMoveEvent(QMouseEvent*);
    void mouseDoubleClickEvent(QMouseEvent*);
    void mouseReleaseEvent(QMouseEvent*);
    void mousePressEvent(QMouseEvent*);
    void paintEvent(QPaintEvent*);
    void resizeEvent(QResizeEvent*);
    bool viewportEvent(QEvent*);
    bool event(QEvent*);
    QSize sizeHint() const;
    QSize minimumSizeHint() const;

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQAbstractScrollArea(const sipQAbstractScrollArea &);
    sipQAbstractScrollArea &operator = (const sipQAbstractScrollArea &);

    char sipPyMethods[49];
};

sipQAbstractScrollArea::sipQAbstractScrollArea(QWidget*a0): QAbstractScrollArea(a0), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQAbstractScrollArea::~sipQAbstractScrollArea()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQAbstractScrollArea::metaObject() const
{
    return sip_QtGui_qt_metaobject(sipPySelf,sipType_QAbstractScrollArea);
}

int sipQAbstractScrollArea::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QAbstractScrollArea::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtGui_qt_metacall(sipPySelf,sipType_QAbstractScrollArea,_c,_id,_a);

    return _id;
}

void *sipQAbstractScrollArea::qt_metacast(const char *_clname)
{
    return (sip_QtGui_qt_metacast(sipPySelf, sipType_QAbstractScrollArea, _clname)) ? this : QAbstractScrollArea::qt_metacast(_clname);
}

void sipQAbstractScrollArea::disconnectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
        QAbstractScrollArea::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::connectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
        QAbstractScrollArea::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::customEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::childEvent(QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QChildEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtGui_QtCore->em_virthandlers[25]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::timerEvent(QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTimerEvent*);

    ((sipVH_QtCore_9)(sipModuleAPI_QtGui_QtCore->em_virthandlers[9]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQAbstractScrollArea::eventFilter(QObject*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return QAbstractScrollArea::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_18)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QObject*,QEvent*);

    return ((sipVH_QtCore_18)(sipModuleAPI_QtGui_QtCore->em_virthandlers[18]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractScrollArea::languageChange()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_languageChange);

    if (!sipMeth)
    {
        QAbstractScrollArea::languageChange();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtGui_QtCore->em_virthandlers[11]))(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQAbstractScrollArea::windowActivationChange(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_windowActivationChange);

    if (!sipMeth)
    {
        QAbstractScrollArea::windowActivationChange(a0);
        return;
    }

    extern void sipVH_QtGui_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_QtGui_6(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::fontChange(const QFont& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_fontChange);

    if (!sipMeth)
    {
        QAbstractScrollArea::fontChange(a0);
        return;
    }

    extern void sipVH_QtGui_9(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QFont&);

    sipVH_QtGui_9(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::paletteChange(const QPalette& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_paletteChange);

    if (!sipMeth)
    {
        QAbstractScrollArea::paletteChange(a0);
        return;
    }

    extern void sipVH_QtGui_10(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPalette&);

    sipVH_QtGui_10(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::enabledChange(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_enabledChange);

    if (!sipMeth)
    {
        QAbstractScrollArea::enabledChange(a0);
        return;
    }

    extern void sipVH_QtGui_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_QtGui_6(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQAbstractScrollArea::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_focusNextPrevChild);

    if (!sipMeth)
        return QAbstractScrollArea::focusNextPrevChild(a0);

    extern bool sipVH_QtGui_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return sipVH_QtGui_11(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QVariant sipQAbstractScrollArea::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[12]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return QAbstractScrollArea::inputMethodQuery(a0);

    extern QVariant sipVH_QtGui_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::InputMethodQuery);

    return sipVH_QtGui_12(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::inputMethodEvent(QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtGui_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QInputMethodEvent*);

    sipVH_QtGui_13(sipGILState, 0, sipPySelf, sipMeth, a0);
}

int sipQAbstractScrollArea::metric(QPaintDevice::PaintDeviceMetric a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[14]),sipPySelf,NULL,sipName_metric);

    if (!sipMeth)
        return QAbstractScrollArea::metric(a0);

    extern int sipVH_QtGui_14(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPaintDevice::PaintDeviceMetric);

    return sipVH_QtGui_14(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::hideEvent(QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_hideEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::hideEvent(a0);
        return;
    }

    extern void sipVH_QtGui_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QHideEvent*);

    sipVH_QtGui_0(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::showEvent(QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_showEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::showEvent(a0);
        return;
    }

    extern void sipVH_QtGui_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QShowEvent*);

    sipVH_QtGui_1(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::actionEvent(QActionEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_actionEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::actionEvent(a0);
        return;
    }

    extern void sipVH_QtGui_19(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QActionEvent*);

    sipVH_QtGui_19(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::tabletEvent(QTabletEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_tabletEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::tabletEvent(a0);
        return;
    }

    extern void sipVH_QtGui_20(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTabletEvent*);

    sipVH_QtGui_20(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::closeEvent(QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_closeEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::closeEvent(a0);
        return;
    }

    extern void sipVH_QtGui_22(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QCloseEvent*);

    sipVH_QtGui_22(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::moveEvent(QMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_moveEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::moveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_23(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMoveEvent*);

    sipVH_QtGui_23(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::leaveEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_leaveEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::leaveEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::enterEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_enterEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::enterEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::focusOutEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    sipVH_QtGui_24(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::focusInEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[24],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    sipVH_QtGui_24(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::keyReleaseEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[25],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    sipVH_QtGui_25(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QPaintEngine* sipQAbstractScrollArea::paintEngine() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[26]),sipPySelf,NULL,sipName_paintEngine);

    if (!sipMeth)
        return QAbstractScrollArea::paintEngine();

    extern QPaintEngine* sipVH_QtGui_27(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_27(sipGILState, 0, sipPySelf, sipMeth);
}

int sipQAbstractScrollArea::heightForWidth(int a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[27]),sipPySelf,NULL,sipName_heightForWidth);

    if (!sipMeth)
        return QAbstractScrollArea::heightForWidth(a0);

    extern int sipVH_QtGui_28(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    return sipVH_QtGui_28(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::setVisible(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[28],sipPySelf,NULL,sipName_setVisible);

    if (!sipMeth)
    {
        QAbstractScrollArea::setVisible(a0);
        return;
    }

    extern void sipVH_QtGui_6(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    sipVH_QtGui_6(sipGILState, 0, sipPySelf, sipMeth, a0);
}

int sipQAbstractScrollArea::devType() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[29]),sipPySelf,NULL,sipName_devType);

    if (!sipMeth)
        return QAbstractScrollArea::devType();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtGui_QtCore->em_virthandlers[6]))(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQAbstractScrollArea::changeEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_changeEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::changeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::scrollContentsBy(int a0,int a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_scrollContentsBy);

    if (!sipMeth)
    {
        QAbstractScrollArea::scrollContentsBy(a0,a1);
        return;
    }

    extern void sipVH_QtGui_32(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int,int);

    sipVH_QtGui_32(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

void sipQAbstractScrollArea::keyPressEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[32],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    sipVH_QtGui_25(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::dropEvent(QDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[33],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::dropEvent(a0);
        return;
    }

    extern void sipVH_QtGui_15(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDropEvent*);

    sipVH_QtGui_15(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::dragLeaveEvent(QDragLeaveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[34],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_16(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragLeaveEvent*);

    sipVH_QtGui_16(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::dragMoveEvent(QDragMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[35],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_17(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragMoveEvent*);

    sipVH_QtGui_17(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::dragEnterEvent(QDragEnterEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[36],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_18(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QDragEnterEvent*);

    sipVH_QtGui_18(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::contextMenuEvent(QContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[37],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtGui_21(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QContextMenuEvent*);

    sipVH_QtGui_21(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::wheelEvent(QWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[38],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtGui_5(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QWheelEvent*);

    sipVH_QtGui_5(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::mouseMoveEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[39],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    sipVH_QtGui_26(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::mouseDoubleClickEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[40],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    sipVH_QtGui_26(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::mouseReleaseEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[41],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    sipVH_QtGui_26(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::mousePressEvent(QMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[42],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_26(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QMouseEvent*);

    sipVH_QtGui_26(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::paintEvent(QPaintEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[43],sipPySelf,NULL,sipName_paintEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::paintEvent(a0);
        return;
    }

    extern void sipVH_QtGui_3(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPaintEvent*);

    sipVH_QtGui_3(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQAbstractScrollArea::resizeEvent(QResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[44],sipPySelf,NULL,sipName_resizeEvent);

    if (!sipMeth)
    {
        QAbstractScrollArea::resizeEvent(a0);
        return;
    }

    extern void sipVH_QtGui_2(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QResizeEvent*);

    sipVH_QtGui_2(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQAbstractScrollArea::viewportEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[45],sipPySelf,NULL,sipName_viewportEvent);

    if (!sipMeth)
        return QAbstractScrollArea::viewportEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQAbstractScrollArea::event(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[46],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return QAbstractScrollArea::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QSize sipQAbstractScrollArea::sizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[47]),sipPySelf,NULL,sipName_sizeHint);

    if (!sipMeth)
        return QAbstractScrollArea::sizeHint();

    extern QSize sipVH_QtGui_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_4(sipGILState, 0, sipPySelf, sipMeth);
}

QSize sipQAbstractScrollArea::minimumSizeHint() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[48]),sipPySelf,NULL,sipName_minimumSizeHint);

    if (!sipMeth)
        return QAbstractScrollArea::minimumSizeHint();

    extern QSize sipVH_QtGui_4(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_4(sipGILState, 0, sipPySelf, sipMeth);
}


PyDoc_STRVAR(doc_QAbstractScrollArea_verticalScrollBarPolicy, "QAbstractScrollArea.verticalScrollBarPolicy() -> Qt.ScrollBarPolicy");

extern "C" {static PyObject *meth_QAbstractScrollArea_verticalScrollBarPolicy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_verticalScrollBarPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
            Qt::ScrollBarPolicy sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->verticalScrollBarPolicy();
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_Qt_ScrollBarPolicy);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_verticalScrollBarPolicy, doc_QAbstractScrollArea_verticalScrollBarPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setVerticalScrollBarPolicy, "QAbstractScrollArea.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setVerticalScrollBarPolicy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setVerticalScrollBarPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::ScrollBarPolicy a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_Qt_ScrollBarPolicy, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setVerticalScrollBarPolicy(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setVerticalScrollBarPolicy, doc_QAbstractScrollArea_setVerticalScrollBarPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_verticalScrollBar, "QAbstractScrollArea.verticalScrollBar() -> QScrollBar");

extern "C" {static PyObject *meth_QAbstractScrollArea_verticalScrollBar(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_verticalScrollBar(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
            QScrollBar*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->verticalScrollBar();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QScrollBar,sipSelf);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_verticalScrollBar, doc_QAbstractScrollArea_verticalScrollBar);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_horizontalScrollBarPolicy, "QAbstractScrollArea.horizontalScrollBarPolicy() -> Qt.ScrollBarPolicy");

extern "C" {static PyObject *meth_QAbstractScrollArea_horizontalScrollBarPolicy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_horizontalScrollBarPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
            Qt::ScrollBarPolicy sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->horizontalScrollBarPolicy();
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_Qt_ScrollBarPolicy);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_horizontalScrollBarPolicy, doc_QAbstractScrollArea_horizontalScrollBarPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setHorizontalScrollBarPolicy, "QAbstractScrollArea.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setHorizontalScrollBarPolicy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setHorizontalScrollBarPolicy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::ScrollBarPolicy a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_Qt_ScrollBarPolicy, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setHorizontalScrollBarPolicy(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setHorizontalScrollBarPolicy, doc_QAbstractScrollArea_setHorizontalScrollBarPolicy);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_horizontalScrollBar, "QAbstractScrollArea.horizontalScrollBar() -> QScrollBar");

extern "C" {static PyObject *meth_QAbstractScrollArea_horizontalScrollBar(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_horizontalScrollBar(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
            QScrollBar*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->horizontalScrollBar();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QScrollBar,sipSelf);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_horizontalScrollBar, doc_QAbstractScrollArea_horizontalScrollBar);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_viewport, "QAbstractScrollArea.viewport() -> QWidget");

extern "C" {static PyObject *meth_QAbstractScrollArea_viewport(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_viewport(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
            QWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->viewport();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QWidget,sipSelf);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_viewport, doc_QAbstractScrollArea_viewport);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_maximumViewportSize, "QAbstractScrollArea.maximumViewportSize() -> QSize");

extern "C" {static PyObject *meth_QAbstractScrollArea_maximumViewportSize(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_maximumViewportSize(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
            QSize*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSize(sipCpp->maximumViewportSize());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_maximumViewportSize, doc_QAbstractScrollArea_maximumViewportSize);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_minimumSizeHint, "QAbstractScrollArea.minimumSizeHint() -> QSize");

extern "C" {static PyObject *meth_QAbstractScrollArea_minimumSizeHint(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_minimumSizeHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
            QSize*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSize((sipSelfWasArg ? sipCpp->QAbstractScrollArea::minimumSizeHint() : sipCpp->minimumSizeHint()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_minimumSizeHint, doc_QAbstractScrollArea_minimumSizeHint);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_sizeHint, "QAbstractScrollArea.sizeHint() -> QSize");

extern "C" {static PyObject *meth_QAbstractScrollArea_sizeHint(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_sizeHint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
            QSize*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSize((sipSelfWasArg ? sipCpp->QAbstractScrollArea::sizeHint() : sipCpp->sizeHint()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSize,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_sizeHint, doc_QAbstractScrollArea_sizeHint);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setViewportMargins, "QAbstractScrollArea.setViewportMargins(int, int, int, int)\n"
    "QAbstractScrollArea.setViewportMargins(QMargins)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setViewportMargins(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setViewportMargins(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        int a1;
        int a2;
        int a3;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "piiii", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, &a0, &a1, &a2, &a3))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setViewportMargins(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const QMargins* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ9", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QMargins, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setViewportMargins(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setViewportMargins, doc_QAbstractScrollArea_setViewportMargins);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_event, "QAbstractScrollArea.event(QEvent) -> bool");

extern "C" {static PyObject *meth_QAbstractScrollArea_event(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QAbstractScrollArea::event(a0) : sipCpp->event(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_event, doc_QAbstractScrollArea_event);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_viewportEvent, "QAbstractScrollArea.viewportEvent(QEvent) -> bool");

extern "C" {static PyObject *meth_QAbstractScrollArea_viewportEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_viewportEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QAbstractScrollArea::viewportEvent(a0) : sipCpp->viewportEvent(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_viewportEvent, doc_QAbstractScrollArea_viewportEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_resizeEvent, "QAbstractScrollArea.resizeEvent(QResizeEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_resizeEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_resizeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QResizeEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QResizeEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::resizeEvent(a0) : sipCpp->resizeEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_resizeEvent, doc_QAbstractScrollArea_resizeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_paintEvent, "QAbstractScrollArea.paintEvent(QPaintEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_paintEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_paintEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPaintEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QPaintEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::paintEvent(a0) : sipCpp->paintEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_paintEvent, doc_QAbstractScrollArea_paintEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_mousePressEvent, "QAbstractScrollArea.mousePressEvent(QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QMouseEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::mousePressEvent(a0) : sipCpp->mousePressEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_mousePressEvent, doc_QAbstractScrollArea_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_mouseReleaseEvent, "QAbstractScrollArea.mouseReleaseEvent(QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QMouseEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::mouseReleaseEvent(a0) : sipCpp->mouseReleaseEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_mouseReleaseEvent, doc_QAbstractScrollArea_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_mouseDoubleClickEvent, "QAbstractScrollArea.mouseDoubleClickEvent(QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QMouseEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::mouseDoubleClickEvent(a0) : sipCpp->mouseDoubleClickEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_mouseDoubleClickEvent, doc_QAbstractScrollArea_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_mouseMoveEvent, "QAbstractScrollArea.mouseMoveEvent(QMouseEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QMouseEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::mouseMoveEvent(a0) : sipCpp->mouseMoveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_mouseMoveEvent, doc_QAbstractScrollArea_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_wheelEvent, "QAbstractScrollArea.wheelEvent(QWheelEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QWheelEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QWheelEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::wheelEvent(a0) : sipCpp->wheelEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_wheelEvent, doc_QAbstractScrollArea_wheelEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_contextMenuEvent, "QAbstractScrollArea.contextMenuEvent(QContextMenuEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QContextMenuEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QContextMenuEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::contextMenuEvent(a0) : sipCpp->contextMenuEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_contextMenuEvent, doc_QAbstractScrollArea_contextMenuEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_dragEnterEvent, "QAbstractScrollArea.dragEnterEvent(QDragEnterEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDragEnterEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QDragEnterEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::dragEnterEvent(a0) : sipCpp->dragEnterEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_dragEnterEvent, doc_QAbstractScrollArea_dragEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_dragMoveEvent, "QAbstractScrollArea.dragMoveEvent(QDragMoveEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDragMoveEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QDragMoveEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::dragMoveEvent(a0) : sipCpp->dragMoveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_dragMoveEvent, doc_QAbstractScrollArea_dragMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_dragLeaveEvent, "QAbstractScrollArea.dragLeaveEvent(QDragLeaveEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDragLeaveEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QDragLeaveEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::dragLeaveEvent(a0) : sipCpp->dragLeaveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_dragLeaveEvent, doc_QAbstractScrollArea_dragLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_dropEvent, "QAbstractScrollArea.dropEvent(QDropEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QDropEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::dropEvent(a0) : sipCpp->dropEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_dropEvent, doc_QAbstractScrollArea_dropEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_keyPressEvent, "QAbstractScrollArea.keyPressEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QAbstractScrollArea_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QKeyEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::keyPressEvent(a0) : sipCpp->keyPressEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_keyPressEvent, doc_QAbstractScrollArea_keyPressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_scrollContentsBy, "QAbstractScrollArea.scrollContentsBy(int, int)");

extern "C" {static PyObject *meth_QAbstractScrollArea_scrollContentsBy(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_scrollContentsBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        int a1;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pii", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QAbstractScrollArea::scrollContentsBy(a0,a1) : sipCpp->scrollContentsBy(a0,a1));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_scrollContentsBy, doc_QAbstractScrollArea_scrollContentsBy);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setVerticalScrollBar, "QAbstractScrollArea.setVerticalScrollBar(QScrollBar)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setVerticalScrollBar(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setVerticalScrollBar(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QScrollBar* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QScrollBar, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setVerticalScrollBar(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setVerticalScrollBar, doc_QAbstractScrollArea_setVerticalScrollBar);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setHorizontalScrollBar, "QAbstractScrollArea.setHorizontalScrollBar(QScrollBar)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setHorizontalScrollBar(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setHorizontalScrollBar(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QScrollBar* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QScrollBar, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setHorizontalScrollBar(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setHorizontalScrollBar, doc_QAbstractScrollArea_setHorizontalScrollBar);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_cornerWidget, "QAbstractScrollArea.cornerWidget() -> QWidget");

extern "C" {static PyObject *meth_QAbstractScrollArea_cornerWidget(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_cornerWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QAbstractScrollArea, &sipCpp))
        {
            QWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->cornerWidget();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_cornerWidget, doc_QAbstractScrollArea_cornerWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setCornerWidget, "QAbstractScrollArea.setCornerWidget(QWidget)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setCornerWidget(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setCornerWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWidget* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QWidget, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setCornerWidget(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setCornerWidget, doc_QAbstractScrollArea_setCornerWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_addScrollBarWidget, "QAbstractScrollArea.addScrollBarWidget(QWidget, Qt.Alignment)");

extern "C" {static PyObject *meth_QAbstractScrollArea_addScrollBarWidget(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_addScrollBarWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWidget* a0;
        Qt::Alignment* a1;
        int a1State = 0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:J1", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QWidget, &a0, sipType_Qt_Alignment, &a1, &a1State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->addScrollBarWidget(a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_Qt_Alignment,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_addScrollBarWidget, doc_QAbstractScrollArea_addScrollBarWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_scrollBarWidgets, "QAbstractScrollArea.scrollBarWidgets(Qt.Alignment) -> list-of-QWidget");

extern "C" {static PyObject *meth_QAbstractScrollArea_scrollBarWidgets(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_scrollBarWidgets(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::Alignment* a0;
        int a0State = 0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_Qt_Alignment, &a0, &a0State))
        {
            QWidgetList*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QWidgetList(sipCpp->scrollBarWidgets(*a0));
            Py_END_ALLOW_THREADS
            sipReleaseType(a0,sipType_Qt_Alignment,a0State);

            return sipConvertFromNewType(sipRes,sipType_QList_0101QWidget,sipSelf);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_scrollBarWidgets, doc_QAbstractScrollArea_scrollBarWidgets);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setViewport, "QAbstractScrollArea.setViewport(QWidget)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setViewport(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setViewport(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWidget* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QWidget, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setViewport(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setViewport, doc_QAbstractScrollArea_setViewport);

    return NULL;
}


PyDoc_STRVAR(doc_QAbstractScrollArea_setupViewport, "QAbstractScrollArea.setupViewport(QWidget)");

extern "C" {static PyObject *meth_QAbstractScrollArea_setupViewport(PyObject *, PyObject *);}
static PyObject *meth_QAbstractScrollArea_setupViewport(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWidget* a0;
        QAbstractScrollArea *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QAbstractScrollArea, &sipCpp, sipType_QWidget, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setupViewport(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QAbstractScrollArea, sipName_setupViewport, doc_QAbstractScrollArea_setupViewport);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QAbstractScrollArea(void *, const sipTypeDef *);}
static void *cast_QAbstractScrollArea(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QAbstractScrollArea)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QFrame)->ctd_cast((QFrame *)(QAbstractScrollArea *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QAbstractScrollArea(void *, int);}
static void release_QAbstractScrollArea(void *sipCppV,int)
{
    QAbstractScrollArea *sipCpp = reinterpret_cast<QAbstractScrollArea *>(sipCppV);

    Py_BEGIN_ALLOW_THREADS

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QAbstractScrollArea(sipSimpleWrapper *);}
static void dealloc_QAbstractScrollArea(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQAbstractScrollArea *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QAbstractScrollArea(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QAbstractScrollArea(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QAbstractScrollArea(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQAbstractScrollArea *sipCpp = 0;

    {
        QWidget* a0 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JH", sipType_QWidget, &a0, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQAbstractScrollArea(a0);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QAbstractScrollArea[] = {{143, 255, 1}};


static PyMethodDef methods_QAbstractScrollArea[] = {
    {SIP_MLNAME_CAST(sipName_addScrollBarWidget), meth_QAbstractScrollArea_addScrollBarWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_addScrollBarWidget)},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), meth_QAbstractScrollArea_contextMenuEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_contextMenuEvent)},
    {SIP_MLNAME_CAST(sipName_cornerWidget), meth_QAbstractScrollArea_cornerWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_cornerWidget)},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), meth_QAbstractScrollArea_dragEnterEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_dragEnterEvent)},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), meth_QAbstractScrollArea_dragLeaveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_dragLeaveEvent)},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), meth_QAbstractScrollArea_dragMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_dragMoveEvent)},
    {SIP_MLNAME_CAST(sipName_dropEvent), meth_QAbstractScrollArea_dropEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_dropEvent)},
    {SIP_MLNAME_CAST(sipName_event), meth_QAbstractScrollArea_event, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_event)},
    {SIP_MLNAME_CAST(sipName_horizontalScrollBar), meth_QAbstractScrollArea_horizontalScrollBar, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_horizontalScrollBar)},
    {SIP_MLNAME_CAST(sipName_horizontalScrollBarPolicy), meth_QAbstractScrollArea_horizontalScrollBarPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_horizontalScrollBarPolicy)},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), meth_QAbstractScrollArea_keyPressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_keyPressEvent)},
    {SIP_MLNAME_CAST(sipName_maximumViewportSize), meth_QAbstractScrollArea_maximumViewportSize, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_maximumViewportSize)},
    {SIP_MLNAME_CAST(sipName_minimumSizeHint), meth_QAbstractScrollArea_minimumSizeHint, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_minimumSizeHint)},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QAbstractScrollArea_mouseDoubleClickEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_mouseDoubleClickEvent)},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QAbstractScrollArea_mouseMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_mouseMoveEvent)},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QAbstractScrollArea_mousePressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_mousePressEvent)},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QAbstractScrollArea_mouseReleaseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_mouseReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_paintEvent), meth_QAbstractScrollArea_paintEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_paintEvent)},
    {SIP_MLNAME_CAST(sipName_resizeEvent), meth_QAbstractScrollArea_resizeEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_resizeEvent)},
    {SIP_MLNAME_CAST(sipName_scrollBarWidgets), meth_QAbstractScrollArea_scrollBarWidgets, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_scrollBarWidgets)},
    {SIP_MLNAME_CAST(sipName_scrollContentsBy), meth_QAbstractScrollArea_scrollContentsBy, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_scrollContentsBy)},
    {SIP_MLNAME_CAST(sipName_setCornerWidget), meth_QAbstractScrollArea_setCornerWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setCornerWidget)},
    {SIP_MLNAME_CAST(sipName_setHorizontalScrollBar), meth_QAbstractScrollArea_setHorizontalScrollBar, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setHorizontalScrollBar)},
    {SIP_MLNAME_CAST(sipName_setHorizontalScrollBarPolicy), meth_QAbstractScrollArea_setHorizontalScrollBarPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setHorizontalScrollBarPolicy)},
    {SIP_MLNAME_CAST(sipName_setVerticalScrollBar), meth_QAbstractScrollArea_setVerticalScrollBar, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setVerticalScrollBar)},
    {SIP_MLNAME_CAST(sipName_setVerticalScrollBarPolicy), meth_QAbstractScrollArea_setVerticalScrollBarPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setVerticalScrollBarPolicy)},
    {SIP_MLNAME_CAST(sipName_setViewport), meth_QAbstractScrollArea_setViewport, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setViewport)},
    {SIP_MLNAME_CAST(sipName_setViewportMargins), meth_QAbstractScrollArea_setViewportMargins, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setViewportMargins)},
    {SIP_MLNAME_CAST(sipName_setupViewport), meth_QAbstractScrollArea_setupViewport, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_setupViewport)},
    {SIP_MLNAME_CAST(sipName_sizeHint), meth_QAbstractScrollArea_sizeHint, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_sizeHint)},
    {SIP_MLNAME_CAST(sipName_verticalScrollBar), meth_QAbstractScrollArea_verticalScrollBar, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_verticalScrollBar)},
    {SIP_MLNAME_CAST(sipName_verticalScrollBarPolicy), meth_QAbstractScrollArea_verticalScrollBarPolicy, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_verticalScrollBarPolicy)},
    {SIP_MLNAME_CAST(sipName_viewport), meth_QAbstractScrollArea_viewport, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_viewport)},
    {SIP_MLNAME_CAST(sipName_viewportEvent), meth_QAbstractScrollArea_viewportEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_viewportEvent)},
    {SIP_MLNAME_CAST(sipName_wheelEvent), meth_QAbstractScrollArea_wheelEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QAbstractScrollArea_wheelEvent)}
};

PyDoc_STRVAR(doc_QAbstractScrollArea, "\1QAbstractScrollArea(QWidget parent=None)");


pyqt4ClassTypeDef sipTypeDef_QtGui_QAbstractScrollArea = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QAbstractScrollArea,
        {0}
    },
    {
        sipNameNr_QAbstractScrollArea,
        {0, 0, 1},
        35, methods_QAbstractScrollArea,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QAbstractScrollArea,
    -1,
    -1,
    supers_QAbstractScrollArea,
    0,
    init_type_QAbstractScrollArea,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QAbstractScrollArea,
    0,
    0,
    0,
    release_QAbstractScrollArea,
    cast_QAbstractScrollArea,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QAbstractScrollArea::staticMetaObject,
    0,
    0
};
