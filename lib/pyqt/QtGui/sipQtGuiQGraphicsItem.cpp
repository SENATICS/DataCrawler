/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.2 on Wed Sep  3 09:36:19 2014
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * If you are unsure which license is appropriate for your use, please
 * contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"

#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 38 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 41 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 119 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 44 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 120 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 47 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 50 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 53 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 1149 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 56 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 168 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 59 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 62 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 65 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qregion.sip"
#include <qregion.h>
#line 68 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 71 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 120 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 74 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 187 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 77 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 83 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 80 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 83 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 53 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 86 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 483 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 89 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 274 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 92 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 95 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 656 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 98 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 140 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 101 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 514 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 104 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 193 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 107 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 110 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 110 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 355 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 113 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 116 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 1975 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 119 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 122 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qmatrix.sip"
#include <qmatrix.h>
#line 125 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 128 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 131 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 36 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 134 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 137 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"
#line 1109 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 140 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsItem.cpp"


class sipQGraphicsItem : public QGraphicsItem
{
public:
    sipQGraphicsItem(QGraphicsItem*,QGraphicsScene*);
    virtual ~sipQGraphicsItem();

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    void wheelEvent(QGraphicsSceneWheelEvent*);
    bool sceneEventFilter(QGraphicsItem*,QEvent*);
    bool sceneEvent(QEvent*);
    void mouseReleaseEvent(QGraphicsSceneMouseEvent*);
    void mousePressEvent(QGraphicsSceneMouseEvent*);
    void mouseMoveEvent(QGraphicsSceneMouseEvent*);
    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent*);
    void keyReleaseEvent(QKeyEvent*);
    void keyPressEvent(QKeyEvent*);
    QVariant itemChange(QGraphicsItem::GraphicsItemChange,const QVariant&);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    void inputMethodEvent(QInputMethodEvent*);
    void hoverMoveEvent(QGraphicsSceneHoverEvent*);
    void hoverLeaveEvent(QGraphicsSceneHoverEvent*);
    void hoverEnterEvent(QGraphicsSceneHoverEvent*);
    void focusOutEvent(QFocusEvent*);
    void focusInEvent(QFocusEvent*);
    void dropEvent(QGraphicsSceneDragDropEvent*);
    void dragMoveEvent(QGraphicsSceneDragDropEvent*);
    void dragLeaveEvent(QGraphicsSceneDragDropEvent*);
    void dragEnterEvent(QGraphicsSceneDragDropEvent*);
    void contextMenuEvent(QGraphicsSceneContextMenuEvent*);
    int type() const;
    void paint(QPainter*,const QStyleOptionGraphicsItem*,QWidget*);
    QPainterPath opaqueArea() const;
    bool isObscuredBy(const QGraphicsItem*) const;
    bool collidesWithPath(const QPainterPath&,Qt::ItemSelectionMode) const;
    bool collidesWithItem(const QGraphicsItem*,Qt::ItemSelectionMode) const;
    bool contains(const QPointF&) const;
    QPainterPath shape() const;
    QRectF boundingRect() const;
    void advance(int);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsItem(const sipQGraphicsItem &);
    sipQGraphicsItem &operator = (const sipQGraphicsItem &);

    char sipPyMethods[32];
};

sipQGraphicsItem::sipQGraphicsItem(QGraphicsItem*a0,QGraphicsScene*a1): QGraphicsItem(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsItem::~sipQGraphicsItem()
{
    sipCommonDtor(sipPySelf);
}

void sipQGraphicsItem::wheelEvent(QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
        QGraphicsItem::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtGui_199(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneWheelEvent*);

    sipVH_QtGui_199(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsItem::sceneEventFilter(QGraphicsItem*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[1],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!sipMeth)
        return QGraphicsItem::sceneEventFilter(a0,a1);

    extern bool sipVH_QtGui_208(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem*,QEvent*);

    return sipVH_QtGui_208(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsItem::sceneEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_sceneEvent);

    if (!sipMeth)
        return QGraphicsItem::sceneEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::mouseReleaseEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[3],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsItem::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtGui_200(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::mousePressEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[4],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
        QGraphicsItem::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtGui_200(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::mouseMoveEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[5],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
        QGraphicsItem::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtGui_200(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[6],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
        QGraphicsItem::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtGui_200(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::keyReleaseEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[7],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsItem::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    sipVH_QtGui_25(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::keyPressEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
        QGraphicsItem::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    sipVH_QtGui_25(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QVariant sipQGraphicsItem::itemChange(QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_itemChange);

    if (!sipMeth)
        return QGraphicsItem::itemChange(a0,a1);

    extern QVariant sipVH_QtGui_191(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem::GraphicsItemChange,const QVariant&);

    return sipVH_QtGui_191(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

QVariant sipQGraphicsItem::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[10]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return QGraphicsItem::inputMethodQuery(a0);

    extern QVariant sipVH_QtGui_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::InputMethodQuery);

    return sipVH_QtGui_12(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::inputMethodEvent(QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
        QGraphicsItem::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtGui_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QInputMethodEvent*);

    sipVH_QtGui_13(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::hoverMoveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!sipMeth)
    {
        QGraphicsItem::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtGui_187(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::hoverLeaveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsItem::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtGui_187(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::hoverEnterEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!sipMeth)
    {
        QGraphicsItem::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtGui_187(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::focusOutEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
        QGraphicsItem::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    sipVH_QtGui_24(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::focusInEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
        QGraphicsItem::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    sipVH_QtGui_24(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::dropEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
        QGraphicsItem::dropEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_202(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::dragMoveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
        QGraphicsItem::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_202(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::dragLeaveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsItem::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_202(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::dragEnterEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[20],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
        QGraphicsItem::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_202(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsItem::contextMenuEvent(QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
        QGraphicsItem::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneContextMenuEvent*);

    sipVH_QtGui_203(sipGILState, 0, sipPySelf, sipMeth, a0);
}

int sipQGraphicsItem::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[22]),sipPySelf,NULL,sipName_type);

    if (!sipMeth)
        return QGraphicsItem::type();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtGui_QtCore->em_virthandlers[6]))(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQGraphicsItem::paint(QPainter*a0,const QStyleOptionGraphicsItem*a1,QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,sipName_QGraphicsItem,sipName_paint);

    if (!sipMeth)
        return;

    extern void sipVH_QtGui_196(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionGraphicsItem*,QWidget*);

    sipVH_QtGui_196(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

QPainterPath sipQGraphicsItem::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[24]),sipPySelf,NULL,sipName_opaqueArea);

    if (!sipMeth)
        return QGraphicsItem::opaqueArea();

    extern QPainterPath sipVH_QtGui_194(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_194(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipQGraphicsItem::isObscuredBy(const QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[25]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!sipMeth)
        return QGraphicsItem::isObscuredBy(a0);

    extern bool sipVH_QtGui_206(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*);

    return sipVH_QtGui_206(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsItem::collidesWithPath(const QPainterPath& a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[26]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!sipMeth)
        return QGraphicsItem::collidesWithPath(a0,a1);

    extern bool sipVH_QtGui_209(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPainterPath&,Qt::ItemSelectionMode);

    return sipVH_QtGui_209(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsItem::collidesWithItem(const QGraphicsItem*a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[27]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!sipMeth)
        return QGraphicsItem::collidesWithItem(a0,a1);

    extern bool sipVH_QtGui_210(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*,Qt::ItemSelectionMode);

    return sipVH_QtGui_210(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsItem::contains(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[28]),sipPySelf,NULL,sipName_contains);

    if (!sipMeth)
        return QGraphicsItem::contains(a0);

    extern bool sipVH_QtGui_207(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPointF&);

    return sipVH_QtGui_207(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QPainterPath sipQGraphicsItem::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[29]),sipPySelf,NULL,sipName_shape);

    if (!sipMeth)
        return QGraphicsItem::shape();

    extern QPainterPath sipVH_QtGui_194(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_194(sipGILState, 0, sipPySelf, sipMeth);
}

QRectF sipQGraphicsItem::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[30]),sipPySelf,sipName_QGraphicsItem,sipName_boundingRect);

    if (!sipMeth)
        return QRectF();

    extern QRectF sipVH_QtGui_195(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_195(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQGraphicsItem::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_advance);

    if (!sipMeth)
    {
        QGraphicsItem::advance(a0);
        return;
    }

    typedef void (*sipVH_QtCore_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    ((sipVH_QtCore_4)(sipModuleAPI_QtGui_QtCore->em_virthandlers[4]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsItem_scene, "QGraphicsItem.scene() -> QGraphicsScene");

extern "C" {static PyObject *meth_QGraphicsItem_scene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsScene*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->scene();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsScene,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_scene, doc_QGraphicsItem_scene);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_parentItem, "QGraphicsItem.parentItem() -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_parentItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_parentItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsItem*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->parentItem();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_parentItem, doc_QGraphicsItem_parentItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_topLevelItem, "QGraphicsItem.topLevelItem() -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_topLevelItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_topLevelItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsItem*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->topLevelItem();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_topLevelItem, doc_QGraphicsItem_topLevelItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setParentItem, "QGraphicsItem.setParentItem(QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItem_setParentItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setParentItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem* a0;
        sipWrapper *sipOwner = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJH", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setParentItem(a0);
            Py_END_ALLOW_THREADS

            if (sipOwner)
                sipTransferTo(sipSelf, (PyObject *)sipOwner);
            else
                sipTransferBack(sipSelf);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setParentItem, doc_QGraphicsItem_setParentItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_group, "QGraphicsItem.group() -> QGraphicsItemGroup");

extern "C" {static PyObject *meth_QGraphicsItem_group(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_group(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsItemGroup*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->group();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItemGroup,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_group, doc_QGraphicsItem_group);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setGroup, "QGraphicsItem.setGroup(QGraphicsItemGroup)");

extern "C" {static PyObject *meth_QGraphicsItem_setGroup(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setGroup(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItemGroup* a0;
        PyObject *a0Keep;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0Keep, sipType_QGraphicsItemGroup, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setGroup(a0);
            Py_END_ALLOW_THREADS

            sipKeepReference(sipSelf, -26, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setGroup, doc_QGraphicsItem_setGroup);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_flags, "QGraphicsItem.flags() -> QGraphicsItem.GraphicsItemFlags");

extern "C" {static PyObject *meth_QGraphicsItem_flags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_flags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsItem::GraphicsItemFlags*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QGraphicsItem::GraphicsItemFlags(sipCpp->flags());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QGraphicsItem_GraphicsItemFlags,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_flags, doc_QGraphicsItem_flags);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setFlag, "QGraphicsItem.setFlag(QGraphicsItem.GraphicsItemFlag, bool enabled=True)");

extern "C" {static PyObject *meth_QGraphicsItem_setFlag(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFlag(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem::GraphicsItemFlag a0;
        bool a1 = 1;
        QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_enabled,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|b", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem_GraphicsItemFlag, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFlag(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setFlag, doc_QGraphicsItem_setFlag);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setFlags, "QGraphicsItem.setFlags(QGraphicsItem.GraphicsItemFlags)");

extern "C" {static PyObject *meth_QGraphicsItem_setFlags(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFlags(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem::GraphicsItemFlags* a0;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem_GraphicsItemFlags, &a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFlags(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(a0,sipType_QGraphicsItem_GraphicsItemFlags,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setFlags, doc_QGraphicsItem_setFlags);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_toolTip, "QGraphicsItem.toolTip() -> QString");

extern "C" {static PyObject *meth_QGraphicsItem_toolTip(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_toolTip(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QString*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QString(sipCpp->toolTip());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QString,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_toolTip, doc_QGraphicsItem_toolTip);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setToolTip, "QGraphicsItem.setToolTip(QString)");

extern "C" {static PyObject *meth_QGraphicsItem_setToolTip(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setToolTip(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QString* a0;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QString,&a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setToolTip(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QString *>(a0),sipType_QString,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setToolTip, doc_QGraphicsItem_setToolTip);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_cursor, "QGraphicsItem.cursor() -> QCursor");

extern "C" {static PyObject *meth_QGraphicsItem_cursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_cursor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QCursor*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QCursor(sipCpp->cursor());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QCursor,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_cursor, doc_QGraphicsItem_cursor);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setCursor, "QGraphicsItem.setCursor(QCursor)");

extern "C" {static PyObject *meth_QGraphicsItem_setCursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QCursor* a0;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QCursor, &a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setCursor(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QCursor *>(a0),sipType_QCursor,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setCursor, doc_QGraphicsItem_setCursor);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_hasCursor, "QGraphicsItem.hasCursor() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_hasCursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hasCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->hasCursor();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hasCursor, doc_QGraphicsItem_hasCursor);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_unsetCursor, "QGraphicsItem.unsetCursor()");

extern "C" {static PyObject *meth_QGraphicsItem_unsetCursor(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_unsetCursor(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->unsetCursor();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_unsetCursor, doc_QGraphicsItem_unsetCursor);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isVisible, "QGraphicsItem.isVisible() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isVisible(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isVisible();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isVisible, doc_QGraphicsItem_isVisible);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setVisible, "QGraphicsItem.setVisible(bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setVisible(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setVisible(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setVisible(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setVisible, doc_QGraphicsItem_setVisible);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_hide, "QGraphicsItem.hide()");

extern "C" {static PyObject *meth_QGraphicsItem_hide(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hide(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->hide();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hide, doc_QGraphicsItem_hide);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_show, "QGraphicsItem.show()");

extern "C" {static PyObject *meth_QGraphicsItem_show(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_show(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->show();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_show, doc_QGraphicsItem_show);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isEnabled, "QGraphicsItem.isEnabled() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isEnabled(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isEnabled();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isEnabled, doc_QGraphicsItem_isEnabled);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setEnabled, "QGraphicsItem.setEnabled(bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setEnabled(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setEnabled(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setEnabled(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setEnabled, doc_QGraphicsItem_setEnabled);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isSelected, "QGraphicsItem.isSelected() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isSelected(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isSelected(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isSelected();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isSelected, doc_QGraphicsItem_isSelected);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setSelected, "QGraphicsItem.setSelected(bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setSelected(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setSelected(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setSelected(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setSelected, doc_QGraphicsItem_setSelected);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_acceptDrops, "QGraphicsItem.acceptDrops() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_acceptDrops(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptDrops(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->acceptDrops();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_acceptDrops, doc_QGraphicsItem_acceptDrops);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setAcceptDrops, "QGraphicsItem.setAcceptDrops(bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setAcceptDrops(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptDrops(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setAcceptDrops(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setAcceptDrops, doc_QGraphicsItem_setAcceptDrops);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_acceptedMouseButtons, "QGraphicsItem.acceptedMouseButtons() -> Qt.MouseButtons");

extern "C" {static PyObject *meth_QGraphicsItem_acceptedMouseButtons(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptedMouseButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Qt::MouseButtons*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Qt::MouseButtons(sipCpp->acceptedMouseButtons());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Qt_MouseButtons,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_acceptedMouseButtons, doc_QGraphicsItem_acceptedMouseButtons);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setAcceptedMouseButtons, "QGraphicsItem.setAcceptedMouseButtons(Qt.MouseButtons)");

extern "C" {static PyObject *meth_QGraphicsItem_setAcceptedMouseButtons(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptedMouseButtons(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::MouseButtons* a0;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_Qt_MouseButtons, &a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setAcceptedMouseButtons(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(a0,sipType_Qt_MouseButtons,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setAcceptedMouseButtons, doc_QGraphicsItem_setAcceptedMouseButtons);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_acceptsHoverEvents, "QGraphicsItem.acceptsHoverEvents() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_acceptsHoverEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptsHoverEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->acceptsHoverEvents();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_acceptsHoverEvents, doc_QGraphicsItem_acceptsHoverEvents);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setAcceptsHoverEvents, "QGraphicsItem.setAcceptsHoverEvents(bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setAcceptsHoverEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptsHoverEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setAcceptsHoverEvents(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setAcceptsHoverEvents, doc_QGraphicsItem_setAcceptsHoverEvents);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_handlesChildEvents, "QGraphicsItem.handlesChildEvents() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_handlesChildEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_handlesChildEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->handlesChildEvents();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_handlesChildEvents, doc_QGraphicsItem_handlesChildEvents);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setHandlesChildEvents, "QGraphicsItem.setHandlesChildEvents(bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setHandlesChildEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setHandlesChildEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setHandlesChildEvents(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setHandlesChildEvents, doc_QGraphicsItem_setHandlesChildEvents);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_hasFocus, "QGraphicsItem.hasFocus() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_hasFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hasFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->hasFocus();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hasFocus, doc_QGraphicsItem_hasFocus);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setFocus, "QGraphicsItem.setFocus(Qt.FocusReason focusReason=Qt.OtherFocusReason)");

extern "C" {static PyObject *meth_QGraphicsItem_setFocus(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFocus(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::FocusReason a0 = Qt::OtherFocusReason;
        QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            sipName_focusReason,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|E", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_Qt_FocusReason, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFocus(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setFocus, doc_QGraphicsItem_setFocus);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_clearFocus, "QGraphicsItem.clearFocus()");

extern "C" {static PyObject *meth_QGraphicsItem_clearFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_clearFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->clearFocus();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_clearFocus, doc_QGraphicsItem_clearFocus);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_pos, "QGraphicsItem.pos() -> QPointF");

extern "C" {static PyObject *meth_QGraphicsItem_pos(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_pos(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->pos());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_pos, doc_QGraphicsItem_pos);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_x, "QGraphicsItem.x() -> float");

extern "C" {static PyObject *meth_QGraphicsItem_x(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_x(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->x();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_x, doc_QGraphicsItem_x);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_y, "QGraphicsItem.y() -> float");

extern "C" {static PyObject *meth_QGraphicsItem_y(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_y(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->y();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_y, doc_QGraphicsItem_y);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_scenePos, "QGraphicsItem.scenePos() -> QPointF");

extern "C" {static PyObject *meth_QGraphicsItem_scenePos(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scenePos(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->scenePos());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_scenePos, doc_QGraphicsItem_scenePos);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setPos, "QGraphicsItem.setPos(QPointF)\n"
    "QGraphicsItem.setPos(float, float)");

extern "C" {static PyObject *meth_QGraphicsItem_setPos(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setPos(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPointF* a0;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPos(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPointF *>(a0),sipType_QPointF,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPos(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setPos, doc_QGraphicsItem_setPos);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_moveBy, "QGraphicsItem.moveBy(float, float)");

extern "C" {static PyObject *meth_QGraphicsItem_moveBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_moveBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->moveBy(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_moveBy, doc_QGraphicsItem_moveBy);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_ensureVisible, "QGraphicsItem.ensureVisible(QRectF rect=QRectF(), int xMargin=50, int yMargin=50)\n"
    "QGraphicsItem.ensureVisible(float, float, float, float, int xMargin=50, int yMargin=50)");

extern "C" {static PyObject *meth_QGraphicsItem_ensureVisible(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_ensureVisible(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QRectF& a0def = QRectF();
        const QRectF* a0 = &a0def;
        int a1 = 50;
        int a2 = 50;
        QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
            sipName_xMargin,
            sipName_yMargin,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|J9ii", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0, &a1, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->ensureVisible(*a0,a1,a2);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        int a4 = 50;
        int a5 = 50;
        QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            NULL,
            NULL,
            sipName_xMargin,
            sipName_yMargin,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bdddd|ii", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3, &a4, &a5))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->ensureVisible(a0,a1,a2,a3,a4,a5);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_ensureVisible, doc_QGraphicsItem_ensureVisible);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_matrix, "QGraphicsItem.matrix() -> QMatrix");

extern "C" {static PyObject *meth_QGraphicsItem_matrix(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_matrix(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QMatrix*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QMatrix(sipCpp->matrix());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QMatrix,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_matrix, doc_QGraphicsItem_matrix);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_sceneMatrix, "QGraphicsItem.sceneMatrix() -> QMatrix");

extern "C" {static PyObject *meth_QGraphicsItem_sceneMatrix(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneMatrix(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QMatrix*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QMatrix(sipCpp->sceneMatrix());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QMatrix,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_sceneMatrix, doc_QGraphicsItem_sceneMatrix);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setMatrix, "QGraphicsItem.setMatrix(QMatrix, bool combine=False)");

extern "C" {static PyObject *meth_QGraphicsItem_setMatrix(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setMatrix(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QMatrix* a0;
        bool a1 = 0;
        QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_combine,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9|b", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QMatrix, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setMatrix(*a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setMatrix, doc_QGraphicsItem_setMatrix);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_resetMatrix, "QGraphicsItem.resetMatrix()");

extern "C" {static PyObject *meth_QGraphicsItem_resetMatrix(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_resetMatrix(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->resetMatrix();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_resetMatrix, doc_QGraphicsItem_resetMatrix);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_rotate, "QGraphicsItem.rotate(float)");

extern "C" {static PyObject *meth_QGraphicsItem_rotate(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_rotate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->rotate(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_rotate, doc_QGraphicsItem_rotate);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_scale, "QGraphicsItem.scale(float, float)\n"
    "QGraphicsItem.scale() -> float");

extern "C" {static PyObject *meth_QGraphicsItem_scale(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scale(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->scale(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->scale();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_scale, doc_QGraphicsItem_scale);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_shear, "QGraphicsItem.shear(float, float)");

extern "C" {static PyObject *meth_QGraphicsItem_shear(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_shear(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->shear(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_shear, doc_QGraphicsItem_shear);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_translate, "QGraphicsItem.translate(float, float)");

extern "C" {static PyObject *meth_QGraphicsItem_translate(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_translate(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->translate(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_translate, doc_QGraphicsItem_translate);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_advance, "QGraphicsItem.advance(int)");

extern "C" {static PyObject *meth_QGraphicsItem_advance(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_advance(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        int a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::advance(a0) : sipCpp->advance(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_advance, doc_QGraphicsItem_advance);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_zValue, "QGraphicsItem.zValue() -> float");

extern "C" {static PyObject *meth_QGraphicsItem_zValue(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_zValue(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->zValue();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_zValue, doc_QGraphicsItem_zValue);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setZValue, "QGraphicsItem.setZValue(float)");

extern "C" {static PyObject *meth_QGraphicsItem_setZValue(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setZValue(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setZValue(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setZValue, doc_QGraphicsItem_setZValue);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_boundingRect, "QGraphicsItem.boundingRect() -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_boundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_boundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QRectF*sipRes;

            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QGraphicsItem, sipName_boundingRect);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->boundingRect());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_boundingRect, doc_QGraphicsItem_boundingRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_childrenBoundingRect, "QGraphicsItem.childrenBoundingRect() -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_childrenBoundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_childrenBoundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->childrenBoundingRect());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_childrenBoundingRect, doc_QGraphicsItem_childrenBoundingRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_sceneBoundingRect, "QGraphicsItem.sceneBoundingRect() -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_sceneBoundingRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneBoundingRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->sceneBoundingRect());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_sceneBoundingRect, doc_QGraphicsItem_sceneBoundingRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_shape, "QGraphicsItem.shape() -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsItem_shape(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_shape(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QPainterPath*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath((sipSelfWasArg ? sipCpp->QGraphicsItem::shape() : sipCpp->shape()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_shape, doc_QGraphicsItem_shape);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_contains, "QGraphicsItem.contains(QPointF) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_contains(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_contains(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QPointF* a0;
        int a0State = 0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::contains(*a0) : sipCpp->contains(*a0));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPointF *>(a0),sipType_QPointF,a0State);

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_contains, doc_QGraphicsItem_contains);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_collidesWithItem, "QGraphicsItem.collidesWithItem(QGraphicsItem, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_collidesWithItem(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_collidesWithItem(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsItem* a0;
        Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        const QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8|E", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::collidesWithItem(a0,a1) : sipCpp->collidesWithItem(a0,a1));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_collidesWithItem, doc_QGraphicsItem_collidesWithItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_collidesWithPath, "QGraphicsItem.collidesWithPath(QPainterPath, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_collidesWithPath(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_collidesWithPath(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QPainterPath* a0;
        Qt::ItemSelectionMode a1 = Qt::IntersectsItemShape;
        const QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9|E", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainterPath, &a0, sipType_Qt_ItemSelectionMode, &a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::collidesWithPath(*a0,a1) : sipCpp->collidesWithPath(*a0,a1));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_collidesWithPath, doc_QGraphicsItem_collidesWithPath);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_collidingItems, "QGraphicsItem.collidingItems(Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> list-of-QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_collidingItems(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_collidingItems(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::ItemSelectionMode a0 = Qt::IntersectsItemShape;
        const QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            sipName_mode,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|E", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_Qt_ItemSelectionMode, &a0))
        {
            QList<QGraphicsItem*>*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem*>(sipCpp->collidingItems(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_collidingItems, doc_QGraphicsItem_collidingItems);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isObscuredBy, "QGraphicsItem.isObscuredBy(QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isObscuredBy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isObscuredBy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsItem* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::isObscuredBy(a0) : sipCpp->isObscuredBy(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isObscuredBy, doc_QGraphicsItem_isObscuredBy);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_opaqueArea, "QGraphicsItem.opaqueArea() -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsItem_opaqueArea(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_opaqueArea(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QPainterPath*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath((sipSelfWasArg ? sipCpp->QGraphicsItem::opaqueArea() : sipCpp->opaqueArea()));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_opaqueArea, doc_QGraphicsItem_opaqueArea);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_paint, "QGraphicsItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None)");

extern "C" {static PyObject *meth_QGraphicsItem_paint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_paint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    PyObject *sipOrigSelf = sipSelf;

    {
        QPainter* a0;
        const QStyleOptionGraphicsItem* a1;
        QWidget* a2 = 0;
        QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_widget,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8J8|J8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            if (!sipOrigSelf)
            {
                sipAbstractMethod(sipName_QGraphicsItem, sipName_paint);
                return NULL;
            }

            Py_BEGIN_ALLOW_THREADS
            sipCpp->paint(a0,a1,a2);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_paint, doc_QGraphicsItem_paint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_update, "QGraphicsItem.update(QRectF rect=QRectF())\n"
    "QGraphicsItem.update(float, float, float, float)");

extern "C" {static PyObject *meth_QGraphicsItem_update(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_update(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QRectF& a0def = QRectF();
        const QRectF* a0 = &a0def;
        QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "B|J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->update(*a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        QGraphicsItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->update(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_update, doc_QGraphicsItem_update);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapToItem, "QGraphicsItem.mapToItem(QGraphicsItem, QPointF) -> QPointF\n"
    "QGraphicsItem.mapToItem(QGraphicsItem, QRectF) -> QPolygonF\n"
    "QGraphicsItem.mapToItem(QGraphicsItem, QPolygonF) -> QPolygonF\n"
    "QGraphicsItem.mapToItem(QGraphicsItem, QPainterPath) -> QPainterPath\n"
    "QGraphicsItem.mapToItem(QGraphicsItem, float, float) -> QPointF\n"
    "QGraphicsItem.mapToItem(QGraphicsItem, float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapToItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapToItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem* a0;
        const QPointF* a1;
        int a1State = 0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPointF, &a1, &a1State))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToItem(a0,*a1));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPointF *>(a1),sipType_QPointF,a1State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        const QRectF* a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QRectF, &a1))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        const QPolygonF* a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPolygonF, &a1))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        const QPainterPath* a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPainterPath, &a1))
        {
            QPainterPath*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapToItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        qreal a1;
        qreal a2;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToItem(a0,a1,a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        qreal a1;
        qreal a2;
        qreal a3;
        qreal a4;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2, &a3, &a4))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToItem(a0,a1,a2,a3,a4));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapToItem, doc_QGraphicsItem_mapToItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapToParent, "QGraphicsItem.mapToParent(QPointF) -> QPointF\n"
    "QGraphicsItem.mapToParent(QRectF) -> QPolygonF\n"
    "QGraphicsItem.mapToParent(QPolygonF) -> QPolygonF\n"
    "QGraphicsItem.mapToParent(QPainterPath) -> QPainterPath\n"
    "QGraphicsItem.mapToParent(float, float) -> QPointF\n"
    "QGraphicsItem.mapToParent(float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapToParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapToParent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPointF* a0;
        int a0State = 0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToParent(*a0));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QRectF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPolygonF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPolygonF, &a0))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPainterPath* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainterPath, &a0))
        {
            QPainterPath*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapToParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToParent(a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToParent(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapToParent, doc_QGraphicsItem_mapToParent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapToScene, "QGraphicsItem.mapToScene(QPointF) -> QPointF\n"
    "QGraphicsItem.mapToScene(QRectF) -> QPolygonF\n"
    "QGraphicsItem.mapToScene(QPolygonF) -> QPolygonF\n"
    "QGraphicsItem.mapToScene(QPainterPath) -> QPainterPath\n"
    "QGraphicsItem.mapToScene(float, float) -> QPointF\n"
    "QGraphicsItem.mapToScene(float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapToScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapToScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPointF* a0;
        int a0State = 0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToScene(*a0));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QRectF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPolygonF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPolygonF, &a0))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPainterPath* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainterPath, &a0))
        {
            QPainterPath*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapToScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapToScene(a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapToScene(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapToScene, doc_QGraphicsItem_mapToScene);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapFromItem, "QGraphicsItem.mapFromItem(QGraphicsItem, QPointF) -> QPointF\n"
    "QGraphicsItem.mapFromItem(QGraphicsItem, QRectF) -> QPolygonF\n"
    "QGraphicsItem.mapFromItem(QGraphicsItem, QPolygonF) -> QPolygonF\n"
    "QGraphicsItem.mapFromItem(QGraphicsItem, QPainterPath) -> QPainterPath\n"
    "QGraphicsItem.mapFromItem(QGraphicsItem, float, float) -> QPointF\n"
    "QGraphicsItem.mapFromItem(QGraphicsItem, float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapFromItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapFromItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem* a0;
        const QPointF* a1;
        int a1State = 0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPointF, &a1, &a1State))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromItem(a0,*a1));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPointF *>(a1),sipType_QPointF,a1State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        const QRectF* a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QRectF, &a1))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        const QPolygonF* a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPolygonF, &a1))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        const QPainterPath* a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QPainterPath, &a1))
        {
            QPainterPath*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapFromItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        qreal a1;
        qreal a2;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromItem(a0,a1,a2));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        qreal a1;
        qreal a2;
        qreal a3;
        qreal a4;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2, &a3, &a4))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromItem(a0,a1,a2,a3,a4));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapFromItem, doc_QGraphicsItem_mapFromItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapFromParent, "QGraphicsItem.mapFromParent(QPointF) -> QPointF\n"
    "QGraphicsItem.mapFromParent(QRectF) -> QPolygonF\n"
    "QGraphicsItem.mapFromParent(QPolygonF) -> QPolygonF\n"
    "QGraphicsItem.mapFromParent(QPainterPath) -> QPainterPath\n"
    "QGraphicsItem.mapFromParent(float, float) -> QPointF\n"
    "QGraphicsItem.mapFromParent(float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapFromParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapFromParent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPointF* a0;
        int a0State = 0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromParent(*a0));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QRectF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPolygonF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPolygonF, &a0))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPainterPath* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainterPath, &a0))
        {
            QPainterPath*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapFromParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromParent(a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromParent(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapFromParent, doc_QGraphicsItem_mapFromParent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapFromScene, "QGraphicsItem.mapFromScene(QPointF) -> QPointF\n"
    "QGraphicsItem.mapFromScene(QRectF) -> QPolygonF\n"
    "QGraphicsItem.mapFromScene(QPolygonF) -> QPolygonF\n"
    "QGraphicsItem.mapFromScene(QPainterPath) -> QPainterPath\n"
    "QGraphicsItem.mapFromScene(float, float) -> QPointF\n"
    "QGraphicsItem.mapFromScene(float, float, float, float) -> QPolygonF");

extern "C" {static PyObject *meth_QGraphicsItem_mapFromScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapFromScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPointF* a0;
        int a0State = 0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromScene(*a0));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPointF *>(a0),sipType_QPointF,a0State);

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        const QRectF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPolygonF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPolygonF, &a0))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    {
        const QPainterPath* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPainterPath, &a0))
        {
            QPainterPath*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->mapFromScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->mapFromScene(a0,a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            QPolygonF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPolygonF(sipCpp->mapFromScene(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPolygonF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapFromScene, doc_QGraphicsItem_mapFromScene);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isAncestorOf, "QGraphicsItem.isAncestorOf(QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isAncestorOf(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isAncestorOf(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isAncestorOf(a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isAncestorOf, doc_QGraphicsItem_isAncestorOf);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_data, "QGraphicsItem.data(int) -> QVariant");

extern "C" {static PyObject *meth_QGraphicsItem_data(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_data(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bi", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            QVariant*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant(sipCpp->data(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_data, doc_QGraphicsItem_data);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setData, "QGraphicsItem.setData(int, QVariant)");

extern "C" {static PyObject *meth_QGraphicsItem_setData(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setData(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        int a0;
        const QVariant* a1;
        int a1State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BiJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, sipType_QVariant,&a1, &a1State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setData(a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setData, doc_QGraphicsItem_setData);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_type, "QGraphicsItem.type() -> int");

extern "C" {static PyObject *meth_QGraphicsItem_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::type() : sipCpp->type());
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_type, doc_QGraphicsItem_type);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_installSceneEventFilter, "QGraphicsItem.installSceneEventFilter(QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItem_installSceneEventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_installSceneEventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->installSceneEventFilter(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_installSceneEventFilter, doc_QGraphicsItem_installSceneEventFilter);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_removeSceneEventFilter, "QGraphicsItem.removeSceneEventFilter(QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItem_removeSceneEventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_removeSceneEventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->removeSceneEventFilter(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_removeSceneEventFilter, doc_QGraphicsItem_removeSceneEventFilter);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_contextMenuEvent, "QGraphicsItem.contextMenuEvent(QGraphicsSceneContextMenuEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneContextMenuEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneContextMenuEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::contextMenuEvent(a0) : sipCpp->contextMenuEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_contextMenuEvent, doc_QGraphicsItem_contextMenuEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_dragEnterEvent, "QGraphicsItem.dragEnterEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::dragEnterEvent(a0) : sipCpp->dragEnterEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_dragEnterEvent, doc_QGraphicsItem_dragEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_dragLeaveEvent, "QGraphicsItem.dragLeaveEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::dragLeaveEvent(a0) : sipCpp->dragLeaveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_dragLeaveEvent, doc_QGraphicsItem_dragLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_dragMoveEvent, "QGraphicsItem.dragMoveEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::dragMoveEvent(a0) : sipCpp->dragMoveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_dragMoveEvent, doc_QGraphicsItem_dragMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_dropEvent, "QGraphicsItem.dropEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::dropEvent(a0) : sipCpp->dropEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_dropEvent, doc_QGraphicsItem_dropEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_focusInEvent, "QGraphicsItem.focusInEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::focusInEvent(a0) : sipCpp->focusInEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_focusInEvent, doc_QGraphicsItem_focusInEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_focusOutEvent, "QGraphicsItem.focusOutEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QFocusEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::focusOutEvent(a0) : sipCpp->focusOutEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_focusOutEvent, doc_QGraphicsItem_focusOutEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_hoverEnterEvent, "QGraphicsItem.hoverEnterEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_hoverEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hoverEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::hoverEnterEvent(a0) : sipCpp->hoverEnterEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hoverEnterEvent, doc_QGraphicsItem_hoverEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_hoverLeaveEvent, "QGraphicsItem.hoverLeaveEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_hoverLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::hoverLeaveEvent(a0) : sipCpp->hoverLeaveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hoverLeaveEvent, doc_QGraphicsItem_hoverLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_hoverMoveEvent, "QGraphicsItem.hoverMoveEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_hoverMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::hoverMoveEvent(a0) : sipCpp->hoverMoveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_hoverMoveEvent, doc_QGraphicsItem_hoverMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_inputMethodEvent, "QGraphicsItem.inputMethodEvent(QInputMethodEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_inputMethodEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_inputMethodEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QInputMethodEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QInputMethodEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::inputMethodEvent(a0) : sipCpp->inputMethodEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_inputMethodEvent, doc_QGraphicsItem_inputMethodEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_inputMethodQuery, "QGraphicsItem.inputMethodQuery(Qt.InputMethodQuery) -> QVariant");

extern "C" {static PyObject *meth_QGraphicsItem_inputMethodQuery(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_inputMethodQuery(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::InputMethodQuery a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pE", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_Qt_InputMethodQuery, &a0))
        {
            QVariant*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant((sipSelfWasArg ? sipCpp->QGraphicsItem::inputMethodQuery(a0) : sipCpp->inputMethodQuery(a0)));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_inputMethodQuery, doc_QGraphicsItem_inputMethodQuery);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_itemChange, "QGraphicsItem.itemChange(QGraphicsItem.GraphicsItemChange, QVariant) -> QVariant");

extern "C" {static PyObject *meth_QGraphicsItem_itemChange(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_itemChange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem::GraphicsItemChange a0;
        const QVariant* a1;
        int a1State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pEJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem_GraphicsItemChange, &a0, sipType_QVariant,&a1, &a1State))
        {
            QVariant*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant((sipSelfWasArg ? sipCpp->QGraphicsItem::itemChange(a0,*a1) : sipCpp->itemChange(a0,*a1)));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_itemChange, doc_QGraphicsItem_itemChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_keyPressEvent, "QGraphicsItem.keyPressEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::keyPressEvent(a0) : sipCpp->keyPressEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_keyPressEvent, doc_QGraphicsItem_keyPressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_keyReleaseEvent, "QGraphicsItem.keyReleaseEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_keyReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QKeyEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::keyReleaseEvent(a0) : sipCpp->keyReleaseEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_keyReleaseEvent, doc_QGraphicsItem_keyReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mouseDoubleClickEvent, "QGraphicsItem.mouseDoubleClickEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::mouseDoubleClickEvent(a0) : sipCpp->mouseDoubleClickEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mouseDoubleClickEvent, doc_QGraphicsItem_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mouseMoveEvent, "QGraphicsItem.mouseMoveEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::mouseMoveEvent(a0) : sipCpp->mouseMoveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mouseMoveEvent, doc_QGraphicsItem_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mousePressEvent, "QGraphicsItem.mousePressEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::mousePressEvent(a0) : sipCpp->mousePressEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mousePressEvent, doc_QGraphicsItem_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mouseReleaseEvent, "QGraphicsItem.mouseReleaseEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::mouseReleaseEvent(a0) : sipCpp->mouseReleaseEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mouseReleaseEvent, doc_QGraphicsItem_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_prepareGeometryChange, "QGraphicsItem.prepareGeometryChange()");

extern "C" {static PyObject *meth_QGraphicsItem_prepareGeometryChange(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_prepareGeometryChange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->prepareGeometryChange();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_prepareGeometryChange, doc_QGraphicsItem_prepareGeometryChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_sceneEvent, "QGraphicsItem.sceneEvent(QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_sceneEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::sceneEvent(a0) : sipCpp->sceneEvent(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_sceneEvent, doc_QGraphicsItem_sceneEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_sceneEventFilter, "QGraphicsItem.sceneEventFilter(QGraphicsItem, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_sceneEventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneEventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem* a0;
        QEvent* a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8J8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsItem::sceneEventFilter(a0,a1) : sipCpp->sceneEventFilter(a0,a1));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_sceneEventFilter, doc_QGraphicsItem_sceneEventFilter);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_wheelEvent, "QGraphicsItem.wheelEvent(QGraphicsSceneWheelEvent)");

extern "C" {static PyObject *meth_QGraphicsItem_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneWheelEvent* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsSceneWheelEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsItem::wheelEvent(a0) : sipCpp->wheelEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_wheelEvent, doc_QGraphicsItem_wheelEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_transform, "QGraphicsItem.transform() -> QTransform");

extern "C" {static PyObject *meth_QGraphicsItem_transform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_transform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QTransform*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QTransform(sipCpp->transform());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QTransform,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_transform, doc_QGraphicsItem_transform);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_sceneTransform, "QGraphicsItem.sceneTransform() -> QTransform");

extern "C" {static PyObject *meth_QGraphicsItem_sceneTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_sceneTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QTransform*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QTransform(sipCpp->sceneTransform());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QTransform,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_sceneTransform, doc_QGraphicsItem_sceneTransform);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_deviceTransform, "QGraphicsItem.deviceTransform(QTransform) -> QTransform");

extern "C" {static PyObject *meth_QGraphicsItem_deviceTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_deviceTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QTransform* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QTransform, &a0))
        {
            QTransform*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QTransform(sipCpp->deviceTransform(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QTransform,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_deviceTransform, doc_QGraphicsItem_deviceTransform);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setTransform, "QGraphicsItem.setTransform(QTransform, bool combine=False)");

extern "C" {static PyObject *meth_QGraphicsItem_setTransform(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setTransform(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QTransform* a0;
        bool a1 = 0;
        QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_combine,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ9|b", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QTransform, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setTransform(*a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setTransform, doc_QGraphicsItem_setTransform);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_resetTransform, "QGraphicsItem.resetTransform()");

extern "C" {static PyObject *meth_QGraphicsItem_resetTransform(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_resetTransform(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->resetTransform();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_resetTransform, doc_QGraphicsItem_resetTransform);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isObscured, "QGraphicsItem.isObscured() -> bool\n"
    "QGraphicsItem.isObscured(QRectF) -> bool\n"
    "QGraphicsItem.isObscured(float, float, float, float) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isObscured(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isObscured(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isObscured();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    {
        const QRectF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isObscured(*a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isObscured(a0,a1,a2,a3);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isObscured, doc_QGraphicsItem_isObscured);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_parentWidget, "QGraphicsItem.parentWidget() -> QGraphicsWidget");

extern "C" {static PyObject *meth_QGraphicsItem_parentWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_parentWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->parentWidget();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_parentWidget, doc_QGraphicsItem_parentWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_topLevelWidget, "QGraphicsItem.topLevelWidget() -> QGraphicsWidget");

extern "C" {static PyObject *meth_QGraphicsItem_topLevelWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_topLevelWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->topLevelWidget();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_topLevelWidget, doc_QGraphicsItem_topLevelWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_window, "QGraphicsItem.window() -> QGraphicsWidget");

extern "C" {static PyObject *meth_QGraphicsItem_window(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_window(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->window();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_window, doc_QGraphicsItem_window);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_childItems, "QGraphicsItem.childItems() -> list-of-QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_childItems(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_childItems(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QList<QGraphicsItem*>*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsItem*>(sipCpp->childItems());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_childItems, doc_QGraphicsItem_childItems);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isWidget, "QGraphicsItem.isWidget() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isWidget();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isWidget, doc_QGraphicsItem_isWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isWindow, "QGraphicsItem.isWindow() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isWindow(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isWindow(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isWindow();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isWindow, doc_QGraphicsItem_isWindow);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_cacheMode, "QGraphicsItem.cacheMode() -> QGraphicsItem.CacheMode");

extern "C" {static PyObject *meth_QGraphicsItem_cacheMode(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_cacheMode(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsItem::CacheMode sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->cacheMode();
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_QGraphicsItem_CacheMode);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_cacheMode, doc_QGraphicsItem_cacheMode);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setCacheMode, "QGraphicsItem.setCacheMode(QGraphicsItem.CacheMode, QSize logicalCacheSize=QSize())");

extern "C" {static PyObject *meth_QGraphicsItem_setCacheMode(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setCacheMode(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem::CacheMode a0;
        const QSize& a1def = QSize();
        const QSize* a1 = &a1def;
        QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_logicalCacheSize,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BE|J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem_CacheMode, &a0, sipType_QSize, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setCacheMode(a0,*a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setCacheMode, doc_QGraphicsItem_setCacheMode);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isVisibleTo, "QGraphicsItem.isVisibleTo(QGraphicsItem) -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isVisibleTo(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isVisibleTo(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isVisibleTo(a0);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isVisibleTo, doc_QGraphicsItem_isVisibleTo);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_acceptHoverEvents, "QGraphicsItem.acceptHoverEvents() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_acceptHoverEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptHoverEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->acceptHoverEvents();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_acceptHoverEvents, doc_QGraphicsItem_acceptHoverEvents);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setAcceptHoverEvents, "QGraphicsItem.setAcceptHoverEvents(bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setAcceptHoverEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptHoverEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setAcceptHoverEvents(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setAcceptHoverEvents, doc_QGraphicsItem_setAcceptHoverEvents);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_grabMouse, "QGraphicsItem.grabMouse()");

extern "C" {static PyObject *meth_QGraphicsItem_grabMouse(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_grabMouse(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->grabMouse();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_grabMouse, doc_QGraphicsItem_grabMouse);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_ungrabMouse, "QGraphicsItem.ungrabMouse()");

extern "C" {static PyObject *meth_QGraphicsItem_ungrabMouse(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_ungrabMouse(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->ungrabMouse();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_ungrabMouse, doc_QGraphicsItem_ungrabMouse);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_grabKeyboard, "QGraphicsItem.grabKeyboard()");

extern "C" {static PyObject *meth_QGraphicsItem_grabKeyboard(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_grabKeyboard(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->grabKeyboard();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_grabKeyboard, doc_QGraphicsItem_grabKeyboard);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_ungrabKeyboard, "QGraphicsItem.ungrabKeyboard()");

extern "C" {static PyObject *meth_QGraphicsItem_ungrabKeyboard(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_ungrabKeyboard(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->ungrabKeyboard();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_ungrabKeyboard, doc_QGraphicsItem_ungrabKeyboard);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_boundingRegion, "QGraphicsItem.boundingRegion(QTransform) -> QRegion");

extern "C" {static PyObject *meth_QGraphicsItem_boundingRegion(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_boundingRegion(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QTransform* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QTransform, &a0))
        {
            QRegion*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRegion(sipCpp->boundingRegion(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRegion,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_boundingRegion, doc_QGraphicsItem_boundingRegion);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_boundingRegionGranularity, "QGraphicsItem.boundingRegionGranularity() -> float");

extern "C" {static PyObject *meth_QGraphicsItem_boundingRegionGranularity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_boundingRegionGranularity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->boundingRegionGranularity();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_boundingRegionGranularity, doc_QGraphicsItem_boundingRegionGranularity);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setBoundingRegionGranularity, "QGraphicsItem.setBoundingRegionGranularity(float)");

extern "C" {static PyObject *meth_QGraphicsItem_setBoundingRegionGranularity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setBoundingRegionGranularity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setBoundingRegionGranularity(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setBoundingRegionGranularity, doc_QGraphicsItem_setBoundingRegionGranularity);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_scroll, "QGraphicsItem.scroll(float, float, QRectF rect=QRectF())");

extern "C" {static PyObject *meth_QGraphicsItem_scroll(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_scroll(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        qreal a1;
        const QRectF& a2def = QRectF();
        const QRectF* a2 = &a2def;
        QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            NULL,
            sipName_rect,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "Bdd|J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, sipType_QRectF, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->scroll(a0,a1,*a2);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_scroll, doc_QGraphicsItem_scroll);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_commonAncestorItem, "QGraphicsItem.commonAncestorItem(QGraphicsItem) -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_commonAncestorItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_commonAncestorItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            QGraphicsItem*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->commonAncestorItem(a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_commonAncestorItem, doc_QGraphicsItem_commonAncestorItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isUnderMouse, "QGraphicsItem.isUnderMouse() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isUnderMouse(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isUnderMouse(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isUnderMouse();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isUnderMouse, doc_QGraphicsItem_isUnderMouse);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_opacity, "QGraphicsItem.opacity() -> float");

extern "C" {static PyObject *meth_QGraphicsItem_opacity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_opacity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->opacity();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_opacity, doc_QGraphicsItem_opacity);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_effectiveOpacity, "QGraphicsItem.effectiveOpacity() -> float");

extern "C" {static PyObject *meth_QGraphicsItem_effectiveOpacity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_effectiveOpacity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->effectiveOpacity();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_effectiveOpacity, doc_QGraphicsItem_effectiveOpacity);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setOpacity, "QGraphicsItem.setOpacity(float)");

extern "C" {static PyObject *meth_QGraphicsItem_setOpacity(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setOpacity(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setOpacity(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setOpacity, doc_QGraphicsItem_setOpacity);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_itemTransform, "QGraphicsItem.itemTransform(QGraphicsItem) -> (QTransform, bool)");

extern "C" {static PyObject *meth_QGraphicsItem_itemTransform(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_itemTransform(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem* a0;
        bool a1;
        const QGraphicsItem *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            QTransform*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QTransform(sipCpp->itemTransform(a0,&a1));
            Py_END_ALLOW_THREADS

            PyObject *sipResObj = sipConvertFromNewType(sipRes,sipType_QTransform,NULL);
            return sipBuildResult(0,"(Rb)",sipResObj,a1);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_itemTransform, doc_QGraphicsItem_itemTransform);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isClipped, "QGraphicsItem.isClipped() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isClipped(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isClipped(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isClipped();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isClipped, doc_QGraphicsItem_isClipped);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_clipPath, "QGraphicsItem.clipPath() -> QPainterPath");

extern "C" {static PyObject *meth_QGraphicsItem_clipPath(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_clipPath(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QPainterPath*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPainterPath(sipCpp->clipPath());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPainterPath,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_clipPath, doc_QGraphicsItem_clipPath);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectToItem, "QGraphicsItem.mapRectToItem(QGraphicsItem, QRectF) -> QRectF\n"
    "QGraphicsItem.mapRectToItem(QGraphicsItem, float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectToItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectToItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem* a0;
        const QRectF* a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QRectF, &a1))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        qreal a1;
        qreal a2;
        qreal a3;
        qreal a4;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2, &a3, &a4))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToItem(a0,a1,a2,a3,a4));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectToItem, doc_QGraphicsItem_mapRectToItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectToParent, "QGraphicsItem.mapRectToParent(QRectF) -> QRectF\n"
    "QGraphicsItem.mapRectToParent(float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectToParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectToParent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QRectF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToParent(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectToParent, doc_QGraphicsItem_mapRectToParent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectToScene, "QGraphicsItem.mapRectToScene(QRectF) -> QRectF\n"
    "QGraphicsItem.mapRectToScene(float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectToScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectToScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QRectF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectToScene(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectToScene, doc_QGraphicsItem_mapRectToScene);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectFromItem, "QGraphicsItem.mapRectFromItem(QGraphicsItem, QRectF) -> QRectF\n"
    "QGraphicsItem.mapRectFromItem(QGraphicsItem, float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectFromItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectFromItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem* a0;
        const QRectF* a1;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, sipType_QRectF, &a1))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromItem(a0,*a1));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        const QGraphicsItem* a0;
        qreal a1;
        qreal a2;
        qreal a3;
        qreal a4;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8dddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0, &a1, &a2, &a3, &a4))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromItem(a0,a1,a2,a3,a4));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectFromItem, doc_QGraphicsItem_mapRectFromItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectFromParent, "QGraphicsItem.mapRectFromParent(QRectF) -> QRectF\n"
    "QGraphicsItem.mapRectFromParent(float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectFromParent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectFromParent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QRectF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromParent(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromParent(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectFromParent, doc_QGraphicsItem_mapRectFromParent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_mapRectFromScene, "QGraphicsItem.mapRectFromScene(QRectF) -> QRectF\n"
    "QGraphicsItem.mapRectFromScene(float, float, float, float) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsItem_mapRectFromScene(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_mapRectFromScene(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QRectF* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QRectF, &a0))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromScene(*a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    {
        qreal a0;
        qreal a1;
        qreal a2;
        qreal a3;
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdddd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1, &a2, &a3))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->mapRectFromScene(a0,a1,a2,a3));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_mapRectFromScene, doc_QGraphicsItem_mapRectFromScene);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_parentObject, "QGraphicsItem.parentObject() -> QGraphicsObject");

extern "C" {static PyObject *meth_QGraphicsItem_parentObject(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_parentObject(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsObject*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->parentObject();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsObject,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_parentObject, doc_QGraphicsItem_parentObject);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_panel, "QGraphicsItem.panel() -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_panel(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_panel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsItem*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->panel();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_panel, doc_QGraphicsItem_panel);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isPanel, "QGraphicsItem.isPanel() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isPanel(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isPanel(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isPanel();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isPanel, doc_QGraphicsItem_isPanel);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_toGraphicsObject, "QGraphicsItem.toGraphicsObject() -> QGraphicsObject");

extern "C" {static PyObject *meth_QGraphicsItem_toGraphicsObject(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_toGraphicsObject(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsObject*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->toGraphicsObject();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsObject,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_toGraphicsObject, doc_QGraphicsItem_toGraphicsObject);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_panelModality, "QGraphicsItem.panelModality() -> QGraphicsItem.PanelModality");

extern "C" {static PyObject *meth_QGraphicsItem_panelModality(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_panelModality(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsItem::PanelModality sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->panelModality();
            Py_END_ALLOW_THREADS

            return sipConvertFromEnum(sipRes,sipType_QGraphicsItem_PanelModality);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_panelModality, doc_QGraphicsItem_panelModality);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setPanelModality, "QGraphicsItem.setPanelModality(QGraphicsItem.PanelModality)");

extern "C" {static PyObject *meth_QGraphicsItem_setPanelModality(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setPanelModality(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem::PanelModality a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BE", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem_PanelModality, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setPanelModality(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setPanelModality, doc_QGraphicsItem_setPanelModality);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isBlockedByModalPanel, "QGraphicsItem.isBlockedByModalPanel() -> (bool, QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItem_isBlockedByModalPanel(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isBlockedByModalPanel(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem* a0;
        const QGraphicsItem *sipCpp;

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, NULL, NULL, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isBlockedByModalPanel(&a0);
            Py_END_ALLOW_THREADS

            return sipBuildResult(0,"(bD)",sipRes,a0,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isBlockedByModalPanel, doc_QGraphicsItem_isBlockedByModalPanel);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_graphicsEffect, "QGraphicsItem.graphicsEffect() -> QGraphicsEffect");

extern "C" {static PyObject *meth_QGraphicsItem_graphicsEffect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_graphicsEffect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsEffect*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->graphicsEffect();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsEffect,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_graphicsEffect, doc_QGraphicsItem_graphicsEffect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setGraphicsEffect, "QGraphicsItem.setGraphicsEffect(QGraphicsEffect)");

extern "C" {static PyObject *meth_QGraphicsItem_setGraphicsEffect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setGraphicsEffect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsEffect* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsEffect, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setGraphicsEffect(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setGraphicsEffect, doc_QGraphicsItem_setGraphicsEffect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_acceptTouchEvents, "QGraphicsItem.acceptTouchEvents() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_acceptTouchEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_acceptTouchEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->acceptTouchEvents();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_acceptTouchEvents, doc_QGraphicsItem_acceptTouchEvents);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setAcceptTouchEvents, "QGraphicsItem.setAcceptTouchEvents(bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setAcceptTouchEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setAcceptTouchEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setAcceptTouchEvents(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setAcceptTouchEvents, doc_QGraphicsItem_setAcceptTouchEvents);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_filtersChildEvents, "QGraphicsItem.filtersChildEvents() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_filtersChildEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_filtersChildEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->filtersChildEvents();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_filtersChildEvents, doc_QGraphicsItem_filtersChildEvents);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setFiltersChildEvents, "QGraphicsItem.setFiltersChildEvents(bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setFiltersChildEvents(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFiltersChildEvents(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFiltersChildEvents(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setFiltersChildEvents, doc_QGraphicsItem_setFiltersChildEvents);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_isActive, "QGraphicsItem.isActive() -> bool");

extern "C" {static PyObject *meth_QGraphicsItem_isActive(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_isActive(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->isActive();
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_isActive, doc_QGraphicsItem_isActive);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setActive, "QGraphicsItem.setActive(bool)");

extern "C" {static PyObject *meth_QGraphicsItem_setActive(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setActive(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        bool a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bb", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setActive(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setActive, doc_QGraphicsItem_setActive);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_focusProxy, "QGraphicsItem.focusProxy() -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_focusProxy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_focusProxy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsItem*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->focusProxy();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_focusProxy, doc_QGraphicsItem_focusProxy);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setFocusProxy, "QGraphicsItem.setFocusProxy(QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItem_setFocusProxy(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setFocusProxy(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem* a0;
        PyObject *a0Keep;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J8", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0Keep, sipType_QGraphicsItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setFocusProxy(a0);
            Py_END_ALLOW_THREADS

            sipKeepReference(sipSelf, -27, a0Keep);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setFocusProxy, doc_QGraphicsItem_setFocusProxy);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_focusItem, "QGraphicsItem.focusItem() -> QGraphicsItem");

extern "C" {static PyObject *meth_QGraphicsItem_focusItem(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_focusItem(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QGraphicsItem*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->focusItem();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QGraphicsItem,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_focusItem, doc_QGraphicsItem_focusItem);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setX, "QGraphicsItem.setX(float)");

extern "C" {static PyObject *meth_QGraphicsItem_setX(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setX(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setX(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setX, doc_QGraphicsItem_setX);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setY, "QGraphicsItem.setY(float)");

extern "C" {static PyObject *meth_QGraphicsItem_setY(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setY(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setY(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setY, doc_QGraphicsItem_setY);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setRotation, "QGraphicsItem.setRotation(float)");

extern "C" {static PyObject *meth_QGraphicsItem_setRotation(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setRotation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setRotation(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setRotation, doc_QGraphicsItem_setRotation);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_rotation, "QGraphicsItem.rotation() -> float");

extern "C" {static PyObject *meth_QGraphicsItem_rotation(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_rotation(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            qreal sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->rotation();
            Py_END_ALLOW_THREADS

            return PyFloat_FromDouble(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_rotation, doc_QGraphicsItem_rotation);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setScale, "QGraphicsItem.setScale(float)");

extern "C" {static PyObject *meth_QGraphicsItem_setScale(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setScale(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        qreal a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setScale(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setScale, doc_QGraphicsItem_setScale);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_transformations, "QGraphicsItem.transformations() -> list-of-QGraphicsTransform");

extern "C" {static PyObject *meth_QGraphicsItem_transformations(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_transformations(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QList<QGraphicsTransform*>*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QList<QGraphicsTransform*>(sipCpp->transformations());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QList_0101QGraphicsTransform,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_transformations, doc_QGraphicsItem_transformations);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setTransformations, "QGraphicsItem.setTransformations(list-of-QGraphicsTransform)");

extern "C" {static PyObject *meth_QGraphicsItem_setTransformations(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setTransformations(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QList<QGraphicsTransform*>* a0;
        PyObject *a0Keep;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B@J1", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0Keep, sipType_QList_0101QGraphicsTransform,&a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setTransformations(*a0);
            Py_END_ALLOW_THREADS

            sipKeepReference(sipSelf, -28, a0Keep);
            sipReleaseType(const_cast<QList<QGraphicsTransform*> *>(a0),sipType_QList_0101QGraphicsTransform,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setTransformations, doc_QGraphicsItem_setTransformations);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_transformOriginPoint, "QGraphicsItem.transformOriginPoint() -> QPointF");

extern "C" {static PyObject *meth_QGraphicsItem_transformOriginPoint(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_transformOriginPoint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            QPointF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QPointF(sipCpp->transformOriginPoint());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QPointF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_transformOriginPoint, doc_QGraphicsItem_transformOriginPoint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setTransformOriginPoint, "QGraphicsItem.setTransformOriginPoint(QPointF)\n"
    "QGraphicsItem.setTransformOriginPoint(float, float)");

extern "C" {static PyObject *meth_QGraphicsItem_setTransformOriginPoint(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setTransformOriginPoint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QPointF* a0;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QPointF, &a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setTransformOriginPoint(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QPointF *>(a0),sipType_QPointF,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    {
        qreal a0;
        qreal a1;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "Bdd", &sipSelf, sipType_QGraphicsItem, &sipCpp, &a0, &a1))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setTransformOriginPoint(a0,a1);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setTransformOriginPoint, doc_QGraphicsItem_setTransformOriginPoint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_stackBefore, "QGraphicsItem.stackBefore(QGraphicsItem)");

extern "C" {static PyObject *meth_QGraphicsItem_stackBefore(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_stackBefore(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem* a0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_QGraphicsItem, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->stackBefore(a0);
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_stackBefore, doc_QGraphicsItem_stackBefore);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_inputMethodHints, "QGraphicsItem.inputMethodHints() -> Qt.InputMethodHints");

extern "C" {static PyObject *meth_QGraphicsItem_inputMethodHints(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_inputMethodHints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Qt::InputMethodHints*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new Qt::InputMethodHints(sipCpp->inputMethodHints());
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_Qt_InputMethodHints,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_inputMethodHints, doc_QGraphicsItem_inputMethodHints);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_setInputMethodHints, "QGraphicsItem.setInputMethodHints(Qt.InputMethodHints)");

extern "C" {static PyObject *meth_QGraphicsItem_setInputMethodHints(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_setInputMethodHints(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        Qt::InputMethodHints* a0;
        int a0State = 0;
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ1", &sipSelf, sipType_QGraphicsItem, &sipCpp, sipType_Qt_InputMethodHints, &a0, &a0State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->setInputMethodHints(*a0);
            Py_END_ALLOW_THREADS
            sipReleaseType(a0,sipType_Qt_InputMethodHints,a0State);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_setInputMethodHints, doc_QGraphicsItem_setInputMethodHints);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsItem_updateMicroFocus, "QGraphicsItem.updateMicroFocus()");

extern "C" {static PyObject *meth_QGraphicsItem_updateMicroFocus(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsItem_updateMicroFocus(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QGraphicsItem *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "p", &sipSelf, sipType_QGraphicsItem, &sipCpp))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp->updateMicroFocus();
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsItem, sipName_updateMicroFocus, doc_QGraphicsItem_updateMicroFocus);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QGraphicsItem(void *, const sipTypeDef *);}
static void *cast_QGraphicsItem(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_QGraphicsItem)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsItem(void *, int);}
static void release_QGraphicsItem(void *sipCppV,int sipState)
{
    Py_BEGIN_ALLOW_THREADS

    if (sipState & SIP_DERIVED_CLASS)
        delete reinterpret_cast<sipQGraphicsItem *>(sipCppV);
    else
        delete reinterpret_cast<QGraphicsItem *>(sipCppV);

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QGraphicsItem(sipSimpleWrapper *);}
static void dealloc_QGraphicsItem(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsItem *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsItem(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QGraphicsItem(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsItem(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsItem *sipCpp = 0;

    {
        QGraphicsItem* a0 = 0;
        QGraphicsScene* a1 = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_scene,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JHJH", sipType_QGraphicsItem, &a0, sipOwner, sipType_QGraphicsScene, &a1, sipOwner))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQGraphicsItem(a0,a1);
            Py_END_ALLOW_THREADS

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


static PyMethodDef methods_QGraphicsItem[] = {
    {SIP_MLNAME_CAST(sipName_acceptDrops), meth_QGraphicsItem_acceptDrops, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_acceptDrops)},
    {SIP_MLNAME_CAST(sipName_acceptHoverEvents), meth_QGraphicsItem_acceptHoverEvents, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_acceptHoverEvents)},
    {SIP_MLNAME_CAST(sipName_acceptTouchEvents), meth_QGraphicsItem_acceptTouchEvents, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_acceptTouchEvents)},
    {SIP_MLNAME_CAST(sipName_acceptedMouseButtons), meth_QGraphicsItem_acceptedMouseButtons, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_acceptedMouseButtons)},
    {SIP_MLNAME_CAST(sipName_acceptsHoverEvents), meth_QGraphicsItem_acceptsHoverEvents, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_acceptsHoverEvents)},
    {SIP_MLNAME_CAST(sipName_advance), meth_QGraphicsItem_advance, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_advance)},
    {SIP_MLNAME_CAST(sipName_boundingRect), meth_QGraphicsItem_boundingRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_boundingRect)},
    {SIP_MLNAME_CAST(sipName_boundingRegion), meth_QGraphicsItem_boundingRegion, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_boundingRegion)},
    {SIP_MLNAME_CAST(sipName_boundingRegionGranularity), meth_QGraphicsItem_boundingRegionGranularity, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_boundingRegionGranularity)},
    {SIP_MLNAME_CAST(sipName_cacheMode), meth_QGraphicsItem_cacheMode, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_cacheMode)},
    {SIP_MLNAME_CAST(sipName_childItems), meth_QGraphicsItem_childItems, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_childItems)},
    {SIP_MLNAME_CAST(sipName_childrenBoundingRect), meth_QGraphicsItem_childrenBoundingRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_childrenBoundingRect)},
    {SIP_MLNAME_CAST(sipName_clearFocus), meth_QGraphicsItem_clearFocus, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_clearFocus)},
    {SIP_MLNAME_CAST(sipName_clipPath), meth_QGraphicsItem_clipPath, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_clipPath)},
    {SIP_MLNAME_CAST(sipName_collidesWithItem), (PyCFunction)meth_QGraphicsItem_collidesWithItem, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_collidesWithItem)},
    {SIP_MLNAME_CAST(sipName_collidesWithPath), (PyCFunction)meth_QGraphicsItem_collidesWithPath, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_collidesWithPath)},
    {SIP_MLNAME_CAST(sipName_collidingItems), (PyCFunction)meth_QGraphicsItem_collidingItems, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_collidingItems)},
    {SIP_MLNAME_CAST(sipName_commonAncestorItem), meth_QGraphicsItem_commonAncestorItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_commonAncestorItem)},
    {SIP_MLNAME_CAST(sipName_contains), meth_QGraphicsItem_contains, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_contains)},
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), meth_QGraphicsItem_contextMenuEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_contextMenuEvent)},
    {SIP_MLNAME_CAST(sipName_cursor), meth_QGraphicsItem_cursor, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_cursor)},
    {SIP_MLNAME_CAST(sipName_data), meth_QGraphicsItem_data, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_data)},
    {SIP_MLNAME_CAST(sipName_deviceTransform), meth_QGraphicsItem_deviceTransform, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_deviceTransform)},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), meth_QGraphicsItem_dragEnterEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_dragEnterEvent)},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), meth_QGraphicsItem_dragLeaveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_dragLeaveEvent)},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), meth_QGraphicsItem_dragMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_dragMoveEvent)},
    {SIP_MLNAME_CAST(sipName_dropEvent), meth_QGraphicsItem_dropEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_dropEvent)},
    {SIP_MLNAME_CAST(sipName_effectiveOpacity), meth_QGraphicsItem_effectiveOpacity, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_effectiveOpacity)},
    {SIP_MLNAME_CAST(sipName_ensureVisible), (PyCFunction)meth_QGraphicsItem_ensureVisible, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_ensureVisible)},
    {SIP_MLNAME_CAST(sipName_filtersChildEvents), meth_QGraphicsItem_filtersChildEvents, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_filtersChildEvents)},
    {SIP_MLNAME_CAST(sipName_flags), meth_QGraphicsItem_flags, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_flags)},
    {SIP_MLNAME_CAST(sipName_focusInEvent), meth_QGraphicsItem_focusInEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_focusInEvent)},
    {SIP_MLNAME_CAST(sipName_focusItem), meth_QGraphicsItem_focusItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_focusItem)},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), meth_QGraphicsItem_focusOutEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_focusOutEvent)},
    {SIP_MLNAME_CAST(sipName_focusProxy), meth_QGraphicsItem_focusProxy, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_focusProxy)},
    {SIP_MLNAME_CAST(sipName_grabKeyboard), meth_QGraphicsItem_grabKeyboard, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_grabKeyboard)},
    {SIP_MLNAME_CAST(sipName_grabMouse), meth_QGraphicsItem_grabMouse, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_grabMouse)},
    {SIP_MLNAME_CAST(sipName_graphicsEffect), meth_QGraphicsItem_graphicsEffect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_graphicsEffect)},
    {SIP_MLNAME_CAST(sipName_group), meth_QGraphicsItem_group, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_group)},
    {SIP_MLNAME_CAST(sipName_handlesChildEvents), meth_QGraphicsItem_handlesChildEvents, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_handlesChildEvents)},
    {SIP_MLNAME_CAST(sipName_hasCursor), meth_QGraphicsItem_hasCursor, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_hasCursor)},
    {SIP_MLNAME_CAST(sipName_hasFocus), meth_QGraphicsItem_hasFocus, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_hasFocus)},
    {SIP_MLNAME_CAST(sipName_hide), meth_QGraphicsItem_hide, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_hide)},
    {SIP_MLNAME_CAST(sipName_hoverEnterEvent), meth_QGraphicsItem_hoverEnterEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_hoverEnterEvent)},
    {SIP_MLNAME_CAST(sipName_hoverLeaveEvent), meth_QGraphicsItem_hoverLeaveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_hoverLeaveEvent)},
    {SIP_MLNAME_CAST(sipName_hoverMoveEvent), meth_QGraphicsItem_hoverMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_hoverMoveEvent)},
    {SIP_MLNAME_CAST(sipName_inputMethodEvent), meth_QGraphicsItem_inputMethodEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_inputMethodEvent)},
    {SIP_MLNAME_CAST(sipName_inputMethodHints), meth_QGraphicsItem_inputMethodHints, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_inputMethodHints)},
    {SIP_MLNAME_CAST(sipName_inputMethodQuery), meth_QGraphicsItem_inputMethodQuery, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_inputMethodQuery)},
    {SIP_MLNAME_CAST(sipName_installSceneEventFilter), meth_QGraphicsItem_installSceneEventFilter, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_installSceneEventFilter)},
    {SIP_MLNAME_CAST(sipName_isActive), meth_QGraphicsItem_isActive, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isActive)},
    {SIP_MLNAME_CAST(sipName_isAncestorOf), meth_QGraphicsItem_isAncestorOf, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isAncestorOf)},
    {SIP_MLNAME_CAST(sipName_isBlockedByModalPanel), (PyCFunction)meth_QGraphicsItem_isBlockedByModalPanel, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_isBlockedByModalPanel)},
    {SIP_MLNAME_CAST(sipName_isClipped), meth_QGraphicsItem_isClipped, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isClipped)},
    {SIP_MLNAME_CAST(sipName_isEnabled), meth_QGraphicsItem_isEnabled, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isEnabled)},
    {SIP_MLNAME_CAST(sipName_isObscured), meth_QGraphicsItem_isObscured, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isObscured)},
    {SIP_MLNAME_CAST(sipName_isObscuredBy), meth_QGraphicsItem_isObscuredBy, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isObscuredBy)},
    {SIP_MLNAME_CAST(sipName_isPanel), meth_QGraphicsItem_isPanel, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isPanel)},
    {SIP_MLNAME_CAST(sipName_isSelected), meth_QGraphicsItem_isSelected, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isSelected)},
    {SIP_MLNAME_CAST(sipName_isUnderMouse), meth_QGraphicsItem_isUnderMouse, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isUnderMouse)},
    {SIP_MLNAME_CAST(sipName_isVisible), meth_QGraphicsItem_isVisible, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isVisible)},
    {SIP_MLNAME_CAST(sipName_isVisibleTo), meth_QGraphicsItem_isVisibleTo, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isVisibleTo)},
    {SIP_MLNAME_CAST(sipName_isWidget), meth_QGraphicsItem_isWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isWidget)},
    {SIP_MLNAME_CAST(sipName_isWindow), meth_QGraphicsItem_isWindow, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_isWindow)},
    {SIP_MLNAME_CAST(sipName_itemChange), meth_QGraphicsItem_itemChange, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_itemChange)},
    {SIP_MLNAME_CAST(sipName_itemTransform), (PyCFunction)meth_QGraphicsItem_itemTransform, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_itemTransform)},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), meth_QGraphicsItem_keyPressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_keyPressEvent)},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), meth_QGraphicsItem_keyReleaseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_keyReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_mapFromItem), meth_QGraphicsItem_mapFromItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapFromItem)},
    {SIP_MLNAME_CAST(sipName_mapFromParent), meth_QGraphicsItem_mapFromParent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapFromParent)},
    {SIP_MLNAME_CAST(sipName_mapFromScene), meth_QGraphicsItem_mapFromScene, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapFromScene)},
    {SIP_MLNAME_CAST(sipName_mapRectFromItem), meth_QGraphicsItem_mapRectFromItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapRectFromItem)},
    {SIP_MLNAME_CAST(sipName_mapRectFromParent), meth_QGraphicsItem_mapRectFromParent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapRectFromParent)},
    {SIP_MLNAME_CAST(sipName_mapRectFromScene), meth_QGraphicsItem_mapRectFromScene, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapRectFromScene)},
    {SIP_MLNAME_CAST(sipName_mapRectToItem), meth_QGraphicsItem_mapRectToItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapRectToItem)},
    {SIP_MLNAME_CAST(sipName_mapRectToParent), meth_QGraphicsItem_mapRectToParent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapRectToParent)},
    {SIP_MLNAME_CAST(sipName_mapRectToScene), meth_QGraphicsItem_mapRectToScene, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapRectToScene)},
    {SIP_MLNAME_CAST(sipName_mapToItem), meth_QGraphicsItem_mapToItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapToItem)},
    {SIP_MLNAME_CAST(sipName_mapToParent), meth_QGraphicsItem_mapToParent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapToParent)},
    {SIP_MLNAME_CAST(sipName_mapToScene), meth_QGraphicsItem_mapToScene, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mapToScene)},
    {SIP_MLNAME_CAST(sipName_matrix), meth_QGraphicsItem_matrix, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_matrix)},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QGraphicsItem_mouseDoubleClickEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mouseDoubleClickEvent)},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QGraphicsItem_mouseMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mouseMoveEvent)},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QGraphicsItem_mousePressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mousePressEvent)},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QGraphicsItem_mouseReleaseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_mouseReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_moveBy), meth_QGraphicsItem_moveBy, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_moveBy)},
    {SIP_MLNAME_CAST(sipName_opacity), meth_QGraphicsItem_opacity, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_opacity)},
    {SIP_MLNAME_CAST(sipName_opaqueArea), meth_QGraphicsItem_opaqueArea, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_opaqueArea)},
    {SIP_MLNAME_CAST(sipName_paint), (PyCFunction)meth_QGraphicsItem_paint, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_paint)},
    {SIP_MLNAME_CAST(sipName_panel), meth_QGraphicsItem_panel, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_panel)},
    {SIP_MLNAME_CAST(sipName_panelModality), meth_QGraphicsItem_panelModality, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_panelModality)},
    {SIP_MLNAME_CAST(sipName_parentItem), meth_QGraphicsItem_parentItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_parentItem)},
    {SIP_MLNAME_CAST(sipName_parentObject), meth_QGraphicsItem_parentObject, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_parentObject)},
    {SIP_MLNAME_CAST(sipName_parentWidget), meth_QGraphicsItem_parentWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_parentWidget)},
    {SIP_MLNAME_CAST(sipName_pos), meth_QGraphicsItem_pos, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_pos)},
    {SIP_MLNAME_CAST(sipName_prepareGeometryChange), meth_QGraphicsItem_prepareGeometryChange, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_prepareGeometryChange)},
    {SIP_MLNAME_CAST(sipName_removeSceneEventFilter), meth_QGraphicsItem_removeSceneEventFilter, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_removeSceneEventFilter)},
    {SIP_MLNAME_CAST(sipName_resetMatrix), meth_QGraphicsItem_resetMatrix, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_resetMatrix)},
    {SIP_MLNAME_CAST(sipName_resetTransform), meth_QGraphicsItem_resetTransform, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_resetTransform)},
    {SIP_MLNAME_CAST(sipName_rotate), meth_QGraphicsItem_rotate, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_rotate)},
    {SIP_MLNAME_CAST(sipName_rotation), meth_QGraphicsItem_rotation, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_rotation)},
    {SIP_MLNAME_CAST(sipName_scale), meth_QGraphicsItem_scale, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_scale)},
    {SIP_MLNAME_CAST(sipName_scene), meth_QGraphicsItem_scene, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_scene)},
    {SIP_MLNAME_CAST(sipName_sceneBoundingRect), meth_QGraphicsItem_sceneBoundingRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_sceneBoundingRect)},
    {SIP_MLNAME_CAST(sipName_sceneEvent), meth_QGraphicsItem_sceneEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_sceneEvent)},
    {SIP_MLNAME_CAST(sipName_sceneEventFilter), meth_QGraphicsItem_sceneEventFilter, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_sceneEventFilter)},
    {SIP_MLNAME_CAST(sipName_sceneMatrix), meth_QGraphicsItem_sceneMatrix, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_sceneMatrix)},
    {SIP_MLNAME_CAST(sipName_scenePos), meth_QGraphicsItem_scenePos, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_scenePos)},
    {SIP_MLNAME_CAST(sipName_sceneTransform), meth_QGraphicsItem_sceneTransform, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_sceneTransform)},
    {SIP_MLNAME_CAST(sipName_scroll), (PyCFunction)meth_QGraphicsItem_scroll, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_scroll)},
    {SIP_MLNAME_CAST(sipName_setAcceptDrops), meth_QGraphicsItem_setAcceptDrops, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setAcceptDrops)},
    {SIP_MLNAME_CAST(sipName_setAcceptHoverEvents), meth_QGraphicsItem_setAcceptHoverEvents, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setAcceptHoverEvents)},
    {SIP_MLNAME_CAST(sipName_setAcceptTouchEvents), meth_QGraphicsItem_setAcceptTouchEvents, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setAcceptTouchEvents)},
    {SIP_MLNAME_CAST(sipName_setAcceptedMouseButtons), meth_QGraphicsItem_setAcceptedMouseButtons, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setAcceptedMouseButtons)},
    {SIP_MLNAME_CAST(sipName_setAcceptsHoverEvents), meth_QGraphicsItem_setAcceptsHoverEvents, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setAcceptsHoverEvents)},
    {SIP_MLNAME_CAST(sipName_setActive), meth_QGraphicsItem_setActive, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setActive)},
    {SIP_MLNAME_CAST(sipName_setBoundingRegionGranularity), meth_QGraphicsItem_setBoundingRegionGranularity, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setBoundingRegionGranularity)},
    {SIP_MLNAME_CAST(sipName_setCacheMode), (PyCFunction)meth_QGraphicsItem_setCacheMode, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_setCacheMode)},
    {SIP_MLNAME_CAST(sipName_setCursor), meth_QGraphicsItem_setCursor, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setCursor)},
    {SIP_MLNAME_CAST(sipName_setData), meth_QGraphicsItem_setData, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setData)},
    {SIP_MLNAME_CAST(sipName_setEnabled), meth_QGraphicsItem_setEnabled, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setEnabled)},
    {SIP_MLNAME_CAST(sipName_setFiltersChildEvents), meth_QGraphicsItem_setFiltersChildEvents, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setFiltersChildEvents)},
    {SIP_MLNAME_CAST(sipName_setFlag), (PyCFunction)meth_QGraphicsItem_setFlag, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_setFlag)},
    {SIP_MLNAME_CAST(sipName_setFlags), meth_QGraphicsItem_setFlags, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setFlags)},
    {SIP_MLNAME_CAST(sipName_setFocus), (PyCFunction)meth_QGraphicsItem_setFocus, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_setFocus)},
    {SIP_MLNAME_CAST(sipName_setFocusProxy), meth_QGraphicsItem_setFocusProxy, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setFocusProxy)},
    {SIP_MLNAME_CAST(sipName_setGraphicsEffect), meth_QGraphicsItem_setGraphicsEffect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setGraphicsEffect)},
    {SIP_MLNAME_CAST(sipName_setGroup), meth_QGraphicsItem_setGroup, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setGroup)},
    {SIP_MLNAME_CAST(sipName_setHandlesChildEvents), meth_QGraphicsItem_setHandlesChildEvents, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setHandlesChildEvents)},
    {SIP_MLNAME_CAST(sipName_setInputMethodHints), meth_QGraphicsItem_setInputMethodHints, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setInputMethodHints)},
    {SIP_MLNAME_CAST(sipName_setMatrix), (PyCFunction)meth_QGraphicsItem_setMatrix, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_setMatrix)},
    {SIP_MLNAME_CAST(sipName_setOpacity), meth_QGraphicsItem_setOpacity, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setOpacity)},
    {SIP_MLNAME_CAST(sipName_setPanelModality), meth_QGraphicsItem_setPanelModality, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setPanelModality)},
    {SIP_MLNAME_CAST(sipName_setParentItem), meth_QGraphicsItem_setParentItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setParentItem)},
    {SIP_MLNAME_CAST(sipName_setPos), meth_QGraphicsItem_setPos, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setPos)},
    {SIP_MLNAME_CAST(sipName_setRotation), meth_QGraphicsItem_setRotation, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setRotation)},
    {SIP_MLNAME_CAST(sipName_setScale), meth_QGraphicsItem_setScale, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setScale)},
    {SIP_MLNAME_CAST(sipName_setSelected), meth_QGraphicsItem_setSelected, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setSelected)},
    {SIP_MLNAME_CAST(sipName_setToolTip), meth_QGraphicsItem_setToolTip, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setToolTip)},
    {SIP_MLNAME_CAST(sipName_setTransform), (PyCFunction)meth_QGraphicsItem_setTransform, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_setTransform)},
    {SIP_MLNAME_CAST(sipName_setTransformOriginPoint), meth_QGraphicsItem_setTransformOriginPoint, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setTransformOriginPoint)},
    {SIP_MLNAME_CAST(sipName_setTransformations), meth_QGraphicsItem_setTransformations, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setTransformations)},
    {SIP_MLNAME_CAST(sipName_setVisible), meth_QGraphicsItem_setVisible, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setVisible)},
    {SIP_MLNAME_CAST(sipName_setX), meth_QGraphicsItem_setX, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setX)},
    {SIP_MLNAME_CAST(sipName_setY), meth_QGraphicsItem_setY, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setY)},
    {SIP_MLNAME_CAST(sipName_setZValue), meth_QGraphicsItem_setZValue, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_setZValue)},
    {SIP_MLNAME_CAST(sipName_shape), meth_QGraphicsItem_shape, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_shape)},
    {SIP_MLNAME_CAST(sipName_shear), meth_QGraphicsItem_shear, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_shear)},
    {SIP_MLNAME_CAST(sipName_show), meth_QGraphicsItem_show, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_show)},
    {SIP_MLNAME_CAST(sipName_stackBefore), meth_QGraphicsItem_stackBefore, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_stackBefore)},
    {SIP_MLNAME_CAST(sipName_toGraphicsObject), meth_QGraphicsItem_toGraphicsObject, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_toGraphicsObject)},
    {SIP_MLNAME_CAST(sipName_toolTip), meth_QGraphicsItem_toolTip, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_toolTip)},
    {SIP_MLNAME_CAST(sipName_topLevelItem), meth_QGraphicsItem_topLevelItem, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_topLevelItem)},
    {SIP_MLNAME_CAST(sipName_topLevelWidget), meth_QGraphicsItem_topLevelWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_topLevelWidget)},
    {SIP_MLNAME_CAST(sipName_transform), meth_QGraphicsItem_transform, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_transform)},
    {SIP_MLNAME_CAST(sipName_transformOriginPoint), meth_QGraphicsItem_transformOriginPoint, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_transformOriginPoint)},
    {SIP_MLNAME_CAST(sipName_transformations), meth_QGraphicsItem_transformations, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_transformations)},
    {SIP_MLNAME_CAST(sipName_translate), meth_QGraphicsItem_translate, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_translate)},
    {SIP_MLNAME_CAST(sipName_type), meth_QGraphicsItem_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_type)},
    {SIP_MLNAME_CAST(sipName_ungrabKeyboard), meth_QGraphicsItem_ungrabKeyboard, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_ungrabKeyboard)},
    {SIP_MLNAME_CAST(sipName_ungrabMouse), meth_QGraphicsItem_ungrabMouse, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_ungrabMouse)},
    {SIP_MLNAME_CAST(sipName_unsetCursor), meth_QGraphicsItem_unsetCursor, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_unsetCursor)},
    {SIP_MLNAME_CAST(sipName_update), (PyCFunction)meth_QGraphicsItem_update, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsItem_update)},
    {SIP_MLNAME_CAST(sipName_updateMicroFocus), meth_QGraphicsItem_updateMicroFocus, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_updateMicroFocus)},
    {SIP_MLNAME_CAST(sipName_wheelEvent), meth_QGraphicsItem_wheelEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_wheelEvent)},
    {SIP_MLNAME_CAST(sipName_window), meth_QGraphicsItem_window, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_window)},
    {SIP_MLNAME_CAST(sipName_x), meth_QGraphicsItem_x, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_x)},
    {SIP_MLNAME_CAST(sipName_y), meth_QGraphicsItem_y, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_y)},
    {SIP_MLNAME_CAST(sipName_zValue), meth_QGraphicsItem_zValue, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsItem_zValue)}
};

static sipEnumMemberDef enummembers_QGraphicsItem[] = {
    {sipName_DeviceCoordinateCache, static_cast<int>(QGraphicsItem::DeviceCoordinateCache), 172},
    {sipName_ItemAcceptsInputMethod, static_cast<int>(QGraphicsItem::ItemAcceptsInputMethod), 174},
    {sipName_ItemChildAddedChange, static_cast<int>(QGraphicsItem::ItemChildAddedChange), 173},
    {sipName_ItemChildRemovedChange, static_cast<int>(QGraphicsItem::ItemChildRemovedChange), 173},
    {sipName_ItemClipsChildrenToShape, static_cast<int>(QGraphicsItem::ItemClipsChildrenToShape), 174},
    {sipName_ItemClipsToShape, static_cast<int>(QGraphicsItem::ItemClipsToShape), 174},
    {sipName_ItemCoordinateCache, static_cast<int>(QGraphicsItem::ItemCoordinateCache), 172},
    {sipName_ItemCursorChange, static_cast<int>(QGraphicsItem::ItemCursorChange), 173},
    {sipName_ItemCursorHasChanged, static_cast<int>(QGraphicsItem::ItemCursorHasChanged), 173},
    {sipName_ItemDoesntPropagateOpacityToChildren, static_cast<int>(QGraphicsItem::ItemDoesntPropagateOpacityToChildren), 174},
    {sipName_ItemEnabledChange, static_cast<int>(QGraphicsItem::ItemEnabledChange), 173},
    {sipName_ItemEnabledHasChanged, static_cast<int>(QGraphicsItem::ItemEnabledHasChanged), 173},
    {sipName_ItemFlagsChange, static_cast<int>(QGraphicsItem::ItemFlagsChange), 173},
    {sipName_ItemFlagsHaveChanged, static_cast<int>(QGraphicsItem::ItemFlagsHaveChanged), 173},
    {sipName_ItemHasNoContents, static_cast<int>(QGraphicsItem::ItemHasNoContents), 174},
    {sipName_ItemIgnoresParentOpacity, static_cast<int>(QGraphicsItem::ItemIgnoresParentOpacity), 174},
    {sipName_ItemIgnoresTransformations, static_cast<int>(QGraphicsItem::ItemIgnoresTransformations), 174},
    {sipName_ItemIsFocusable, static_cast<int>(QGraphicsItem::ItemIsFocusable), 174},
    {sipName_ItemIsMovable, static_cast<int>(QGraphicsItem::ItemIsMovable), 174},
    {sipName_ItemIsPanel, static_cast<int>(QGraphicsItem::ItemIsPanel), 174},
    {sipName_ItemIsSelectable, static_cast<int>(QGraphicsItem::ItemIsSelectable), 174},
    {sipName_ItemMatrixChange, static_cast<int>(QGraphicsItem::ItemMatrixChange), 173},
    {sipName_ItemNegativeZStacksBehindParent, static_cast<int>(QGraphicsItem::ItemNegativeZStacksBehindParent), 174},
    {sipName_ItemOpacityChange, static_cast<int>(QGraphicsItem::ItemOpacityChange), 173},
    {sipName_ItemOpacityHasChanged, static_cast<int>(QGraphicsItem::ItemOpacityHasChanged), 173},
    {sipName_ItemParentChange, static_cast<int>(QGraphicsItem::ItemParentChange), 173},
    {sipName_ItemParentHasChanged, static_cast<int>(QGraphicsItem::ItemParentHasChanged), 173},
    {sipName_ItemPositionChange, static_cast<int>(QGraphicsItem::ItemPositionChange), 173},
    {sipName_ItemPositionHasChanged, static_cast<int>(QGraphicsItem::ItemPositionHasChanged), 173},
    {sipName_ItemRotationChange, static_cast<int>(QGraphicsItem::ItemRotationChange), 173},
    {sipName_ItemRotationHasChanged, static_cast<int>(QGraphicsItem::ItemRotationHasChanged), 173},
    {sipName_ItemScaleChange, static_cast<int>(QGraphicsItem::ItemScaleChange), 173},
    {sipName_ItemScaleHasChanged, static_cast<int>(QGraphicsItem::ItemScaleHasChanged), 173},
    {sipName_ItemSceneChange, static_cast<int>(QGraphicsItem::ItemSceneChange), 173},
    {sipName_ItemSceneHasChanged, static_cast<int>(QGraphicsItem::ItemSceneHasChanged), 173},
    {sipName_ItemScenePositionHasChanged, static_cast<int>(QGraphicsItem::ItemScenePositionHasChanged), 173},
    {sipName_ItemSelectedChange, static_cast<int>(QGraphicsItem::ItemSelectedChange), 173},
    {sipName_ItemSelectedHasChanged, static_cast<int>(QGraphicsItem::ItemSelectedHasChanged), 173},
    {sipName_ItemSendsGeometryChanges, static_cast<int>(QGraphicsItem::ItemSendsGeometryChanges), 174},
    {sipName_ItemSendsScenePositionChanges, static_cast<int>(QGraphicsItem::ItemSendsScenePositionChanges), 174},
    {sipName_ItemStacksBehindParent, static_cast<int>(QGraphicsItem::ItemStacksBehindParent), 174},
    {sipName_ItemToolTipChange, static_cast<int>(QGraphicsItem::ItemToolTipChange), 173},
    {sipName_ItemToolTipHasChanged, static_cast<int>(QGraphicsItem::ItemToolTipHasChanged), 173},
    {sipName_ItemTransformChange, static_cast<int>(QGraphicsItem::ItemTransformChange), 173},
    {sipName_ItemTransformHasChanged, static_cast<int>(QGraphicsItem::ItemTransformHasChanged), 173},
    {sipName_ItemTransformOriginPointChange, static_cast<int>(QGraphicsItem::ItemTransformOriginPointChange), 173},
    {sipName_ItemTransformOriginPointHasChanged, static_cast<int>(QGraphicsItem::ItemTransformOriginPointHasChanged), 173},
    {sipName_ItemUsesExtendedStyleOption, static_cast<int>(QGraphicsItem::ItemUsesExtendedStyleOption), 174},
    {sipName_ItemVisibleChange, static_cast<int>(QGraphicsItem::ItemVisibleChange), 173},
    {sipName_ItemVisibleHasChanged, static_cast<int>(QGraphicsItem::ItemVisibleHasChanged), 173},
    {sipName_ItemZValueChange, static_cast<int>(QGraphicsItem::ItemZValueChange), 173},
    {sipName_ItemZValueHasChanged, static_cast<int>(QGraphicsItem::ItemZValueHasChanged), 173},
    {sipName_NoCache, static_cast<int>(QGraphicsItem::NoCache), 172},
    {sipName_NonModal, static_cast<int>(QGraphicsItem::NonModal), 176},
    {sipName_PanelModal, static_cast<int>(QGraphicsItem::PanelModal), 176},
    {sipName_SceneModal, static_cast<int>(QGraphicsItem::SceneModal), 176},
    {sipName_UserType, static_cast<int>(QGraphicsItem::UserType), -1},
};

PyDoc_STRVAR(doc_QGraphicsItem, "\1QGraphicsItem(QGraphicsItem parent=None, QGraphicsScene scene=None)");


pyqt4ClassTypeDef sipTypeDef_QtGui_QGraphicsItem = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_ABSTRACT|SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsItem,
        {0}
    },
    {
        sipNameNr_QGraphicsItem,
        {0, 0, 1},
        169, methods_QGraphicsItem,
        57, enummembers_QGraphicsItem,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsItem,
    sipNameNr_PyQt4_QtCore_pyqtWrapperType,
    -1,
    0,
    0,
    init_type_QGraphicsItem,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsItem,
    0,
    0,
    0,
    release_QGraphicsItem,
    cast_QGraphicsItem,
    0,
    0,
    0,
    0,
    0,
    0
},
    0,
    0,
    0
};
