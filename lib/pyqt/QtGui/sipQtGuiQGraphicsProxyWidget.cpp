/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.2 on Wed Sep  3 09:36:19 2014
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * If you are unsure which license is appropriate for your use, please
 * contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsproxywidget.sip"
#include <qgraphicsproxywidget.h>
#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"

#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 38 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 41 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qwidget.sip"
#include <qwidget.h>
#line 44 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 193 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 47 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 223 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 50 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 112 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 53 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 56 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 514 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 59 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 483 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 62 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 83 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 65 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 53 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 68 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 71 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 140 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 74 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 110 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 77 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 616 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 80 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 605 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 83 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qobject.sip"
#include <qobject.h>
#line 86 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 274 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 89 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpainter.sip"
#include <qpainter.h>
#line 92 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 1975 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 95 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 168 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 98 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 244 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicssceneevent.sip"
#include <qgraphicssceneevent.h>
#line 101 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 583 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 104 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 119 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qpoint.sip"
#include <qpoint.h>
#line 107 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qstyleoption.sip"
#include <qstyleoption.h>
#line 110 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpainterpath.sip"
#include <qpainterpath.h>
#line 113 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 120 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 116 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qaction.sip"
#include <qaction.h>
#line 119 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qkeysequence.sip"
#include <qkeysequence.h>
#line 122 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 187 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicswidget.sip"
#include <qgraphicswidget.h>
#line 125 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 36 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 128 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpalette.sip"
#include <qpalette.h>
#line 131 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qfont.sip"
#include <qfont.h>
#line 134 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qstyle.sip"
#include <qstyle.h>
#line 137 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicslayout.sip"
#include <qgraphicslayout.h>
#line 140 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 143 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 355 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 146 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 338 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qcoreevent.sip"
#include <qcoreevent.h>
#line 149 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 152 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 37 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qbytearray.sip"
#include <qbytearray.h>
#line 155 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 120 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 158 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qthread.sip"
#include <qthread.h>
#line 161 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qregexp.sip"
#include <qregexp.h>
#line 164 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qobjectdefs.sip"
#include <qobjectdefs.h>
#line 167 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 170 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 120 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 173 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicstransform.sip"
#include <qgraphicstransform.h>
#line 176 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicseffect.sip"
#include <qgraphicseffect.h>
#line 179 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 1149 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 182 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qtransform.sip"
#include <qtransform.h>
#line 185 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qregion.sip"
#include <qregion.h>
#line 188 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 191 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 120 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 194 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 656 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qevent.sip"
#include <qevent.h>
#line 197 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 355 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpolygon.sip"
#include <qpolygon.h>
#line 200 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qmatrix.sip"
#include <qmatrix.h>
#line 203 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qnamespace.sip"
#include <qnamespace.h>
#line 206 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qcursor.sip"
#include <qcursor.h>
#line 209 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 212 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 1109 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 215 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsscene.sip"
#include <qgraphicsscene.h>
#line 218 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicslayoutitem.sip"
#include <qgraphicslayoutitem.h>
#line 221 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qsizepolicy.sip"
#include <qsizepolicy.h>
#line 224 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"


class sipQGraphicsProxyWidget : public QGraphicsProxyWidget
{
public:
    sipQGraphicsProxyWidget(QGraphicsItem*,Qt::WindowFlags);
    virtual ~sipQGraphicsProxyWidget();

    int qt_metacall(QMetaObject::Call,int,void **);
    void *qt_metacast(const char *);
    const QMetaObject *metaObject() const;

    /*
     * There is a protected method for every virtual method visible from
     * this class.
     */
protected:
    bool sceneEventFilter(QGraphicsItem*,QEvent*);
    QVariant inputMethodQuery(Qt::InputMethodQuery) const;
    void inputMethodEvent(QInputMethodEvent*);
    QPainterPath opaqueArea() const;
    bool isObscuredBy(const QGraphicsItem*) const;
    bool collidesWithPath(const QPainterPath&,Qt::ItemSelectionMode) const;
    bool collidesWithItem(const QGraphicsItem*,Qt::ItemSelectionMode) const;
    bool contains(const QPointF&) const;
    void advance(int);
    void disconnectNotify(const char*);
    void connectNotify(const char*);
    void customEvent(QEvent*);
    void childEvent(QChildEvent*);
    void timerEvent(QTimerEvent*);
    void ungrabKeyboardEvent(QEvent*);
    void grabKeyboardEvent(QEvent*);
    void polishEvent();
    void moveEvent(QGraphicsSceneMoveEvent*);
    void closeEvent(QCloseEvent*);
    void changeEvent(QEvent*);
    Qt::WindowFrameSection windowFrameSectionAt(const QPointF&) const;
    bool windowFrameEvent(QEvent*);
    bool sceneEvent(QEvent*);
    void updateGeometry();
    void initStyleOption(QStyleOption*) const;
    QPainterPath shape() const;
    QRectF boundingRect() const;
    void paintWindowFrame(QPainter*,const QStyleOptionGraphicsItem*,QWidget*);
    void getContentsMargins(qreal*,qreal*,qreal*,qreal*) const;
    void dropEvent(QGraphicsSceneDragDropEvent*);
    void dragMoveEvent(QGraphicsSceneDragDropEvent*);
    void dragLeaveEvent(QGraphicsSceneDragDropEvent*);
    void dragEnterEvent(QGraphicsSceneDragDropEvent*);
    void resizeEvent(QGraphicsSceneResizeEvent*);
    QSizeF sizeHint(Qt::SizeHint,const QSizeF&) const;
    bool focusNextPrevChild(bool);
    void focusOutEvent(QFocusEvent*);
    void focusInEvent(QFocusEvent*);
    void keyReleaseEvent(QKeyEvent*);
    void keyPressEvent(QKeyEvent*);
    void wheelEvent(QGraphicsSceneWheelEvent*);
    void mouseDoubleClickEvent(QGraphicsSceneMouseEvent*);
    void mouseReleaseEvent(QGraphicsSceneMouseEvent*);
    void mousePressEvent(QGraphicsSceneMouseEvent*);
    void mouseMoveEvent(QGraphicsSceneMouseEvent*);
    void ungrabMouseEvent(QEvent*);
    void grabMouseEvent(QEvent*);
    void hoverMoveEvent(QGraphicsSceneHoverEvent*);
    void hoverLeaveEvent(QGraphicsSceneHoverEvent*);
    void hoverEnterEvent(QGraphicsSceneHoverEvent*);
    void contextMenuEvent(QGraphicsSceneContextMenuEvent*);
    void hideEvent(QHideEvent*);
    void showEvent(QShowEvent*);
    bool eventFilter(QObject*,QEvent*);
    bool event(QEvent*);
    QVariant itemChange(QGraphicsItem::GraphicsItemChange,const QVariant&);
    int type() const;
    void paint(QPainter*,const QStyleOptionGraphicsItem*,QWidget*);
    void setGeometry(const QRectF&);

public:
    sipSimpleWrapper *sipPySelf;

private:
    sipQGraphicsProxyWidget(const sipQGraphicsProxyWidget &);
    sipQGraphicsProxyWidget &operator = (const sipQGraphicsProxyWidget &);

    char sipPyMethods[59];
};

sipQGraphicsProxyWidget::sipQGraphicsProxyWidget(QGraphicsItem*a0,Qt::WindowFlags a1): QGraphicsProxyWidget(a0,a1), sipPySelf(0)
{
    memset(sipPyMethods, 0, sizeof (sipPyMethods));
}

sipQGraphicsProxyWidget::~sipQGraphicsProxyWidget()
{
    sipCommonDtor(sipPySelf);
}

const QMetaObject *sipQGraphicsProxyWidget::metaObject() const
{
    return sip_QtGui_qt_metaobject(sipPySelf,sipType_QGraphicsProxyWidget);
}

int sipQGraphicsProxyWidget::qt_metacall(QMetaObject::Call _c,int _id,void **_a)
{
    _id = QGraphicsProxyWidget::qt_metacall(_c,_id,_a);

    if (_id >= 0)
        _id = sip_QtGui_qt_metacall(sipPySelf,sipType_QGraphicsProxyWidget,_c,_id,_a);

    return _id;
}

void *sipQGraphicsProxyWidget::qt_metacast(const char *_clname)
{
    return (sip_QtGui_qt_metacast(sipPySelf, sipType_QGraphicsProxyWidget, _clname)) ? this : QGraphicsProxyWidget::qt_metacast(_clname);
}

bool sipQGraphicsProxyWidget::sceneEventFilter(QGraphicsItem*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[0],sipPySelf,NULL,sipName_sceneEventFilter);

    if (!sipMeth)
        return QGraphicsProxyWidget::sceneEventFilter(a0,a1);

    extern bool sipVH_QtGui_208(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem*,QEvent*);

    return sipVH_QtGui_208(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

QVariant sipQGraphicsProxyWidget::inputMethodQuery(Qt::InputMethodQuery a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[1]),sipPySelf,NULL,sipName_inputMethodQuery);

    if (!sipMeth)
        return QGraphicsProxyWidget::inputMethodQuery(a0);

    extern QVariant sipVH_QtGui_12(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::InputMethodQuery);

    return sipVH_QtGui_12(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::inputMethodEvent(QInputMethodEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[2],sipPySelf,NULL,sipName_inputMethodEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::inputMethodEvent(a0);
        return;
    }

    extern void sipVH_QtGui_13(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QInputMethodEvent*);

    sipVH_QtGui_13(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QPainterPath sipQGraphicsProxyWidget::opaqueArea() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[3]),sipPySelf,NULL,sipName_opaqueArea);

    if (!sipMeth)
        return QGraphicsProxyWidget::opaqueArea();

    extern QPainterPath sipVH_QtGui_194(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_194(sipGILState, 0, sipPySelf, sipMeth);
}

bool sipQGraphicsProxyWidget::isObscuredBy(const QGraphicsItem*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[4]),sipPySelf,NULL,sipName_isObscuredBy);

    if (!sipMeth)
        return QGraphicsProxyWidget::isObscuredBy(a0);

    extern bool sipVH_QtGui_206(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*);

    return sipVH_QtGui_206(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsProxyWidget::collidesWithPath(const QPainterPath& a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[5]),sipPySelf,NULL,sipName_collidesWithPath);

    if (!sipMeth)
        return QGraphicsProxyWidget::collidesWithPath(a0,a1);

    extern bool sipVH_QtGui_209(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPainterPath&,Qt::ItemSelectionMode);

    return sipVH_QtGui_209(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsProxyWidget::collidesWithItem(const QGraphicsItem*a0,Qt::ItemSelectionMode a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[6]),sipPySelf,NULL,sipName_collidesWithItem);

    if (!sipMeth)
        return QGraphicsProxyWidget::collidesWithItem(a0,a1);

    extern bool sipVH_QtGui_210(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QGraphicsItem*,Qt::ItemSelectionMode);

    return sipVH_QtGui_210(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsProxyWidget::contains(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[7]),sipPySelf,NULL,sipName_contains);

    if (!sipMeth)
        return QGraphicsProxyWidget::contains(a0);

    extern bool sipVH_QtGui_207(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPointF&);

    return sipVH_QtGui_207(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::advance(int a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[8],sipPySelf,NULL,sipName_advance);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::advance(a0);
        return;
    }

    typedef void (*sipVH_QtCore_4)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, int);

    ((sipVH_QtCore_4)(sipModuleAPI_QtGui_QtCore->em_virthandlers[4]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::disconnectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[9],sipPySelf,NULL,sipName_disconnectNotify);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::disconnectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::connectNotify(const char*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[10],sipPySelf,NULL,sipName_connectNotify);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::connectNotify(a0);
        return;
    }

    typedef void (*sipVH_QtCore_24)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const char*);

    ((sipVH_QtCore_24)(sipModuleAPI_QtGui_QtCore->em_virthandlers[24]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::customEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[11],sipPySelf,NULL,sipName_customEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::customEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::childEvent(QChildEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[12],sipPySelf,NULL,sipName_childEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::childEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_25)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QChildEvent*);

    ((sipVH_QtCore_25)(sipModuleAPI_QtGui_QtCore->em_virthandlers[25]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::timerEvent(QTimerEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[13],sipPySelf,NULL,sipName_timerEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::timerEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_9)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QTimerEvent*);

    ((sipVH_QtCore_9)(sipModuleAPI_QtGui_QtCore->em_virthandlers[9]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::ungrabKeyboardEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[14],sipPySelf,NULL,sipName_ungrabKeyboardEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::ungrabKeyboardEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::grabKeyboardEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[15],sipPySelf,NULL,sipName_grabKeyboardEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::grabKeyboardEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::polishEvent()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[16],sipPySelf,NULL,sipName_polishEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::polishEvent();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtGui_QtCore->em_virthandlers[11]))(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQGraphicsProxyWidget::moveEvent(QGraphicsSceneMoveEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[17],sipPySelf,NULL,sipName_moveEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::moveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_189(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMoveEvent*);

    sipVH_QtGui_189(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::closeEvent(QCloseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[18],sipPySelf,NULL,sipName_closeEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::closeEvent(a0);
        return;
    }

    extern void sipVH_QtGui_22(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QCloseEvent*);

    sipVH_QtGui_22(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::changeEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[19],sipPySelf,NULL,sipName_changeEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::changeEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

Qt::WindowFrameSection sipQGraphicsProxyWidget::windowFrameSectionAt(const QPointF& a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[20]),sipPySelf,NULL,sipName_windowFrameSectionAt);

    if (!sipMeth)
        return QGraphicsProxyWidget::windowFrameSectionAt(a0);

    extern Qt::WindowFrameSection sipVH_QtGui_190(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QPointF&);

    return sipVH_QtGui_190(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsProxyWidget::windowFrameEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[21],sipPySelf,NULL,sipName_windowFrameEvent);

    if (!sipMeth)
        return QGraphicsProxyWidget::windowFrameEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsProxyWidget::sceneEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[22],sipPySelf,NULL,sipName_sceneEvent);

    if (!sipMeth)
        return QGraphicsProxyWidget::sceneEvent(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::updateGeometry()
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[23],sipPySelf,NULL,sipName_updateGeometry);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::updateGeometry();
        return;
    }

    typedef void (*sipVH_QtCore_11)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    ((sipVH_QtCore_11)(sipModuleAPI_QtGui_QtCore->em_virthandlers[11]))(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQGraphicsProxyWidget::initStyleOption(QStyleOption*a0) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[24]),sipPySelf,NULL,sipName_initStyleOption);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::initStyleOption(a0);
        return;
    }

    extern void sipVH_QtGui_193(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QStyleOption*);

    sipVH_QtGui_193(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QPainterPath sipQGraphicsProxyWidget::shape() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[25]),sipPySelf,NULL,sipName_shape);

    if (!sipMeth)
        return QGraphicsProxyWidget::shape();

    extern QPainterPath sipVH_QtGui_194(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_194(sipGILState, 0, sipPySelf, sipMeth);
}

QRectF sipQGraphicsProxyWidget::boundingRect() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[26]),sipPySelf,NULL,sipName_boundingRect);

    if (!sipMeth)
        return QGraphicsProxyWidget::boundingRect();

    extern QRectF sipVH_QtGui_195(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return sipVH_QtGui_195(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQGraphicsProxyWidget::paintWindowFrame(QPainter*a0,const QStyleOptionGraphicsItem*a1,QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[27],sipPySelf,NULL,sipName_paintWindowFrame);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::paintWindowFrame(a0,a1,a2);
        return;
    }

    extern void sipVH_QtGui_196(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionGraphicsItem*,QWidget*);

    sipVH_QtGui_196(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQGraphicsProxyWidget::getContentsMargins(qreal*a0,qreal*a1,qreal*a2,qreal*a3) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[28]),sipPySelf,NULL,sipName_getContentsMargins);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::getContentsMargins(a0,a1,a2,a3);
        return;
    }

    extern void sipVH_QtGui_197(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, double*,double*,double*,double*);

    sipVH_QtGui_197(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2, a3);
}

void sipQGraphicsProxyWidget::dropEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[29],sipPySelf,NULL,sipName_dropEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::dropEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_202(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::dragMoveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[30],sipPySelf,NULL,sipName_dragMoveEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::dragMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_202(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::dragLeaveEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[31],sipPySelf,NULL,sipName_dragLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::dragLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_202(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::dragEnterEvent(QGraphicsSceneDragDropEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[32],sipPySelf,NULL,sipName_dragEnterEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::dragEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_202(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneDragDropEvent*);

    sipVH_QtGui_202(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::resizeEvent(QGraphicsSceneResizeEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[33],sipPySelf,NULL,sipName_resizeEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::resizeEvent(a0);
        return;
    }

    extern void sipVH_QtGui_188(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneResizeEvent*);

    sipVH_QtGui_188(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QSizeF sipQGraphicsProxyWidget::sizeHint(Qt::SizeHint a0,const QSizeF& a1) const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[34]),sipPySelf,NULL,sipName_sizeHint);

    if (!sipMeth)
        return QGraphicsProxyWidget::sizeHint(a0,a1);

    extern QSizeF sipVH_QtGui_192(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, Qt::SizeHint,const QSizeF&);

    return sipVH_QtGui_192(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsProxyWidget::focusNextPrevChild(bool a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[35],sipPySelf,NULL,sipName_focusNextPrevChild);

    if (!sipMeth)
        return QGraphicsProxyWidget::focusNextPrevChild(a0);

    extern bool sipVH_QtGui_11(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, bool);

    return sipVH_QtGui_11(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::focusOutEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[36],sipPySelf,NULL,sipName_focusOutEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::focusOutEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    sipVH_QtGui_24(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::focusInEvent(QFocusEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[37],sipPySelf,NULL,sipName_focusInEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::focusInEvent(a0);
        return;
    }

    extern void sipVH_QtGui_24(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QFocusEvent*);

    sipVH_QtGui_24(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::keyReleaseEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[38],sipPySelf,NULL,sipName_keyReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::keyReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    sipVH_QtGui_25(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::keyPressEvent(QKeyEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[39],sipPySelf,NULL,sipName_keyPressEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::keyPressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_25(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QKeyEvent*);

    sipVH_QtGui_25(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::wheelEvent(QGraphicsSceneWheelEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[40],sipPySelf,NULL,sipName_wheelEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::wheelEvent(a0);
        return;
    }

    extern void sipVH_QtGui_199(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneWheelEvent*);

    sipVH_QtGui_199(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::mouseDoubleClickEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[41],sipPySelf,NULL,sipName_mouseDoubleClickEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::mouseDoubleClickEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtGui_200(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::mouseReleaseEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[42],sipPySelf,NULL,sipName_mouseReleaseEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::mouseReleaseEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtGui_200(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::mousePressEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[43],sipPySelf,NULL,sipName_mousePressEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::mousePressEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtGui_200(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::mouseMoveEvent(QGraphicsSceneMouseEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[44],sipPySelf,NULL,sipName_mouseMoveEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::mouseMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_200(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneMouseEvent*);

    sipVH_QtGui_200(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::ungrabMouseEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[45],sipPySelf,NULL,sipName_ungrabMouseEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::ungrabMouseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::grabMouseEvent(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[46],sipPySelf,NULL,sipName_grabMouseEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::grabMouseEvent(a0);
        return;
    }

    typedef void (*sipVH_QtCore_17)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    ((sipVH_QtCore_17)(sipModuleAPI_QtGui_QtCore->em_virthandlers[17]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::hoverMoveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[47],sipPySelf,NULL,sipName_hoverMoveEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::hoverMoveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtGui_187(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::hoverLeaveEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[48],sipPySelf,NULL,sipName_hoverLeaveEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::hoverLeaveEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtGui_187(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::hoverEnterEvent(QGraphicsSceneHoverEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[49],sipPySelf,NULL,sipName_hoverEnterEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::hoverEnterEvent(a0);
        return;
    }

    extern void sipVH_QtGui_187(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneHoverEvent*);

    sipVH_QtGui_187(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::contextMenuEvent(QGraphicsSceneContextMenuEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[50],sipPySelf,NULL,sipName_contextMenuEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::contextMenuEvent(a0);
        return;
    }

    extern void sipVH_QtGui_203(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsSceneContextMenuEvent*);

    sipVH_QtGui_203(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::hideEvent(QHideEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[51],sipPySelf,NULL,sipName_hideEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::hideEvent(a0);
        return;
    }

    extern void sipVH_QtGui_0(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QHideEvent*);

    sipVH_QtGui_0(sipGILState, 0, sipPySelf, sipMeth, a0);
}

void sipQGraphicsProxyWidget::showEvent(QShowEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[52],sipPySelf,NULL,sipName_showEvent);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::showEvent(a0);
        return;
    }

    extern void sipVH_QtGui_1(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QShowEvent*);

    sipVH_QtGui_1(sipGILState, 0, sipPySelf, sipMeth, a0);
}

bool sipQGraphicsProxyWidget::eventFilter(QObject*a0,QEvent*a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[53],sipPySelf,NULL,sipName_eventFilter);

    if (!sipMeth)
        return QGraphicsProxyWidget::eventFilter(a0,a1);

    typedef bool (*sipVH_QtCore_18)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QObject*,QEvent*);

    return ((sipVH_QtCore_18)(sipModuleAPI_QtGui_QtCore->em_virthandlers[18]))(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

bool sipQGraphicsProxyWidget::event(QEvent*a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[54],sipPySelf,NULL,sipName_event);

    if (!sipMeth)
        return QGraphicsProxyWidget::event(a0);

    typedef bool (*sipVH_QtCore_5)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QEvent*);

    return ((sipVH_QtCore_5)(sipModuleAPI_QtGui_QtCore->em_virthandlers[5]))(sipGILState, 0, sipPySelf, sipMeth, a0);
}

QVariant sipQGraphicsProxyWidget::itemChange(QGraphicsItem::GraphicsItemChange a0,const QVariant& a1)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[55],sipPySelf,NULL,sipName_itemChange);

    if (!sipMeth)
        return QGraphicsProxyWidget::itemChange(a0,a1);

    extern QVariant sipVH_QtGui_191(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QGraphicsItem::GraphicsItemChange,const QVariant&);

    return sipVH_QtGui_191(sipGILState, 0, sipPySelf, sipMeth, a0, a1);
}

int sipQGraphicsProxyWidget::type() const
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,const_cast<char *>(&sipPyMethods[56]),sipPySelf,NULL,sipName_type);

    if (!sipMeth)
        return QGraphicsProxyWidget::type();

    typedef int (*sipVH_QtCore_6)(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *);

    return ((sipVH_QtCore_6)(sipModuleAPI_QtGui_QtCore->em_virthandlers[6]))(sipGILState, 0, sipPySelf, sipMeth);
}

void sipQGraphicsProxyWidget::paint(QPainter*a0,const QStyleOptionGraphicsItem*a1,QWidget*a2)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[57],sipPySelf,NULL,sipName_paint);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::paint(a0,a1,a2);
        return;
    }

    extern void sipVH_QtGui_196(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, QPainter*,const QStyleOptionGraphicsItem*,QWidget*);

    sipVH_QtGui_196(sipGILState, 0, sipPySelf, sipMeth, a0, a1, a2);
}

void sipQGraphicsProxyWidget::setGeometry(const QRectF& a0)
{
    sip_gilstate_t sipGILState;
    PyObject *sipMeth;

    sipMeth = sipIsPyMethod(&sipGILState,&sipPyMethods[58],sipPySelf,NULL,sipName_setGeometry);

    if (!sipMeth)
    {
        QGraphicsProxyWidget::setGeometry(a0);
        return;
    }

    extern void sipVH_QtGui_137(sip_gilstate_t, sipVirtErrorHandlerFunc, sipSimpleWrapper *, PyObject *, const QRectF&);

    sipVH_QtGui_137(sipGILState, 0, sipPySelf, sipMeth, a0);
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_setWidget, "QGraphicsProxyWidget.setWidget(QWidget)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_setWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_setWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWidget* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ:", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QWidget, &a0))
        {
#line 41 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsproxywidget.sip"
        // The ownership of any existing widget must be passed back to Python.
        QWidget *w = sipCpp->widget();
        
        Py_BEGIN_ALLOW_THREADS
        sipCpp->setWidget(a0);
        Py_END_ALLOW_THREADS
        
        if (w)
        {
            PyObject *wo = sipGetPyObject(w, sipType_QWidget);
        
            if (wo)
                sipTransferBack(wo);
        }
#line 1379 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiQGraphicsProxyWidget.cpp"

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_setWidget, doc_QGraphicsProxyWidget_setWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_widget, "QGraphicsProxyWidget.widget() -> QWidget");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_widget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_widget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp))
        {
            QWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->widget();
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_widget, doc_QGraphicsProxyWidget_widget);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_subWidgetRect, "QGraphicsProxyWidget.subWidgetRect(QWidget) -> QRectF");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_subWidgetRect(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_subWidgetRect(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QWidget* a0;
        const QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QWidget, &a0))
        {
            QRectF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QRectF(sipCpp->subWidgetRect(a0));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QRectF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_subWidgetRect, doc_QGraphicsProxyWidget_subWidgetRect);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_setGeometry, "QGraphicsProxyWidget.setGeometry(QRectF)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_setGeometry(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_setGeometry(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QRectF* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ9", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QRectF, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::setGeometry(*a0) : sipCpp->setGeometry(*a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_setGeometry, doc_QGraphicsProxyWidget_setGeometry);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_paint, "QGraphicsProxyWidget.paint(QPainter, QStyleOptionGraphicsItem, QWidget)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_paint(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_paint(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QPainter* a0;
        const QStyleOptionGraphicsItem* a1;
        QWidget* a2;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8J8J8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QPainter, &a0, sipType_QStyleOptionGraphicsItem, &a1, sipType_QWidget, &a2))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::paint(a0,a1,a2) : sipCpp->paint(a0,a1,a2));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_paint, doc_QGraphicsProxyWidget_paint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_type, "QGraphicsProxyWidget.type() -> int");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_type(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_type(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        const QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "B", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp))
        {
            int sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::type() : sipCpp->type());
            Py_END_ALLOW_THREADS

            return SIPLong_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_type, doc_QGraphicsProxyWidget_type);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_createProxyForChildWidget, "QGraphicsProxyWidget.createProxyForChildWidget(QWidget) -> QGraphicsProxyWidget");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_createProxyForChildWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_createProxyForChildWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QWidget* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "BJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QWidget, &a0))
        {
            QGraphicsProxyWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->createProxyForChildWidget(a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QGraphicsProxyWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_createProxyForChildWidget, doc_QGraphicsProxyWidget_createProxyForChildWidget);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_itemChange, "QGraphicsProxyWidget.itemChange(QGraphicsItem.GraphicsItemChange, QVariant) -> QVariant");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_itemChange(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_itemChange(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsItem::GraphicsItemChange a0;
        const QVariant* a1;
        int a1State = 0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pEJ1", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsItem_GraphicsItemChange, &a0, sipType_QVariant,&a1, &a1State))
        {
            QVariant*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QVariant((sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::itemChange(a0,*a1) : sipCpp->itemChange(a0,*a1)));
            Py_END_ALLOW_THREADS
            sipReleaseType(const_cast<QVariant *>(a1),sipType_QVariant,a1State);

            return sipConvertFromNewType(sipRes,sipType_QVariant,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_itemChange, doc_QGraphicsProxyWidget_itemChange);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_event, "QGraphicsProxyWidget.event(QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_event(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_event(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::event(a0) : sipCpp->event(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_event, doc_QGraphicsProxyWidget_event);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_eventFilter, "QGraphicsProxyWidget.eventFilter(QObject, QEvent) -> bool");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_eventFilter(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_eventFilter(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QObject* a0;
        QEvent* a1;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8J8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QObject, &a0, sipType_QEvent, &a1))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::eventFilter(a0,a1) : sipCpp->eventFilter(a0,a1));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_eventFilter, doc_QGraphicsProxyWidget_eventFilter);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_showEvent, "QGraphicsProxyWidget.showEvent(QShowEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_showEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_showEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QShowEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QShowEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::showEvent(a0) : sipCpp->showEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_showEvent, doc_QGraphicsProxyWidget_showEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_hideEvent, "QGraphicsProxyWidget.hideEvent(QHideEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_hideEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_hideEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QHideEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QHideEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::hideEvent(a0) : sipCpp->hideEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_hideEvent, doc_QGraphicsProxyWidget_hideEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_contextMenuEvent, "QGraphicsProxyWidget.contextMenuEvent(QGraphicsSceneContextMenuEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_contextMenuEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_contextMenuEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneContextMenuEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneContextMenuEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::contextMenuEvent(a0) : sipCpp->contextMenuEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_contextMenuEvent, doc_QGraphicsProxyWidget_contextMenuEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_hoverEnterEvent, "QGraphicsProxyWidget.hoverEnterEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_hoverEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_hoverEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::hoverEnterEvent(a0) : sipCpp->hoverEnterEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_hoverEnterEvent, doc_QGraphicsProxyWidget_hoverEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_hoverLeaveEvent, "QGraphicsProxyWidget.hoverLeaveEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_hoverLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_hoverLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::hoverLeaveEvent(a0) : sipCpp->hoverLeaveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_hoverLeaveEvent, doc_QGraphicsProxyWidget_hoverLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_hoverMoveEvent, "QGraphicsProxyWidget.hoverMoveEvent(QGraphicsSceneHoverEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_hoverMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_hoverMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneHoverEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneHoverEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::hoverMoveEvent(a0) : sipCpp->hoverMoveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_hoverMoveEvent, doc_QGraphicsProxyWidget_hoverMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_grabMouseEvent, "QGraphicsProxyWidget.grabMouseEvent(QEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_grabMouseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_grabMouseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::grabMouseEvent(a0) : sipCpp->grabMouseEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_grabMouseEvent, doc_QGraphicsProxyWidget_grabMouseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_ungrabMouseEvent, "QGraphicsProxyWidget.ungrabMouseEvent(QEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_ungrabMouseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_ungrabMouseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::ungrabMouseEvent(a0) : sipCpp->ungrabMouseEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_ungrabMouseEvent, doc_QGraphicsProxyWidget_ungrabMouseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_mouseMoveEvent, "QGraphicsProxyWidget.mouseMoveEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_mouseMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_mouseMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::mouseMoveEvent(a0) : sipCpp->mouseMoveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_mouseMoveEvent, doc_QGraphicsProxyWidget_mouseMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_mousePressEvent, "QGraphicsProxyWidget.mousePressEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_mousePressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_mousePressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::mousePressEvent(a0) : sipCpp->mousePressEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_mousePressEvent, doc_QGraphicsProxyWidget_mousePressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_mouseReleaseEvent, "QGraphicsProxyWidget.mouseReleaseEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_mouseReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_mouseReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::mouseReleaseEvent(a0) : sipCpp->mouseReleaseEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_mouseReleaseEvent, doc_QGraphicsProxyWidget_mouseReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_mouseDoubleClickEvent, "QGraphicsProxyWidget.mouseDoubleClickEvent(QGraphicsSceneMouseEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_mouseDoubleClickEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_mouseDoubleClickEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneMouseEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneMouseEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::mouseDoubleClickEvent(a0) : sipCpp->mouseDoubleClickEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_mouseDoubleClickEvent, doc_QGraphicsProxyWidget_mouseDoubleClickEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_wheelEvent, "QGraphicsProxyWidget.wheelEvent(QGraphicsSceneWheelEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_wheelEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_wheelEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneWheelEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneWheelEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::wheelEvent(a0) : sipCpp->wheelEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_wheelEvent, doc_QGraphicsProxyWidget_wheelEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_keyPressEvent, "QGraphicsProxyWidget.keyPressEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_keyPressEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_keyPressEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QKeyEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::keyPressEvent(a0) : sipCpp->keyPressEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_keyPressEvent, doc_QGraphicsProxyWidget_keyPressEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_keyReleaseEvent, "QGraphicsProxyWidget.keyReleaseEvent(QKeyEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_keyReleaseEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_keyReleaseEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QKeyEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QKeyEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::keyReleaseEvent(a0) : sipCpp->keyReleaseEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_keyReleaseEvent, doc_QGraphicsProxyWidget_keyReleaseEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_focusInEvent, "QGraphicsProxyWidget.focusInEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_focusInEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_focusInEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QFocusEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::focusInEvent(a0) : sipCpp->focusInEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_focusInEvent, doc_QGraphicsProxyWidget_focusInEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_focusOutEvent, "QGraphicsProxyWidget.focusOutEvent(QFocusEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_focusOutEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_focusOutEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QFocusEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QFocusEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::focusOutEvent(a0) : sipCpp->focusOutEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_focusOutEvent, doc_QGraphicsProxyWidget_focusOutEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_focusNextPrevChild, "QGraphicsProxyWidget.focusNextPrevChild(bool) -> bool");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_focusNextPrevChild(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_focusNextPrevChild(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        bool a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pb", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, &a0))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::focusNextPrevChild(a0) : sipCpp->focusNextPrevChild(a0));
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_focusNextPrevChild, doc_QGraphicsProxyWidget_focusNextPrevChild);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_sizeHint, "QGraphicsProxyWidget.sizeHint(Qt.SizeHint, QSizeF constraint=QSizeF()) -> QSizeF");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_sizeHint(PyObject *, PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_sizeHint(PyObject *sipSelf, PyObject *sipArgs, PyObject *sipKwds)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        Qt::SizeHint a0;
        const QSizeF& a1def = QSizeF();
        const QSizeF* a1 = &a1def;
        const QGraphicsProxyWidget *sipCpp;

        static const char *sipKwdList[] = {
            NULL,
            sipName_constraint,
        };

        if (sipParseKwdArgs(&sipParseErr, sipArgs, sipKwds, sipKwdList, NULL, "pE|J9", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_Qt_SizeHint, &a0, sipType_QSizeF, &a1))
        {
            QSizeF*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QSizeF((sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::sizeHint(a0,*a1) : sipCpp->sizeHint(a0,*a1)));
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QSizeF,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_sizeHint, doc_QGraphicsProxyWidget_sizeHint);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_resizeEvent, "QGraphicsProxyWidget.resizeEvent(QGraphicsSceneResizeEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_resizeEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_resizeEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneResizeEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneResizeEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::resizeEvent(a0) : sipCpp->resizeEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_resizeEvent, doc_QGraphicsProxyWidget_resizeEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_dragEnterEvent, "QGraphicsProxyWidget.dragEnterEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_dragEnterEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_dragEnterEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::dragEnterEvent(a0) : sipCpp->dragEnterEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_dragEnterEvent, doc_QGraphicsProxyWidget_dragEnterEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_dragLeaveEvent, "QGraphicsProxyWidget.dragLeaveEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_dragLeaveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_dragLeaveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::dragLeaveEvent(a0) : sipCpp->dragLeaveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_dragLeaveEvent, doc_QGraphicsProxyWidget_dragLeaveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_dragMoveEvent, "QGraphicsProxyWidget.dragMoveEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_dragMoveEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_dragMoveEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::dragMoveEvent(a0) : sipCpp->dragMoveEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_dragMoveEvent, doc_QGraphicsProxyWidget_dragMoveEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_dropEvent, "QGraphicsProxyWidget.dropEvent(QGraphicsSceneDragDropEvent)");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_dropEvent(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_dropEvent(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;
    bool sipSelfWasArg = (!sipSelf || sipIsDerived((sipSimpleWrapper *)sipSelf));

    {
        QGraphicsSceneDragDropEvent* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QGraphicsSceneDragDropEvent, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            (sipSelfWasArg ? sipCpp->QGraphicsProxyWidget::dropEvent(a0) : sipCpp->dropEvent(a0));
            Py_END_ALLOW_THREADS

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_dropEvent, doc_QGraphicsProxyWidget_dropEvent);

    return NULL;
}


PyDoc_STRVAR(doc_QGraphicsProxyWidget_newProxyWidget, "QGraphicsProxyWidget.newProxyWidget(QWidget) -> QGraphicsProxyWidget");

extern "C" {static PyObject *meth_QGraphicsProxyWidget_newProxyWidget(PyObject *, PyObject *);}
static PyObject *meth_QGraphicsProxyWidget_newProxyWidget(PyObject *sipSelf, PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        const QWidget* a0;
        QGraphicsProxyWidget *sipCpp;

        if (sipParseArgs(&sipParseErr, sipArgs, "pJ8", &sipSelf, sipType_QGraphicsProxyWidget, &sipCpp, sipType_QWidget, &a0))
        {
            QGraphicsProxyWidget*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = sipCpp->newProxyWidget(a0);
            Py_END_ALLOW_THREADS

            return sipConvertFromNewType(sipRes,sipType_QGraphicsProxyWidget,NULL);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipParseErr, sipName_QGraphicsProxyWidget, sipName_newProxyWidget, doc_QGraphicsProxyWidget_newProxyWidget);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_QGraphicsProxyWidget(void *, const sipTypeDef *);}
static void *cast_QGraphicsProxyWidget(void *ptr, const sipTypeDef *targetType)
{
    void *res;

    if (targetType == sipType_QGraphicsProxyWidget)
        return ptr;

    if ((res = ((const sipClassTypeDef *)sipType_QGraphicsWidget)->ctd_cast((QGraphicsWidget *)(QGraphicsProxyWidget *)ptr,targetType)) != NULL)
        return res;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_QGraphicsProxyWidget(void *, int);}
static void release_QGraphicsProxyWidget(void *sipCppV,int)
{
    QGraphicsProxyWidget *sipCpp = reinterpret_cast<QGraphicsProxyWidget *>(sipCppV);

    Py_BEGIN_ALLOW_THREADS

    if (QThread::currentThread() == sipCpp->thread())
        delete sipCpp;
    else
        sipCpp->deleteLater();

    Py_END_ALLOW_THREADS
}


extern "C" {static void dealloc_QGraphicsProxyWidget(sipSimpleWrapper *);}
static void dealloc_QGraphicsProxyWidget(sipSimpleWrapper *sipSelf)
{
    if (sipIsDerived(sipSelf))
        reinterpret_cast<sipQGraphicsProxyWidget *>(sipGetAddress(sipSelf))->sipPySelf = NULL;

    if (sipIsPyOwned(sipSelf))
    {
        release_QGraphicsProxyWidget(sipGetAddress(sipSelf),sipSelf->flags);
    }
}


extern "C" {static void *init_type_QGraphicsProxyWidget(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QGraphicsProxyWidget(sipSimpleWrapper *sipSelf, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **sipOwner, PyObject **sipParseErr)
{
    sipQGraphicsProxyWidget *sipCpp = 0;

    {
        QGraphicsItem* a0 = 0;
        Qt::WindowFlags a1def = 0;
        Qt::WindowFlags* a1 = &a1def;
        int a1State = 0;

        static const char *sipKwdList[] = {
            sipName_parent,
            sipName_flags,
        };

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, sipKwdList, sipUnused, "|JHJ1", sipType_QGraphicsItem, &a0, sipOwner, sipType_Qt_WindowFlags, &a1, &a1State))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new sipQGraphicsProxyWidget(a0,*a1);
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_Qt_WindowFlags,a1State);

            sipCpp->sipPySelf = sipSelf;

            return sipCpp;
        }
    }

    return NULL;
}


/* Define this type's super-types. */
static sipEncodedTypeDef supers_QGraphicsProxyWidget[] = {{218, 255, 1}};


static PyMethodDef methods_QGraphicsProxyWidget[] = {
    {SIP_MLNAME_CAST(sipName_contextMenuEvent), meth_QGraphicsProxyWidget_contextMenuEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_contextMenuEvent)},
    {SIP_MLNAME_CAST(sipName_createProxyForChildWidget), meth_QGraphicsProxyWidget_createProxyForChildWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_createProxyForChildWidget)},
    {SIP_MLNAME_CAST(sipName_dragEnterEvent), meth_QGraphicsProxyWidget_dragEnterEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_dragEnterEvent)},
    {SIP_MLNAME_CAST(sipName_dragLeaveEvent), meth_QGraphicsProxyWidget_dragLeaveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_dragLeaveEvent)},
    {SIP_MLNAME_CAST(sipName_dragMoveEvent), meth_QGraphicsProxyWidget_dragMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_dragMoveEvent)},
    {SIP_MLNAME_CAST(sipName_dropEvent), meth_QGraphicsProxyWidget_dropEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_dropEvent)},
    {SIP_MLNAME_CAST(sipName_event), meth_QGraphicsProxyWidget_event, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_event)},
    {SIP_MLNAME_CAST(sipName_eventFilter), meth_QGraphicsProxyWidget_eventFilter, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_eventFilter)},
    {SIP_MLNAME_CAST(sipName_focusInEvent), meth_QGraphicsProxyWidget_focusInEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_focusInEvent)},
    {SIP_MLNAME_CAST(sipName_focusNextPrevChild), meth_QGraphicsProxyWidget_focusNextPrevChild, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_focusNextPrevChild)},
    {SIP_MLNAME_CAST(sipName_focusOutEvent), meth_QGraphicsProxyWidget_focusOutEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_focusOutEvent)},
    {SIP_MLNAME_CAST(sipName_grabMouseEvent), meth_QGraphicsProxyWidget_grabMouseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_grabMouseEvent)},
    {SIP_MLNAME_CAST(sipName_hideEvent), meth_QGraphicsProxyWidget_hideEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_hideEvent)},
    {SIP_MLNAME_CAST(sipName_hoverEnterEvent), meth_QGraphicsProxyWidget_hoverEnterEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_hoverEnterEvent)},
    {SIP_MLNAME_CAST(sipName_hoverLeaveEvent), meth_QGraphicsProxyWidget_hoverLeaveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_hoverLeaveEvent)},
    {SIP_MLNAME_CAST(sipName_hoverMoveEvent), meth_QGraphicsProxyWidget_hoverMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_hoverMoveEvent)},
    {SIP_MLNAME_CAST(sipName_itemChange), meth_QGraphicsProxyWidget_itemChange, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_itemChange)},
    {SIP_MLNAME_CAST(sipName_keyPressEvent), meth_QGraphicsProxyWidget_keyPressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_keyPressEvent)},
    {SIP_MLNAME_CAST(sipName_keyReleaseEvent), meth_QGraphicsProxyWidget_keyReleaseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_keyReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_mouseDoubleClickEvent), meth_QGraphicsProxyWidget_mouseDoubleClickEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_mouseDoubleClickEvent)},
    {SIP_MLNAME_CAST(sipName_mouseMoveEvent), meth_QGraphicsProxyWidget_mouseMoveEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_mouseMoveEvent)},
    {SIP_MLNAME_CAST(sipName_mousePressEvent), meth_QGraphicsProxyWidget_mousePressEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_mousePressEvent)},
    {SIP_MLNAME_CAST(sipName_mouseReleaseEvent), meth_QGraphicsProxyWidget_mouseReleaseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_mouseReleaseEvent)},
    {SIP_MLNAME_CAST(sipName_newProxyWidget), meth_QGraphicsProxyWidget_newProxyWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_newProxyWidget)},
    {SIP_MLNAME_CAST(sipName_paint), meth_QGraphicsProxyWidget_paint, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_paint)},
    {SIP_MLNAME_CAST(sipName_resizeEvent), meth_QGraphicsProxyWidget_resizeEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_resizeEvent)},
    {SIP_MLNAME_CAST(sipName_setGeometry), meth_QGraphicsProxyWidget_setGeometry, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_setGeometry)},
    {SIP_MLNAME_CAST(sipName_setWidget), meth_QGraphicsProxyWidget_setWidget, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_setWidget)},
    {SIP_MLNAME_CAST(sipName_showEvent), meth_QGraphicsProxyWidget_showEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_showEvent)},
    {SIP_MLNAME_CAST(sipName_sizeHint), (PyCFunction)meth_QGraphicsProxyWidget_sizeHint, METH_VARARGS|METH_KEYWORDS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_sizeHint)},
    {SIP_MLNAME_CAST(sipName_subWidgetRect), meth_QGraphicsProxyWidget_subWidgetRect, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_subWidgetRect)},
    {SIP_MLNAME_CAST(sipName_type), meth_QGraphicsProxyWidget_type, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_type)},
    {SIP_MLNAME_CAST(sipName_ungrabMouseEvent), meth_QGraphicsProxyWidget_ungrabMouseEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_ungrabMouseEvent)},
    {SIP_MLNAME_CAST(sipName_wheelEvent), meth_QGraphicsProxyWidget_wheelEvent, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_wheelEvent)},
    {SIP_MLNAME_CAST(sipName_widget), meth_QGraphicsProxyWidget_widget, METH_VARARGS, SIP_MLDOC_CAST(doc_QGraphicsProxyWidget_widget)}
};

PyDoc_STRVAR(doc_QGraphicsProxyWidget, "\1QGraphicsProxyWidget(QGraphicsItem parent=None, Qt.WindowFlags flags=0)");


pyqt4ClassTypeDef sipTypeDef_QtGui_QGraphicsProxyWidget = {
{
    {
        -1,
        0,
        0,
        SIP_TYPE_SCC|SIP_TYPE_CLASS,
        sipNameNr_QGraphicsProxyWidget,
        {0}
    },
    {
        sipNameNr_QGraphicsProxyWidget,
        {0, 0, 1},
        35, methods_QGraphicsProxyWidget,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    doc_QGraphicsProxyWidget,
    -1,
    -1,
    supers_QGraphicsProxyWidget,
    0,
    init_type_QGraphicsProxyWidget,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_QGraphicsProxyWidget,
    0,
    0,
    0,
    release_QGraphicsProxyWidget,
    cast_QGraphicsProxyWidget,
    0,
    0,
    0,
    0,
    0,
    0
},
    &QGraphicsProxyWidget::staticMetaObject,
    0,
    0
};
