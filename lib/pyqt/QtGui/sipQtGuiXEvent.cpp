/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.2 on Wed Sep  3 09:36:19 2014
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * If you are unsure which license is appropriate for your use, please
 * contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtGui.h"

#line 36 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qapplication.sip"
#include <qapplication.h>
#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiXEvent.cpp"



extern "C" {static int convertTo_XEvent(PyObject *, void **, int *, PyObject *);}
static int convertTo_XEvent(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *)
{
    XEvent **sipCppPtr = reinterpret_cast<XEvent **>(sipCppPtrV);

#line 40 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qapplication.sip"
    void *addr = sipConvertToVoidPtr(sipPy);

    if (!sipIsErr)
        return !PyErr_Occurred();

    *sipCppPtr = reinterpret_cast<XEvent *>(addr);

    return 0;
#line 52 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiXEvent.cpp"
}


extern "C" {static PyObject *convertFrom_XEvent(void *, PyObject *);}
static PyObject *convertFrom_XEvent(void *sipCppV, PyObject *)
{
   XEvent *sipCpp = reinterpret_cast<XEvent *>(sipCppV);

#line 51 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qapplication.sip"
    return sipConvertFromVoidPtr(sipCpp);
#line 63 "/home/desa2/PyQt-x11-gpl-4.10.4/QtGui/sipQtGuiXEvent.cpp"
}


sipMappedTypeDef sipTypeDef_QtGui_XEvent = {
    {
        -1,
        0,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_XEvent,
        {0}
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    0,
    0,
    0,
    0,
    convertTo_XEvent,
    convertFrom_XEvent
};
