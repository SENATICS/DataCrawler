/*
 * Module code.
 *
 * Generated by SIP 4.16.2 on Wed Sep  3 09:36:27 2014
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * If you are unsure which license is appropriate for your use, please
 * contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtScript.h"

#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qobject.sip"
#include <qobject.h>
#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptstring.sip"
#include <qscriptstring.h>
#line 37 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 274 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qvariant.sip"
#include <qvariant.h>
#line 40 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptengineagent.sip"
#include <qscriptengineagent.h>
#line 43 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 45 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptvalue.sip"
#include <qscriptvalue.h>
#line 46 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 36 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 49 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 45 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptvalue.sip"
#include <qscriptvalue.h>
#line 52 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptclass.sip"
#include <qscriptclass.h>
#line 55 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptclasspropertyiterator.sip"
#include <qscriptclasspropertyiterator.h>
#line 58 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptclass.sip"
#include <qscriptclass.h>
#line 61 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 31 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qdatastream.sip"
#include <qdatastream.h>
#line 64 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptcontextinfo.sip"
#include <qscriptcontextinfo.h>
#line 67 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptengine.sip"
#include <qscriptengine.h>
#line 70 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"
#line 45 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptvalue.sip"
#include <qscriptvalue.h>
#line 73 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"

/* Define the strings used by this module. */
const char sipStrings_QtScript[] = {
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'E', 'n', 'g', 'i', 'n', 'e', ':', ':', 'Q', 'O', 'b', 'j', 'e', 'c', 't', 'W', 'r', 'a', 'p', 'O', 'p', 't', 'i', 'o', 'n', 's', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'E', 'n', 'g', 'i', 'n', 'e', ':', ':', 'Q', 'O', 'b', 'j', 'e', 'c', 't', 'W', 'r', 'a', 'p', 'O', 'p', 't', 'i', 'o', 'n', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 'I', 'n', 'f', 'o', ':', ':', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 'T', 'y', 'p', 'e', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'S', 'y', 'n', 't', 'a', 'x', 'C', 'h', 'e', 'c', 'k', 'R', 'e', 's', 'u', 'l', 't', ':', ':', 'S', 't', 'a', 't', 'e', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', ':', ':', 'E', 'x', 'e', 'c', 'u', 't', 'i', 'o', 'n', 'S', 't', 'a', 't', 'e', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'E', 'n', 'g', 'i', 'n', 'e', 'A', 'g', 'e', 'n', 't', ':', ':', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'E', 'n', 'g', 'i', 'n', 'e', ':', ':', 'V', 'a', 'l', 'u', 'e', 'O', 'w', 'n', 'e', 'r', 's', 'h', 'i', 'p', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'l', 'a', 's', 's', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'I', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'P', 'y', 'Q', 't', '4', '.', 'Q', 't', 'C', 'o', 'r', 'e', '.', 'p', 'y', 'q', 't', 'W', 'r', 'a', 'p', 'p', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'V', 'a', 'l', 'u', 'e', ':', ':', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'F', 'l', 'a', 'g', 's', 0,
    'u', 'n', 'c', 'a', 'u', 'g', 'h', 't', 'E', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 'L', 'i', 'n', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'P', 'r', 'e', 'f', 'e', 'r', 'E', 'x', 'i', 's', 't', 'i', 'n', 'g', 'W', 'r', 'a', 'p', 'p', 'e', 'r', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'A', 'u', 't', 'o', 'C', 'r', 'e', 'a', 't', 'e', 'D', 'y', 'n', 'a', 'm', 'i', 'c', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'E', 'x', 'c', 'l', 'u', 'd', 'e', 'S', 'u', 'p', 'e', 'r', 'C', 'l', 'a', 's', 's', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'i', 'e', 's', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'V', 'a', 'l', 'u', 'e', ':', ':', 'S', 'p', 'e', 'c', 'i', 'a', 'l', 'V', 'a', 'l', 'u', 'e', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'V', 'a', 'l', 'u', 'e', ':', ':', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'F', 'l', 'a', 'g', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'V', 'a', 'l', 'u', 'e', ':', ':', 'R', 'e', 's', 'o', 'l', 'v', 'e', 'F', 'l', 'a', 'g', 's', 0,
    'r', 'e', 'p', 'o', 'r', 't', 'A', 'd', 'd', 'i', 't', 'i', 'o', 'n', 'a', 'l', 'M', 'e', 'm', 'o', 'r', 'y', 'C', 'o', 's', 't', 0,
    'i', 'n', 's', 't', 'a', 'l', 'l', 'T', 'r', 'a', 'n', 's', 'l', 'a', 't', 'o', 'r', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 's', 0,
    'u', 'n', 'c', 'a', 'u', 'g', 'h', 't', 'E', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 'B', 'a', 'c', 'k', 't', 'r', 'a', 'c', 'e', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 'I', 'n', 'f', 'o', '>', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'V', 'a', 'l', 'u', 'e', ':', ':', 'R', 'e', 's', 'o', 'l', 'v', 'e', 'F', 'l', 'a', 'g', 0,
    'D', 'e', 'b', 'u', 'g', 'g', 'e', 'r', 'I', 'n', 'v', 'o', 'c', 'a', 't', 'i', 'o', 'n', 'R', 'e', 'q', 'u', 'e', 's', 't', 0,
    'E', 'x', 'c', 'l', 'u', 'd', 'e', 'S', 'u', 'p', 'e', 'r', 'C', 'l', 'a', 's', 's', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'S', 'y', 'n', 't', 'a', 'x', 'C', 'h', 'e', 'c', 'k', 'R', 'e', 's', 'u', 'l', 't', 0,
    's', 'e', 't', 'P', 'r', 'o', 'c', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 's', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'S', 'k', 'i', 'p', 'M', 'e', 't', 'h', 'o', 'd', 's', 'I', 'n', 'E', 'n', 'u', 'm', 'e', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'E', 'x', 'c', 'l', 'u', 'd', 'e', 'S', 'u', 'p', 'e', 'r', 'C', 'l', 'a', 's', 's', 'M', 'e', 't', 'h', 'o', 'd', 's', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'l', 'a', 's', 's', ':', ':', 'Q', 'u', 'e', 'r', 'y', 'F', 'l', 'a', 'g', 's', 0,
    'f', 'u', 'n', 'c', 't', 'i', 'o', 'n', 'S', 't', 'a', 'r', 't', 'L', 'i', 'n', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'l', 'a', 's', 's', ':', ':', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'l', 'a', 's', 's', ':', ':', 'Q', 'u', 'e', 'r', 'y', 'F', 'l', 'a', 'g', 0,
    's', 'i', 'g', 'n', 'a', 'l', 'H', 'a', 'n', 'd', 'l', 'e', 'r', 'E', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 0,
    'f', 'u', 'n', 'c', 't', 'i', 'o', 'n', 'P', 'a', 'r', 'a', 'm', 'e', 't', 'e', 'r', 'N', 'a', 'm', 'e', 's', 0,
    'p', 'r', 'o', 'c', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 's', 'I', 'n', 't', 'e', 'r', 'v', 'a', 'l', 0,
    'f', 'u', 'n', 'c', 't', 'i', 'o', 'n', 'E', 'n', 'd', 'L', 'i', 'n', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'i', 's', 'C', 'a', 'l', 'l', 'e', 'd', 'A', 's', 'C', 'o', 'n', 's', 't', 'r', 'u', 'c', 't', 'o', 'r', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', ':', ':', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'V', 'a', 'l', 'u', 'e', 'I', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'h', 'a', 's', 'U', 'n', 'c', 'a', 'u', 'g', 'h', 't', 'E', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'S', 'c', 'r', 'i', 'p', 't', 'V', 'a', 'l', 'u', 'e', '>', 0,
    'a', 'v', 'a', 'i', 'l', 'a', 'b', 'l', 'e', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 's', 0,
    's', 'e', 't', 'D', 'e', 'f', 'a', 'u', 'l', 't', 'P', 'r', 'o', 't', 'o', 't', 'y', 'p', 'e', 0,
    'E', 'x', 'c', 'l', 'u', 'd', 'e', 'C', 'h', 'i', 'l', 'd', 'O', 'b', 'j', 'e', 'c', 't', 's', 0,
    's', 'e', 't', 'A', 'c', 't', 'i', 'v', 'a', 't', 'i', 'o', 'n', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'E', 'n', 'g', 'i', 'n', 'e', 'A', 'g', 'e', 'n', 't', 0,
    'i', 'm', 'p', 'o', 'r', 't', 'e', 'd', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 's', 0,
    'E', 'x', 'c', 'l', 'u', 'd', 'e', 'D', 'e', 'l', 'e', 't', 'e', 'L', 'a', 't', 'e', 'r', 0,
    'Q', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 'I', 'n', 'f', 'o', 0,
    'H', 'a', 'n', 'd', 'l', 'e', 's', 'W', 'r', 'i', 't', 'e', 'A', 'c', 'c', 'e', 's', 's', 0,
    'K', 'e', 'e', 'p', 'E', 'x', 'i', 's', 't', 'i', 'n', 'g', 'F', 'l', 'a', 'g', 's', 0,
    'S', 'k', 'i', 'p', 'I', 'n', 'E', 'n', 'u', 'm', 'e', 'r', 'a', 't', 'i', 'o', 'n', 0,
    'e', 'r', 'r', 'o', 'r', 'C', 'o', 'l', 'u', 'm', 'n', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'q', 'S', 'c', 'r', 'i', 'p', 't', 'D', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 0,
    'u', 'n', 'c', 'a', 'u', 'g', 'h', 't', 'E', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 0,
    'f', 'u', 'n', 'c', 't', 'i', 'o', 'n', 'M', 'e', 't', 'a', 'I', 'n', 'd', 'e', 'x', 0,
    's', 'u', 'p', 'p', 'o', 'r', 't', 's', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'H', 'a', 'n', 'd', 'l', 'e', 's', 'R', 'e', 'a', 'd', 'A', 'c', 'c', 'e', 's', 's', 0,
    's', 'i', 'p', '.', 's', 'i', 'm', 'p', 'l', 'e', 'w', 'r', 'a', 'p', 'p', 'e', 'r', 0,
    'R', 'e', 's', 'o', 'l', 'v', 'e', 'P', 'r', 'o', 't', 'o', 't', 'y', 'p', 'e', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'P', 'r', 'o', 't', 'o', 't', 'y', 'p', 'e', 0,
    'a', 'c', 't', 'i', 'v', 'a', 't', 'i', 'o', 'n', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'N', 'o', 't', 'i', 'f', 'y', 0,
    'e', 'r', 'r', 'o', 'r', 'L', 'i', 'n', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    's', 'e', 't', 'G', 'l', 'o', 'b', 'a', 'l', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'c', 'l', 'e', 'a', 'r', 'E', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 's', 0,
    'a', 'b', 'o', 'r', 't', 'E', 'v', 'a', 'l', 'u', 'a', 't', 'i', 'o', 'n', 0,
    'i', 'm', 'p', 'o', 'r', 't', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'S', 'c', 'r', 'i', 'p', 't', 'O', 'w', 'n', 'e', 'r', 's', 'h', 'i', 'p', 0,
    'a', 'r', 'g', 'u', 'm', 'e', 'n', 't', 's', 'O', 'b', 'j', 'e', 'c', 't', 0,
    's', 'e', 't', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'l', 'a', 's', 's', 0,
    's', 't', 'r', 'i', 'c', 't', 'l', 'y', 'E', 'q', 'u', 'a', 'l', 's', 0,
    'U', 'n', 'd', 'e', 'f', 'i', 'n', 'e', 'd', 'V', 'a', 'l', 'u', 'e', 0,
    'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'S', 'e', 't', 't', 'e', 'r', 0,
    'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'G', 'e', 't', 't', 'e', 'r', 0,
    'e', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 'C', 'a', 't', 'c', 'h', 0,
    'e', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 'T', 'h', 'r', 'o', 'w', 0,
    'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'o', 'n', 'n', 'e', 'c', 't', 0,
    't', 'o', 'S', 't', 'r', 'i', 'n', 'g', 'H', 'a', 'n', 'd', 'l', 'e', 0,
    'c', 'o', 'l', 'l', 'e', 'c', 't', 'G', 'a', 'r', 'b', 'a', 'g', 'e', 0,
    'n', 'e', 'w', 'Q', 'M', 'e', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'u', 'n', 'd', 'e', 'f', 'i', 'n', 'e', 'd', 'V', 'a', 'l', 'u', 'e', 0,
    'c', 'u', 'r', 'r', 'e', 'n', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'N', 'a', 't', 'i', 'v', 'e', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 0,
    'S', 'c', 'r', 'i', 'p', 't', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 0,
    'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 'E', 'r', 'r', 'o', 'r', 0,
    'E', 'x', 'c', 'e', 'p', 't', 'i', 'o', 'n', 'S', 't', 'a', 't', 'e', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'P', 'y', 'Q', 't', '4', '.', 'Q', 't', 'S', 'c', 'r', 'i', 'p', 't', 0,
    't', 'o', 'Q', 'M', 'e', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'i', 's', 'Q', 'M', 'e', 't', 'a', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'Q', 'O', 'b', 'j', 'e', 'c', 't', 'M', 'e', 'm', 'b', 'e', 'r', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'f', 'u', 'n', 'c', 't', 'i', 'o', 'n', 'E', 'n', 't', 'r', 'y', 0,
    'A', 'u', 't', 'o', 'O', 'w', 'n', 'e', 'r', 's', 'h', 'i', 'p', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'E', 'n', 'g', 'i', 'n', 'e', 0,
    's', 'e', 't', 'T', 'h', 'i', 's', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'a', 'r', 'g', 'u', 'm', 'e', 'n', 't', 'C', 'o', 'u', 'n', 't', 0,
    'p', 'a', 'r', 'e', 'n', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'F', 'l', 'a', 'g', 's', 0,
    'q', 'u', 'e', 'r', 'y', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    's', 'e', 't', 'P', 'r', 'o', 't', 'o', 't', 'y', 'p', 'e', 0,
    'R', 'e', 's', 'o', 'l', 'v', 'e', 'S', 'c', 'o', 'p', 'e', 0,
    'R', 'e', 's', 'o', 'l', 'v', 'e', 'L', 'o', 'c', 'a', 'l', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'V', 'a', 'l', 'u', 'e', 0,
    't', 'o', 'A', 'r', 'r', 'a', 'y', 'I', 'n', 'd', 'e', 'x', 0,
    'f', 'u', 'n', 'c', 't', 'i', 'o', 'n', 'E', 'x', 'i', 't', 0,
    's', 'c', 'r', 'i', 'p', 't', 'U', 'n', 'l', 'o', 'a', 'd', 0,
    'e', 'r', 'r', 'o', 'r', 'M', 'e', 's', 's', 'a', 'g', 'e', 0,
    'I', 'n', 't', 'e', 'r', 'm', 'e', 'd', 'i', 'a', 't', 'e', 0,
    'i', 's', 'E', 'v', 'a', 'l', 'u', 'a', 't', 'i', 'n', 'g', 0,
    'g', 'l', 'o', 'b', 'a', 'l', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'E', 'x', 'c', 'l', 'u', 'd', 'e', 'S', 'l', 'o', 't', 's', 0,
    'f', 'u', 'n', 'c', 't', 'i', 'o', 'n', 'T', 'y', 'p', 'e', 0,
    'f', 'u', 'n', 'c', 't', 'i', 'o', 'n', 'N', 'a', 'm', 'e', 0,
    'Q', 'S', 'c', 'r', 'i', 'p', 't', 'C', 'l', 'a', 's', 's', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'U', 'n', 'k', 'n', 'o', 'w', 'n', 'E', 'r', 'r', 'o', 'r', 0,
    'i', 's', 'U', 'n', 'd', 'e', 'f', 'i', 'n', 'e', 'd', 0,
    'U', 'n', 'd', 'e', 'l', 'e', 't', 'a', 'b', 'l', 'e', 0,
    'R', 'e', 's', 'o', 'l', 'v', 'e', 'F', 'u', 'l', 'l', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'P', 'u', 's', 'h', 0,
    'c', 'h', 'e', 'c', 'k', 'S', 'y', 'n', 't', 'a', 'x', 0,
    's', 'c', 'r', 'i', 'p', 't', 'C', 'l', 'a', 's', 's', 0,
    'n', 'e', 'w', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 0,
    'c', 'a', 'n', 'E', 'v', 'a', 'l', 'u', 'a', 't', 'e', 0,
    'p', 'u', 's', 'h', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'Q', 't', 'O', 'w', 'n', 'e', 'r', 's', 'h', 'i', 'p', 0,
    'S', 'y', 'n', 't', 'a', 'x', 'E', 'r', 'r', 'o', 'r', 0,
    'N', 'o', 'r', 'm', 'a', 'l', 'S', 't', 'a', 't', 'e', 0,
    'h', 'a', 's', 'P', 'r', 'e', 'v', 'i', 'o', 'u', 's', 0,
    'n', 'e', 'w', 'I', 't', 'e', 'r', 'a', 't', 'o', 'r', 0,
    'H', 'a', 's', 'I', 'n', 's', 't', 'a', 'n', 'c', 'e', 0,
    'c', 'u', 's', 't', 'o', 'm', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'e', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    's', 'c', 'r', 'i', 'p', 't', 'N', 'a', 'm', 'e', 0,
    'i', 'n', 's', 't', 'a', 'n', 'c', 'e', 'O', 'f', 0,
    'i', 's', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'P', 'o', 'p', 0,
    's', 'c', 'r', 'i', 'p', 't', 'L', 'o', 'a', 'd', 0,
    'n', 'e', 'w', 'Q', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'n', 'e', 'w', 'V', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'p', 'o', 'p', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'Q', 't', 'F', 'u', 'n', 'c', 't', 'i', 'o', 'n', 0,
    't', 'h', 'r', 'o', 'w', 'E', 'r', 'r', 'o', 'r', 0,
    't', 'h', 'r', 'o', 'w', 'V', 'a', 'l', 'u', 'e', 0,
    't', 'h', 'i', 's', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'R', 'a', 'n', 'g', 'e', 'E', 'r', 'r', 'o', 'r', 0,
    'l', 'i', 'n', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'f', 'i', 'e', 'l', 'd', 'W', 'i', 'd', 't', 'h', 0,
    'c', 'h', 'i', 'l', 'd', 'E', 'v', 'e', 'n', 't', 0,
    't', 'i', 'm', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    't', 'o', 'D', 'a', 't', 'e', 'T', 'i', 'm', 'e', 0,
    '_', '_', 'r', 's', 'h', 'i', 'f', 't', '_', '_', 0,
    '_', '_', 'l', 's', 'h', 'i', 'f', 't', '_', '_', 0,
    '_', '_', 'i', 'n', 'v', 'e', 'r', 't', '_', '_', 0,
    'c', 'o', 'n', 's', 't', 'r', 'u', 'c', 't', 0,
    't', 'o', 'Q', 'O', 'b', 'j', 'e', 'c', 't', 0,
    't', 'o', 'V', 'a', 'r', 'i', 'a', 'n', 't', 0,
    't', 'o', 'I', 'n', 't', 'e', 'g', 'e', 'r', 0,
    't', 'o', 'B', 'o', 'o', 'l', 'e', 'a', 'n', 0,
    'i', 's', 'Q', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'i', 's', 'V', 'a', 'r', 'i', 'a', 'n', 't', 0,
    'i', 's', 'B', 'o', 'o', 'l', 'e', 'a', 'n', 0,
    'N', 'u', 'l', 'l', 'V', 'a', 'l', 'u', 'e', 0,
    'U', 's', 'e', 'r', 'R', 'a', 'n', 'g', 'e', 0,
    'o', 'w', 'n', 'e', 'r', 's', 'h', 'i', 'p', 0,
    'n', 'e', 'w', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'n', 'e', 'w', 'R', 'e', 'g', 'E', 'x', 'p', 0,
    'n', 'u', 'l', 'l', 'V', 'a', 'l', 'u', 'e', 0,
    'b', 'a', 'c', 'k', 't', 'r', 'a', 'c', 'e', 0,
    'T', 'y', 'p', 'e', 'E', 'r', 'r', 'o', 'r', 0,
    'e', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 0,
    'p', 'r', 'o', 't', 'o', 't', 'y', 'p', 'e', 0,
    'd', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'p', 'r', 'e', 'c', 'i', 's', 'i', 'o', 'n', 0,
    'l', 'e', 's', 's', 'T', 'h', 'a', 'n', 0,
    't', 'o', 'U', 'I', 'n', 't', '1', '6', 0,
    't', 'o', 'U', 'I', 'n', 't', '3', '2', 0,
    't', 'o', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'i', 's', 'R', 'e', 'g', 'E', 'x', 'p', 0,
    'i', 's', 'S', 't', 'r', 'i', 'n', 'g', 0,
    't', 'o', 'O', 'b', 'j', 'e', 'c', 't', 0,
    's', 'e', 't', 'A', 'g', 'e', 'n', 't', 0,
    'n', 'e', 'w', 'A', 'r', 'r', 'a', 'y', 0,
    'e', 'v', 'a', 'l', 'u', 'a', 't', 'e', 0,
    's', 'c', 'r', 'i', 'p', 't', 'I', 'd', 0,
    'U', 'R', 'I', 'E', 'r', 'r', 'o', 'r', 0,
    'p', 'r', 'e', 'v', 'i', 'o', 'u', 's', 0,
    'a', 'r', 'g', 'u', 'm', 'e', 'n', 't', 0,
    'C', 'a', 'l', 'l', 'a', 'b', 'l', 'e', 0,
    't', 'o', 'R', 'e', 'g', 'E', 'x', 'p', 0,
    'b', 'e', 'h', 'a', 'v', 'i', 'o', 'r', 0,
    'f', 'i', 'l', 'l', 'C', 'h', 'a', 'r', 0,
    's', 'e', 't', 'V', 'a', 'l', 'u', 'e', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'R', 'e', 'a', 'd', 'O', 'n', 'l', 'y', 0,
    't', 'o', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'i', 's', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    '_', '_', 'h', 'a', 's', 'h', '_', '_', 0,
    'f', 'i', 'l', 'e', 'N', 'a', 'm', 'e', 0,
    '_', '_', 'b', 'o', 'o', 'l', '_', '_', 0,
    '_', '_', 'i', 'x', 'o', 'r', '_', '_', 0,
    '_', '_', 'i', 'a', 'n', 'd', '_', '_', 0,
    't', 'o', 'I', 'n', 't', '3', '2', 0,
    'i', 's', 'E', 'r', 'r', 'o', 'r', 0,
    'i', 's', 'A', 'r', 'r', 'a', 'y', 0,
    'n', 'e', 'w', 'D', 'a', 't', 'e', 0,
    't', 'o', 'F', 'r', 'o', 'n', 't', 0,
    'o', 'p', 't', 'i', 'o', 'n', 's', 0,
    's', 'e', 't', 'D', 'a', 't', 'a', 0,
    'i', 's', 'V', 'a', 'l', 'i', 'd', 0,
    'h', 'a', 's', 'N', 'e', 'x', 't', 0,
    'f', 'i', 'l', 't', 'e', 'r', 's', 0,
    '_', '_', 'a', 'n', 'd', '_', '_', 0,
    '_', '_', 'x', 'o', 'r', '_', '_', 0,
    '_', '_', 'i', 'n', 't', '_', '_', 0,
    '_', '_', 'i', 'o', 'r', '_', '_', 0,
    'e', 'q', 'u', 'a', 'l', 's', 0,
    'i', 's', 'D', 'a', 't', 'e', 0,
    'i', 's', 'B', 'o', 'o', 'l', 0,
    'c', 'a', 'l', 'l', 'e', 'e', 0,
    't', 'o', 'B', 'a', 'c', 'k', 0,
    'e', 'n', 'g', 'i', 'n', 'e', 0,
    't', 'o', 'B', 'o', 'o', 'l', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 0,
    'v', 'a', 'l', 'u', 'e', '9', 0,
    'v', 'a', 'l', 'u', 'e', '8', 0,
    'v', 'a', 'l', 'u', 'e', '7', 0,
    'v', 'a', 'l', 'u', 'e', '6', 0,
    'v', 'a', 'l', 'u', 'e', '5', 0,
    'v', 'a', 'l', 'u', 'e', '4', 0,
    'v', 'a', 'l', 'u', 'e', '3', 0,
    'v', 'a', 'l', 'u', 'e', '0', 0,
    's', 'y', 'm', 'b', 'o', 'l', 0,
    's', 'u', 'f', 'f', 'i', 'x', 0,
    'p', 'r', 'e', 'f', 'i', 'x', 0,
    'f', 'o', 'r', 'm', 'a', 't', 0,
    'l', 'e', 'n', 'g', 't', 'h', 0,
    'v', 'a', 'l', 'u', 'e', '2', 0,
    'v', 'a', 'l', 'u', 'e', '1', 0,
    'i', 's', 'N', 'u', 'l', 'l', 0,
    'r', 'e', 's', 'u', 'l', 't', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 0,
    'o', 'b', 'j', 'e', 'c', 't', 0,
    '_', '_', 'n', 'e', '_', '_', 0,
    '_', '_', 'e', 'q', '_', '_', 0,
    '_', '_', 'o', 'r', '_', '_', 0,
    'a', 'g', 'e', 'n', 't', 0,
    'v', 'a', 'l', 'u', 'e', 0,
    'f', 'l', 'a', 'g', 's', 0,
    'e', 'v', 'e', 'n', 't', 0,
    'm', 's', 'e', 'c', 's', 0,
    's', 't', 'a', 't', 'e', 0,
    'c', 'a', 'l', 'l', 0,
    'a', 'r', 'g', 's', 0,
    'm', 'o', 'd', 'e', 0,
    'n', 'a', 'm', 'e', 0,
    'b', 'a', 's', 'e', 0,
    'f', 'r', 'o', 'm', 0,
    's', 'o', 'r', 't', 0,
    'n', 'e', 'x', 't', 0,
    'd', 'a', 't', 'a', 0,
    'e', 'n', 'd', 0,
    'o', 'k', 0,
};
#line 30 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptclass.sip"
#include <qscriptclass.h>
#line 30 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptcontextinfo.sip"
#include <qscriptcontextinfo.h>
#line 30 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptengine.sip"
#include <qscriptengine.h>
#line 30 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptvalue.sip"
#include <qscriptvalue.h>
#line 354 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"

QVariant sipVH_QtScript_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QScriptEngineAgent::Extension a0,const QVariant& a1)
{
    QVariant sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "FN",a0,sipType_QScriptEngineAgent_Extension,new QVariant(a1),sipType_QVariant,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QVariant, &sipRes);

    return sipRes;
}

bool sipVH_QtScript_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QScriptEngineAgent::Extension a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "F",a0,sipType_QScriptEngineAgent_Extension);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

void sipVH_QtScript_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, PY_LONG_LONG a0,const QScriptValue& a1)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "nN",a0,new QScriptValue(a1),sipType_QScriptValue,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtScript_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, PY_LONG_LONG a0,const QScriptValue& a1,bool a2)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "nNb",a0,new QScriptValue(a1),sipType_QScriptValue,NULL,a2);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtScript_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, PY_LONG_LONG a0,int a1,int a2)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "nii",a0,a1,a2);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtScript_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, PY_LONG_LONG a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "n",a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtScript_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, PY_LONG_LONG a0,const QString& a1,const QString& a2,int a3)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "nNNi",a0,new QString(a1),sipType_QString,NULL,new QString(a2),sipType_QString,NULL,a3);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

QScriptValue::PropertyFlags sipVH_QtScript_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    QScriptValue::PropertyFlags sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QScriptValue_PropertyFlags, &sipRes);

    return sipRes;
}

uint sipVH_QtScript_8(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    uint sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "u", &sipRes);

    return sipRes;
}

QScriptString sipVH_QtScript_9(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    QScriptString sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QScriptString, &sipRes);

    return sipRes;
}

QVariant sipVH_QtScript_10(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QScriptClass::Extension a0,const QVariant& a1)
{
    QVariant sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "FN",a0,sipType_QScriptClass_Extension,new QVariant(a1),sipType_QVariant,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QVariant, &sipRes);

    return sipRes;
}

bool sipVH_QtScript_11(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QScriptClass::Extension a0)
{
    bool sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "F",a0,sipType_QScriptClass_Extension);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "b", &sipRes);

    return sipRes;
}

QScriptValue sipVH_QtScript_12(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod)
{
    QScriptValue sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "");

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QScriptValue, &sipRes);

    return sipRes;
}

QScriptClassPropertyIterator* sipVH_QtScript_13(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QScriptValue& a0)
{
    QScriptClassPropertyIterator* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "N",new QScriptValue(a0),sipType_QScriptValue,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H0", sipType_QScriptClassPropertyIterator, &sipRes);

    return sipRes;
}

QScriptValue::PropertyFlags sipVH_QtScript_14(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QScriptValue& a0,const QScriptString& a1,uint a2)
{
    QScriptValue::PropertyFlags sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NNu",new QScriptValue(a0),sipType_QScriptValue,NULL,new QScriptString(a1),sipType_QScriptString,NULL,a2);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QScriptValue_PropertyFlags, &sipRes);

    return sipRes;
}

void sipVH_QtScript_15(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QScriptValue& a0,const QScriptString& a1,uint a2,const QScriptValue& a3)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "DNuN",&a0,sipType_QScriptValue,NULL,new QScriptString(a1),sipType_QScriptString,NULL,a2,new QScriptValue(a3),sipType_QScriptValue,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

QScriptValue sipVH_QtScript_16(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QScriptValue& a0,const QScriptString& a1,uint a2)
{
    QScriptValue sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NNu",new QScriptValue(a0),sipType_QScriptValue,NULL,new QScriptString(a1),sipType_QScriptString,NULL,a2);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QScriptValue, &sipRes);

    return sipRes;
}

QScriptClass::QueryFlags sipVH_QtScript_17(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QScriptValue& a0,const QScriptString& a1,QScriptClass::QueryFlags a2,uint*a3)
{
    QScriptClass::QueryFlags sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NNN",new QScriptValue(a0),sipType_QScriptValue,NULL,new QScriptString(a1),sipType_QScriptString,NULL,new QScriptClass::QueryFlags(a2),sipType_QScriptClass_QueryFlags,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "(H5u)", sipType_QScriptClass_QueryFlags, &sipRes, a3);

    return sipRes;
}


PyDoc_STRVAR(doc_qScriptDisconnect, "qScriptDisconnect(QObject, SIGNAL(), QScriptValue, QScriptValue) -> bool");

extern "C" {static PyObject *func_qScriptDisconnect(PyObject *,PyObject *);}
static PyObject *func_qScriptDisconnect(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QObject* a0;
        char* a1;
        const QScriptValue* a2;
        const QScriptValue* a3;

        if (sipParseArgs(&sipParseErr, sipArgs, "J8GJ9J9", sipType_QObject, &a0, &a1, sipType_QScriptValue, &a2, sipType_QScriptValue, &a3))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = qScriptDisconnect(a0,a1,*a2,*a3);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_qScriptDisconnect, doc_qScriptDisconnect);

    return NULL;
}


PyDoc_STRVAR(doc_qScriptConnect, "qScriptConnect(QObject, SIGNAL(), QScriptValue, QScriptValue) -> bool");

extern "C" {static PyObject *func_qScriptConnect(PyObject *,PyObject *);}
static PyObject *func_qScriptConnect(PyObject *,PyObject *sipArgs)
{
    PyObject *sipParseErr = NULL;

    {
        QObject* a0;
        char* a1;
        const QScriptValue* a2;
        const QScriptValue* a3;

        if (sipParseArgs(&sipParseErr, sipArgs, "J8GJ9J9", sipType_QObject, &a0, &a1, sipType_QScriptValue, &a2, sipType_QScriptValue, &a3))
        {
            bool sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = qScriptConnect(a0,a1,*a2,*a3);
            Py_END_ALLOW_THREADS

            return PyBool_FromLong(sipRes);
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoFunction(sipParseErr, sipName_qScriptConnect, doc_qScriptConnect);

    return NULL;
}


extern "C" {static PyObject *slot___rshift__(PyObject *,PyObject *);}
static PyObject *slot___rshift__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QDataStream* a0;
        QScriptContextInfo* a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J9J9", sipType_QDataStream, &a0, sipType_QScriptContextInfo, &a1))
        {
            QDataStream*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = &(*a0 >> *a1);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QDataStream,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static PyObject *slot___lshift__(PyObject *,PyObject *);}
static PyObject *slot___lshift__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QDataStream* a0;
        const QScriptContextInfo* a1;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "J9J9", sipType_QDataStream, &a0, sipType_QScriptContextInfo, &a1))
        {
            QDataStream*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = &(*a0 << *a1);
            Py_END_ALLOW_THREADS

            return sipConvertFromType(sipRes,sipType_QDataStream,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}


extern "C" {static void *init_type_QString_0(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_QString_0(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
    QString *sipCpp = 0;

    {
        QScriptString* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, NULL, sipUnused, "J9", sipType_QScriptString, &a0))
        {
            Py_BEGIN_ALLOW_THREADS
            sipCpp = new QString(a0->operator QString());
            Py_END_ALLOW_THREADS

            return sipCpp;
        }
    }

    return NULL;
}

static sipInitExtenderDef initExtenders[] = {
    {0, init_type_QString_0, {197, 0, 0}, NULL},
    {-1, NULL, {0, 0, 0}, NULL}
};

static sipPySlotExtenderDef slotExtenders[] = {
    {(void *)slot___rshift__, rshift_slot, {0, 0, 0}},
    {(void *)slot___lshift__, lshift_slot, {0, 0, 0}},
    {NULL, (sipPySlotType)0, {0, 0, 0}}
};


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_QScriptEngine(void **);}
static const sipTypeDef *sipSubClass_QScriptEngine(void **sipCppRet)
{
    QObject *sipCpp = reinterpret_cast<QObject *>(*sipCppRet);
    const sipTypeDef *sipType;

#line 93 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtScript/qscriptengine.sip"
    sipType = (sipCpp->inherits(sipName_QScriptEngine) ? sipType_QScriptEngine : 0);
#line 687 "/home/desa2/PyQt-x11-gpl-4.10.4/QtScript/sipQtScriptcmodule.cpp"

    return sipType;
}


extern "C" {static PyObject *slot_QScriptValue_PropertyFlag___or__(PyObject *,PyObject *);}
static PyObject *slot_QScriptValue_PropertyFlag___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QScriptValue::PropertyFlag a0;
        QScriptValue::PropertyFlags* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QScriptValue_PropertyFlag, &a0, sipType_QScriptValue_PropertyFlags, &a1, &a1State))
        {
            QScriptValue::PropertyFlags*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QScriptValue::PropertyFlags((a0 | *a1));
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_QScriptValue_PropertyFlags,a1State);

            return sipConvertFromNewType(sipRes,sipType_QScriptValue_PropertyFlags,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QScriptValue_PropertyFlag[] = {
    {(void *)slot_QScriptValue_PropertyFlag___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QScriptValue_ResolveFlag___or__(PyObject *,PyObject *);}
static PyObject *slot_QScriptValue_ResolveFlag___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QScriptValue::ResolveFlag a0;
        QScriptValue::ResolveFlags* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QScriptValue_ResolveFlag, &a0, sipType_QScriptValue_ResolveFlags, &a1, &a1State))
        {
            QScriptValue::ResolveFlags*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QScriptValue::ResolveFlags((a0 | *a1));
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_QScriptValue_ResolveFlags,a1State);

            return sipConvertFromNewType(sipRes,sipType_QScriptValue_ResolveFlags,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QScriptValue_ResolveFlag[] = {
    {(void *)slot_QScriptValue_ResolveFlag___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QScriptEngine_QObjectWrapOption___or__(PyObject *,PyObject *);}
static PyObject *slot_QScriptEngine_QObjectWrapOption___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QScriptEngine::QObjectWrapOption a0;
        QScriptEngine::QObjectWrapOptions* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QScriptEngine_QObjectWrapOption, &a0, sipType_QScriptEngine_QObjectWrapOptions, &a1, &a1State))
        {
            QScriptEngine::QObjectWrapOptions*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QScriptEngine::QObjectWrapOptions((a0 | *a1));
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_QScriptEngine_QObjectWrapOptions,a1State);

            return sipConvertFromNewType(sipRes,sipType_QScriptEngine_QObjectWrapOptions,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QScriptEngine_QObjectWrapOption[] = {
    {(void *)slot_QScriptEngine_QObjectWrapOption___or__, or_slot},
    {0, (sipPySlotType)0}
};



extern "C" {static PyObject *slot_QScriptClass_QueryFlag___or__(PyObject *,PyObject *);}
static PyObject *slot_QScriptClass_QueryFlag___or__(PyObject *sipArg0,PyObject *sipArg1)
{
    PyObject *sipParseErr = NULL;

    {
        QScriptClass::QueryFlag a0;
        QScriptClass::QueryFlags* a1;
        int a1State = 0;

        if (sipParsePair(&sipParseErr, sipArg0, sipArg1, "EJ1", sipType_QScriptClass_QueryFlag, &a0, sipType_QScriptClass_QueryFlags, &a1, &a1State))
        {
            QScriptClass::QueryFlags*sipRes;

            Py_BEGIN_ALLOW_THREADS
            sipRes = new QScriptClass::QueryFlags((a0 | *a1));
            Py_END_ALLOW_THREADS
            sipReleaseType(a1,sipType_QScriptClass_QueryFlags,a1State);

            return sipConvertFromNewType(sipRes,sipType_QScriptClass_QueryFlags,NULL);
        }
    }

    Py_XDECREF(sipParseErr);

    if (sipParseErr == Py_None)
        return NULL;

    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
}

static sipPySlotDef slots_QScriptClass_QueryFlag[] = {
    {(void *)slot_QScriptClass_QueryFlag___or__, or_slot},
    {0, (sipPySlotType)0}
};

static sipEnumTypeDef enumTypes[] = {
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptValue__SpecialValue, {0}}, sipNameNr_SpecialValue, 21, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptValue__PropertyFlag, {0}}, sipNameNr_PropertyFlag, 21, slots_QScriptValue_PropertyFlag},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptValue__ResolveFlag, {0}}, sipNameNr_ResolveFlag, 21, slots_QScriptValue_ResolveFlag},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptEngineAgent__Extension, {0}}, sipNameNr_Extension, 16, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptSyntaxCheckResult__State, {0}}, sipNameNr_State, 19, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptEngine__QObjectWrapOption, {0}}, sipNameNr_QObjectWrapOption, 12, slots_QScriptEngine_QObjectWrapOption},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptEngine__ValueOwnership, {0}}, sipNameNr_ValueOwnership, 12, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptContextInfo__FunctionType, {0}}, sipNameNr_FunctionType, 10, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptContext__Error, {0}}, sipNameNr_Error, 7, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptContext__ExecutionState, {0}}, sipNameNr_ExecutionState, 7, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptClass__Extension, {0}}, sipNameNr_Extension, 2, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QScriptClass__QueryFlag, {0}}, sipNameNr_QueryFlag, 2, slots_QScriptClass_QueryFlag},
};


/*
 * This defines each type in this module.
 */
static sipTypeDef *typesTable[] = {
    &sipTypeDef_QtScript_QList_0100QScriptContextInfo.mtd_base,
    &sipTypeDef_QtScript_QList_0100QScriptValue.mtd_base,
    &sipTypeDef_QtScript_QScriptClass.super.ctd_base,
    &enumTypes[10].etd_base,
    &enumTypes[11].etd_base,
    &sipTypeDef_QtScript_QScriptClass_QueryFlags.super.ctd_base,
    &sipTypeDef_QtScript_QScriptClassPropertyIterator.super.ctd_base,
    &sipTypeDef_QtScript_QScriptContext.super.ctd_base,
    &enumTypes[8].etd_base,
    &enumTypes[9].etd_base,
    &sipTypeDef_QtScript_QScriptContextInfo.super.ctd_base,
    &enumTypes[7].etd_base,
    &sipTypeDef_QtScript_QScriptEngine.super.ctd_base,
    &enumTypes[5].etd_base,
    &sipTypeDef_QtScript_QScriptEngine_QObjectWrapOptions.super.ctd_base,
    &enumTypes[6].etd_base,
    &sipTypeDef_QtScript_QScriptEngineAgent.super.ctd_base,
    &enumTypes[3].etd_base,
    &sipTypeDef_QtScript_QScriptString.super.ctd_base,
    &sipTypeDef_QtScript_QScriptSyntaxCheckResult.super.ctd_base,
    &enumTypes[4].etd_base,
    &sipTypeDef_QtScript_QScriptValue.super.ctd_base,
    &enumTypes[1].etd_base,
    &sipTypeDef_QtScript_QScriptValue_PropertyFlags.super.ctd_base,
    &enumTypes[2].etd_base,
    &sipTypeDef_QtScript_QScriptValue_ResolveFlags.super.ctd_base,
    &enumTypes[0].etd_base,
    &sipTypeDef_QtScript_QScriptValueIterator.super.ctd_base,
};


/*
 * These define each typedef in this module.
 */
static sipTypedefDef typedefsTable[] = {
    {"QScriptContextInfoList", "QList<QScriptContextInfo>"},
    {"QScriptValueList", "QList<QScriptValue>"},
    {"qsreal", "double"},
};


/*
 * This defines the virtual handlers that this module implements and can be
 * used by other modules.
 */
static sipVirtHandlerFunc virtHandlersTable[] = {
    (sipVirtHandlerFunc)sipVH_QtScript_0,
    (sipVirtHandlerFunc)sipVH_QtScript_1,
    (sipVirtHandlerFunc)sipVH_QtScript_2,
    (sipVirtHandlerFunc)sipVH_QtScript_3,
    (sipVirtHandlerFunc)sipVH_QtScript_4,
    (sipVirtHandlerFunc)sipVH_QtScript_5,
    (sipVirtHandlerFunc)sipVH_QtScript_6,
    (sipVirtHandlerFunc)sipVH_QtScript_7,
    (sipVirtHandlerFunc)sipVH_QtScript_8,
    (sipVirtHandlerFunc)sipVH_QtScript_9,
    (sipVirtHandlerFunc)sipVH_QtScript_10,
    (sipVirtHandlerFunc)sipVH_QtScript_11,
    (sipVirtHandlerFunc)sipVH_QtScript_12,
    (sipVirtHandlerFunc)sipVH_QtScript_13,
    (sipVirtHandlerFunc)sipVH_QtScript_14,
    (sipVirtHandlerFunc)sipVH_QtScript_15,
    (sipVirtHandlerFunc)sipVH_QtScript_16,
    (sipVirtHandlerFunc)sipVH_QtScript_17,
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"PyQt4.QtCore", 1, NULL},
    {NULL, -1, NULL}
};


/* This defines the class sub-convertors that this module defines. */
static sipSubClassConvertorDef convertorsTable[] = {
    {sipSubClass_QScriptEngine, {141, 0, 0}, NULL},
    {NULL, {0, 0, 0}, NULL}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_QtScript = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr_PyQt4_QtScript,
    0,
    -1,
    sipStrings_QtScript,
    importsTable,
    NULL,
    28,
    typesTable,
    NULL,
    0,
    NULL,
    3,
    typedefsTable,
    virtHandlersTable,
    NULL,
    convertorsTable,
    {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
    NULL,
    NULL,
    slotExtenders,
    initExtenders,
    NULL,
    NULL,
    NULL,
    NULL
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_QtScript;
const sipExportedModuleDef *sipModuleAPI_QtScript_QtCore;

sip_qt_metaobject_func sip_QtScript_qt_metaobject;
sip_qt_metacall_func sip_QtScript_qt_metacall;
sip_qt_metacast_func sip_QtScript_qt_metacast;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit_QtScript
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        initQtScript
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {SIP_MLNAME_CAST(sipName_qScriptDisconnect), func_qScriptDisconnect, METH_VARARGS, SIP_MLDOC_CAST(doc_qScriptDisconnect)},
        {SIP_MLNAME_CAST(sipName_qScriptConnect), func_qScriptConnect, METH_VARARGS, SIP_MLDOC_CAST(doc_qScriptConnect)},
        {0, 0, 0, 0}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "PyQt4.QtScript",
        NULL,
        -1,
        sip_methods,
        NULL,
        NULL,
        NULL,
        NULL
    };
#endif

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName_PyQt4_QtScript, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName_PyQt4_QtScript), sip_methods);
#endif

    if (sipModule == NULL)
        SIP_MODULE_RETURN(NULL);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule(SIP_MODULE_NAME);
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>(SIP_MODULE_NAME));
#endif

    if (sip_sipmod == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

#if defined(SIP_USE_PYCAPSULE)
    if (sip_capiobj == NULL || !PyCapsule_CheckExact(sip_capiobj))
#else
    if (sip_capiobj == NULL || !PyCObject_Check(sip_capiobj))
#endif
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

#if defined(SIP_USE_PYCAPSULE)
    sipAPI_QtScript = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, SIP_MODULE_NAME "._C_API"));
#else
    sipAPI_QtScript = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));
#endif

#if defined(SIP_USE_PYCAPSULE)
    if (sipAPI_QtScript == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }
#endif

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI_QtScript,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    sip_QtScript_qt_metaobject = (sip_qt_metaobject_func)sipImportSymbol("qtcore_qt_metaobject");
    sip_QtScript_qt_metacall = (sip_qt_metacall_func)sipImportSymbol("qtcore_qt_metacall");
    sip_QtScript_qt_metacast = (sip_qt_metacast_func)sipImportSymbol("qtcore_qt_metacast");

    if (!sip_QtScript_qt_metacast)
        Py_FatalError("Unable to import qtcore_qt_metacast");

    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI_QtScript,sipModuleDict) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    /* Get the APIs of the modules that this one is dependent on. */
    sipModuleAPI_QtScript_QtCore = sipModuleAPI_QtScript.em_imports[0].im_module;

    SIP_MODULE_RETURN(sipModule);
}
