/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.16.2 on Wed Sep  3 09:36:12 2014
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * If you are unsure which license is appropriate for your use, please
 * contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtCore.h"

#line 628 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
#include <qlist.h>
#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/QtCore/sipQtCoreQList1800.cpp"



extern "C" {static void assign_QList_1800(void *, SIP_SSIZE_T, const void *);}
static void assign_QList_1800(void *sipDst, SIP_SSIZE_T sipDstIdx, const void *sipSrc)
{
    reinterpret_cast<QList<int> *>(sipDst)[sipDstIdx] = *reinterpret_cast<const QList<int> *>(sipSrc);
}


extern "C" {static void *array_QList_1800(SIP_SSIZE_T);}
static void *array_QList_1800(SIP_SSIZE_T sipNrElem)
{
    return new QList<int>[sipNrElem];
}


extern "C" {static void *copy_QList_1800(const void *, SIP_SSIZE_T);}
static void *copy_QList_1800(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new QList<int>(reinterpret_cast<const QList<int> *>(sipSrc)[sipSrcIdx]);
}


/* Call the mapped type's destructor. */
extern "C" {static void release_QList_1800(void *, int);}
static void release_QList_1800(void *ptr, int)
{
    Py_BEGIN_ALLOW_THREADS
    delete reinterpret_cast<QList<int> *>(ptr);
    Py_END_ALLOW_THREADS
}



extern "C" {static int convertTo_QList_1800(PyObject *, void **, int *, PyObject *);}
static int convertTo_QList_1800(PyObject *sipPy,void **sipCppPtrV,int *sipIsErr,PyObject *sipTransferObj)
{
    QList<int> **sipCppPtr = reinterpret_cast<QList<int> **>(sipCppPtrV);

#line 657 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
    // Check the type if that is all that is required.
    if (sipIsErr == NULL)
        return (PySequence_Check(sipPy) && PySequence_Size(sipPy) >= 0);

    QList<int> *ql = new QList<int>;
    SIP_SSIZE_T len = PySequence_Size(sipPy);
 
    for (SIP_SSIZE_T i = 0; i < len; ++i)
    {
        PyObject *itm = PySequence_ITEM(sipPy, i);

        PyErr_Clear();
        long val = itm ? SIPLong_AsLong(itm) : -1;
        
        if (!itm || (val == -1 && PyErr_Occurred()))
        {
            Py_XDECREF(itm);
            delete ql;
            *sipIsErr = 1;

            return 0;
        }

        ql->append(val);

        Py_DECREF(itm);
    }
 
    *sipCppPtr = ql;
 
    return sipGetState(sipTransferObj);
#line 107 "/home/desa2/PyQt-x11-gpl-4.10.4/QtCore/sipQtCoreQList1800.cpp"
}


extern "C" {static PyObject *convertFrom_QList_1800(void *, PyObject *);}
static PyObject *convertFrom_QList_1800(void *sipCppV, PyObject *)
{
   QList<int> *sipCpp = reinterpret_cast<QList<int> *>(sipCppV);

#line 632 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qlist.sip"
    // Create the list.
    PyObject *l;

    if ((l = PyList_New(sipCpp->size())) == NULL)
        return NULL;

    // Set the list elements.
    for (int i = 0; i < sipCpp->size(); ++i)
    {
        PyObject *pobj;

        if ((pobj = SIPLong_FromLong(sipCpp->value(i))) == NULL)
        {
            Py_DECREF(l);

            return NULL;
        }

        PyList_SET_ITEM(l, i, pobj);
    }

    return l;
#line 139 "/home/desa2/PyQt-x11-gpl-4.10.4/QtCore/sipQtCoreQList1800.cpp"
}


sipMappedTypeDef sipTypeDef_QtCore_QList_1800 = {
    {
        -1,
        0,
        0,
        SIP_TYPE_MAPPED,
        sipNameNr_36657,
        {0}
    },
    {
        -1,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
    },
    assign_QList_1800,
    array_QList_1800,
    copy_QList_1800,
    release_QList_1800,
    convertTo_QList_1800,
    convertFrom_QList_1800
};
