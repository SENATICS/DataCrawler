/*
 * Module code.
 *
 * Generated by SIP 4.16.2 on Wed Sep  3 09:36:15 2014
 *
 * Copyright (c) 2014 Riverbank Computing Limited <info@riverbankcomputing.com>
 * 
 * This file is part of PyQt.
 * 
 * This file may be used under the terms of the GNU General Public
 * License versions 2.0 or 3.0 as published by the Free Software
 * Foundation and appearing in the files LICENSE.GPL2 and LICENSE.GPL3
 * included in the packaging of this file.  Alternatively you may (at
 * your option) use any later version of the GNU General Public
 * License if such license has been publicly approved by Riverbank
 * Computing Limited (or its successors, if any) and the KDE Free Qt
 * Foundation. In addition, as a special exception, Riverbank gives you
 * certain additional rights. These rights are described in the Riverbank
 * GPL Exception version 1.1, which can be found in the file
 * GPL_EXCEPTION.txt in this package.
 * 
 * If you are unsure which license is appropriate for your use, please
 * contact the sales department at sales@riverbankcomputing.com.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include "sipAPIQtDeclarative.h"

#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qobject.sip"
#include <qobject.h>
#line 34 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 39 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qgraphicsitem.sip"
#include <qgraphicsitem.h>
#line 37 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtDeclarative/qdeclarativeproperty.sip"
#include <qdeclarativeproperty.h>
#line 40 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtNetwork/qnetworkaccessmanager.sip"
#include <qnetworkaccessmanager.h>
#line 43 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 168 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qrect.sip"
#include <qrect.h>
#line 46 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qpixmap.sip"
#include <qpixmap.h>
#line 49 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 36 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qstring.sip"
#include <qstring.h>
#line 52 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtCore/qsize.sip"
#include <qsize.h>
#line 55 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 35 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtGui/qimage.sip"
#include <qimage.h>
#line 58 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtDeclarative/qdeclarativeengine.sip"
#include <qdeclarativeengine.h>
#line 61 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtDeclarative/qdeclarativecontext.sip"
#include <qdeclarativecontext.h>
#line 64 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtDeclarative/qdeclarativeerror.sip"
#include <qdeclarativeerror.h>
#line 67 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtDeclarative/qdeclarativelist.sip"
#include <qdeclarativelist.h>
#line 70 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"
#line 33 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtDeclarative/qdeclarativescriptstring.sip"
#include <qdeclarativescriptstring.h>
#line 73 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"

/* Define the strings used by this module. */
const char sipStrings_QtDeclarative[] = {
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', ':', ':', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'T', 'y', 'p', 'e', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'N', 'e', 't', 'w', 'o', 'r', 'k', 'A', 'c', 'c', 'e', 's', 's', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 'F', 'a', 'c', 't', 'o', 'r', 'y', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'I', 'm', 'a', 'g', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', ':', ':', 'I', 'm', 'a', 'g', 'e', 'T', 'y', 'p', 'e', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'E', 'n', 'g', 'i', 'n', 'e', ':', ':', 'O', 'b', 'j', 'e', 'c', 't', 'O', 'w', 'n', 'e', 'r', 's', 'h', 'i', 'p', 0,
    'Q', 'P', 'y', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'V', 'a', 'l', 'u', 'e', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'L', 'i', 's', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', '<', 'Q', 'O', 'b', 'j', 'e', 'c', 't', '>', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'I', 't', 'e', 'm', ':', ':', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    's', 'e', 't', 'O', 'u', 't', 'p', 'u', 't', 'W', 'a', 'r', 'n', 'i', 'n', 'g', 's', 'T', 'o', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'V', 'a', 'l', 'u', 'e', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    's', 'e', 't', 'N', 'e', 't', 'w', 'o', 'r', 'k', 'A', 'c', 'c', 'e', 's', 's', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 'F', 'a', 'c', 't', 'o', 'r', 'y', 0,
    'o', 'u', 't', 'p', 'u', 't', 'W', 'a', 'r', 'n', 'i', 'n', 'g', 's', 'T', 'o', 'S', 't', 'a', 'n', 'd', 'a', 'r', 'd', 'E', 'r', 'r', 'o', 'r', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'C', 'o', 'm', 'p', 'o', 'n', 'e', 'n', 't', ':', ':', 'S', 't', 'a', 't', 'u', 's', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'V', 'i', 'e', 'w', ':', ':', 'R', 'e', 's', 'i', 'z', 'e', 'M', 'o', 'd', 'e', 0,
    'P', 'y', 'Q', 't', '4', '.', 'Q', 't', 'C', 'o', 'r', 'e', '.', 'p', 'y', 'q', 't', 'W', 'r', 'a', 'p', 'p', 'e', 'r', 'T', 'y', 'p', 'e', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'E', 'x', 't', 'e', 'n', 's', 'i', 'o', 'n', 'P', 'l', 'u', 'g', 'i', 'n', 0,
    'n', 'e', 't', 'w', 'o', 'r', 'k', 'A', 'c', 'c', 'e', 's', 's', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 'F', 'a', 'c', 't', 'o', 'r', 'y', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', ':', ':', 'T', 'y', 'p', 'e', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'L', 'i', 's', 't', 'R', 'e', 'f', 'e', 'r', 'e', 'n', 'c', 'e', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'I', 'm', 'a', 'g', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'Q', 'L', 'i', 's', 't', '<', 'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'E', 'r', 'r', 'o', 'r', '>', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'V', 'i', 'e', 'w', ':', ':', 'S', 't', 'a', 't', 'u', 's', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'S', 'c', 'r', 'i', 'p', 't', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'P', 'a', 'r', 's', 'e', 'r', 'S', 't', 'a', 't', 'u', 's', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'M', 'a', 'p', 0,
    's', 'e', 't', 'N', 'o', 't', 'i', 'f', 'y', 'O', 'n', 'V', 'a', 'l', 'u', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'E', 'x', 'p', 'r', 'e', 's', 's', 'i', 'o', 'n', 0,
    'w', 'i', 'n', 'd', 'o', 'w', 'A', 'c', 't', 'i', 'v', 'a', 't', 'i', 'o', 'n', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    's', 'e', 't', 'O', 'f', 'f', 'l', 'i', 'n', 'e', 'S', 't', 'o', 'r', 'a', 'g', 'e', 'P', 'a', 't', 'h', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'C', 'o', 'm', 'p', 'o', 'n', 'e', 'n', 't', 0,
    'm', 'o', 'u', 's', 'e', 'D', 'o', 'u', 'b', 'l', 'e', 'C', 'l', 'i', 'c', 'k', 'E', 'v', 'e', 'n', 't', 0,
    'S', 'i', 'z', 'e', 'R', 'o', 'o', 't', 'O', 'b', 'j', 'e', 'c', 't', 'T', 'o', 'V', 'i', 'e', 'w', 0,
    'S', 'i', 'z', 'e', 'V', 'i', 'e', 'w', 'T', 'o', 'R', 'o', 'o', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'T', 'y', 'p', 'e', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'n', 'o', 't', 'i', 'f', 'y', 'O', 'n', 'V', 'a', 'l', 'u', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'n', 'e', 't', 'w', 'o', 'r', 'k', 'A', 'c', 'c', 'e', 's', 's', 'M', 'a', 'n', 'a', 'g', 'e', 'r', 0,
    'c', 'o', 'n', 'n', 'e', 'c', 't', 'N', 'o', 't', 'i', 'f', 'y', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    'i', 's', 'C', 'o', 'm', 'p', 'o', 'n', 'e', 'n', 't', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 0,
    'J', 'a', 'v', 'a', 'S', 'c', 'r', 'i', 'p', 't', 'O', 'w', 'n', 'e', 'r', 's', 'h', 'i', 'p', 0,
    's', 'e', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 'F', 'o', 'r', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'r', 'e', 'm', 'o', 'v', 'e', 'I', 'm', 'a', 'g', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'c', 'l', 'e', 'a', 'r', 'C', 'o', 'm', 'p', 'o', 'n', 'e', 'n', 't', 'C', 'a', 'c', 'h', 'e', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'd', 'e', 'f', 'a', 'u', 'l', 't', 'B', 'u', 't', 't', 'o', 'n', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'P', 'y', 'Q', 't', '4', '.', 'Q', 't', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 0,
    's', 'e', 't', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    's', 'e', 't', 'O', 'b', 'j', 'e', 'c', 't', 'O', 'w', 'n', 'e', 'r', 's', 'h', 'i', 'p', 0,
    'o', 'f', 'f', 'l', 'i', 'n', 'e', 'S', 't', 'o', 'r', 'a', 'g', 'e', 'P', 'a', 't', 'h', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'E', 'n', 'g', 'i', 'n', 'e', 0,
    's', 'e', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'e', 's', 'c', 'a', 'p', 'e', 'B', 'u', 't', 't', 'o', 'n', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'f', 'o', 'c', 'u', 's', 'N', 'e', 'x', 't', 'P', 'r', 'e', 'v', 'C', 'h', 'i', 'l', 'd', 0,
    'n', 'e', 'e', 'd', 's', 'N', 'o', 't', 'i', 'f', 'y', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    'c', 'o', 'm', 'p', 'o', 'n', 'e', 'n', 't', 'C', 'o', 'm', 'p', 'l', 'e', 't', 'e', 0,
    's', 'e', 't', 'I', 'm', 'p', 'l', 'i', 'c', 'i', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    's', 'e', 't', 'B', 'a', 's', 'e', 'l', 'i', 'n', 'e', 'O', 'f', 'f', 's', 'e', 't', 0,
    's', 'e', 't', 'S', 'o', 'u', 'r', 'c', 'e', 'L', 'o', 'c', 'a', 't', 'i', 'o', 'n', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'E', 'r', 'r', 'o', 'r', 0,
    's', 'e', 't', 'P', 'l', 'u', 'g', 'i', 'n', 'P', 'a', 't', 'h', 'L', 'i', 's', 't', 0,
    's', 'e', 't', 'I', 'm', 'p', 'o', 'r', 't', 'P', 'a', 't', 'h', 'L', 'i', 's', 't', 0,
    'm', 'o', 'u', 's', 'e', 'R', 'e', 'l', 'e', 'a', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'i', 'p', '.', 's', 'i', 'm', 'p', 'l', 'e', 'w', 'r', 'a', 'p', 'p', 'e', 'r', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'V', 'i', 'e', 'w', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'T', 'y', 'p', 'e', 'N', 'a', 'm', 'e', 0,
    'i', 's', 'S', 'i', 'g', 'n', 'a', 'l', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    's', 'e', 't', 'I', 'm', 'p', 'l', 'i', 'c', 'i', 't', 'W', 'i', 'd', 't', 'h', 0,
    's', 'e', 't', 'K', 'e', 'e', 'p', 'M', 'o', 'u', 's', 'e', 'G', 'r', 'a', 'b', 0,
    'Q', 'D', 'e', 'c', 'l', 'a', 'r', 'a', 't', 'i', 'v', 'e', 'I', 't', 'e', 'm', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'i', 'z', 'e', 'E', 'n', 'g', 'i', 'n', 'e', 0,
    'v', 'a', 'l', 'u', 'e', 'I', 's', 'U', 'n', 'd', 'e', 'f', 'i', 'n', 'e', 'd', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'F', 'o', 'r', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'a', 'd', 'd', 'I', 'm', 'a', 'g', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    's', 'e', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    's', 'c', 'e', 'n', 'e', 'E', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    'c', 'o', 'l', 'l', 'i', 'd', 'e', 's', 'W', 'i', 't', 'h', 'P', 'a', 't', 'h', 0,
    'c', 'o', 'l', 'l', 'i', 'd', 'e', 's', 'W', 'i', 't', 'h', 'I', 't', 'e', 'm', 0,
    's', 'c', 'r', 'o', 'l', 'l', 'C', 'o', 'n', 't', 'e', 'n', 't', 's', 'B', 'y', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'M', 'e', 'n', 'u', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 'E', 'v', 'e', 'n', 't', 0,
    'i', 'n', 'p', 'u', 't', 'M', 'e', 't', 'h', 'o', 'd', 'Q', 'u', 'e', 'r', 'y', 0,
    'd', 'i', 's', 'c', 'o', 'n', 'n', 'e', 'c', 't', 'N', 'o', 't', 'i', 'f', 'y', 0,
    'I', 'n', 'v', 'a', 'l', 'i', 'd', 'C', 'a', 't', 'e', 'g', 'o', 'r', 'y', 0,
    'l', 'i', 's', 't', 'E', 'l', 'e', 'm', 'e', 'n', 't', 'T', 'y', 'p', 'e', 0,
    't', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'O', 'r', 'i', 'g', 'i', 'n', 0,
    'o', 'b', 'j', 'e', 'c', 't', 'O', 'w', 'n', 'e', 'r', 's', 'h', 'i', 'p', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'p', 'r', 'o', 'g', 'r', 'e', 's', 's', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'c', 'r', 'e', 'a', 't', 'i', 'o', 'n', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'a', 's', 'p', 'e', 'c', 't', 'R', 'a', 't', 'i', 'o', 'M', 'o', 'd', 'e', 0,
    'g', 'e', 'o', 'm', 'e', 't', 'r', 'y', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'd', 'e', 'v', 'i', 'c', 'e', 'T', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 0,
    'h', 'o', 'v', 'e', 'r', 'L', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'h', 'o', 'v', 'e', 'r', 'E', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'i', 'n', 'i', 'm', 'u', 'm', 'S', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    'm', 'o', 'u', 's', 'e', 'P', 'r', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    'k', 'e', 'y', 'R', 'e', 'l', 'e', 'a', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'h', 'a', 's', 'N', 'o', 't', 'i', 'f', 'y', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    's', 'e', 't', 'S', 'c', 'o', 'p', 'e', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'i', 'm', 'p', 'l', 'i', 'c', 'i', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'b', 'a', 's', 'e', 'l', 'i', 'n', 'e', 'O', 'f', 'f', 's', 'e', 't', 0,
    'p', 'l', 'u', 'g', 'i', 'n', 'P', 'a', 't', 'h', 'L', 'i', 's', 't', 0,
    'i', 'm', 'p', 'o', 'r', 't', 'P', 'a', 't', 'h', 'L', 'i', 's', 't', 0,
    'c', 'o', 'm', 'p', 'l', 'e', 't', 'e', 'C', 'r', 'e', 'a', 't', 'e', 0,
    'l', 'a', 'n', 'g', 'u', 'a', 'g', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'd', 'r', 'a', 'w', 'F', 'o', 'r', 'e', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'd', 'r', 'a', 'w', 'B', 'a', 'c', 'k', 'g', 'r', 'o', 'u', 'n', 'd', 0,
    'h', 'o', 'v', 'e', 'r', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    's', 'e', 'l', 'e', 'c', 't', 'e', 'd', 'F', 'i', 'l', 't', 'e', 'r', 0,
    's', 'e', 't', 'D', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'h', 'e', 'i', 'g', 'h', 't', 'F', 'o', 'r', 'W', 'i', 'd', 't', 'h', 0,
    'd', 'r', 'a', 'g', 'L', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'r', 'a', 'g', 'E', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'm', 'o', 'u', 's', 'e', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'k', 'e', 'e', 'p', 'M', 'o', 'u', 's', 'e', 'G', 'r', 'a', 'b', 0,
    'i', 'm', 'p', 'l', 'i', 'c', 'i', 't', 'W', 'i', 'd', 't', 'h', 0,
    'r', 'e', 'q', 'u', 'e', 's', 't', 'P', 'i', 'x', 'm', 'a', 'p', 0,
    'r', 'e', 'g', 'i', 's', 't', 'e', 'r', 'T', 'y', 'p', 'e', 's', 0,
    's', 'e', 't', 'E', 'x', 'p', 'r', 'e', 's', 's', 'i', 'o', 'n', 0,
    'i', 'm', 'a', 'g', 'e', 'P', 'r', 'o', 'v', 'i', 'd', 'e', 'r', 0,
    'a', 'd', 'd', 'P', 'l', 'u', 'g', 'i', 'n', 'P', 'a', 't', 'h', 0,
    'a', 'd', 'd', 'I', 'm', 'p', 'o', 'r', 't', 'P', 'a', 't', 'h', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'p', 'a', 'r', 'e', 'n', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    's', 't', 'a', 't', 'u', 's', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'c', 'h', 'a', 'n', 'g', 'e', 'd', 'S', 'i', 'g', 'n', 'a', 'l', 0,
    'p', 'a', 'l', 'e', 't', 't', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'e', 'n', 'a', 'b', 'l', 'e', 'd', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    't', 'r', 'a', 'n', 's', 'f', 'o', 'r', 'm', 'M', 'o', 'd', 'e', 0,
    's', 'e', 't', 'R', 'e', 's', 'i', 'z', 'e', 'M', 'o', 'd', 'e', 0,
    's', 'e', 't', 'P', 'a', 'r', 'e', 'n', 't', 'I', 't', 'e', 'm', 0,
    'd', 'r', 'a', 'g', 'M', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'v', 'i', 'e', 'w', 'p', 'o', 'r', 't', 'E', 'v', 'e', 'n', 't', 0,
    'f', 'o', 'c', 'u', 's', 'O', 'u', 't', 'E', 'v', 'e', 'n', 't', 0,
    'k', 'e', 'y', 'P', 'r', 'e', 's', 's', 'E', 'v', 'e', 'n', 't', 0,
    's', 'c', 'e', 'n', 'e', 'R', 'e', 's', 'i', 'z', 'e', 'd', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 't', 'y', 'T', 'y', 'p', 'e', 0,
    'r', 'e', 'q', 'u', 'e', 's', 't', 'I', 'm', 'a', 'g', 'e', 0,
    'C', 'p', 'p', 'O', 'w', 'n', 'e', 'r', 's', 'h', 'i', 'p', 0,
    'i', 'm', 'p', 'o', 'r', 't', 'P', 'l', 'u', 'g', 'i', 'n', 0,
    's', 'o', 'u', 'r', 'c', 'e', 'R', 'e', 'g', 'i', 'o', 'n', 0,
    't', 'a', 'r', 'g', 'e', 't', 'O', 'f', 'f', 's', 'e', 't', 0,
    'c', 'h', 'i', 'l', 'd', 'r', 'e', 'n', 'R', 'e', 'c', 't', 0,
    'i', 's', 'O', 'b', 's', 'c', 'u', 'r', 'e', 'd', 'B', 'y', 0,
    'b', 'o', 'u', 'n', 'd', 'i', 'n', 'g', 'R', 'e', 'c', 't', 0,
    'm', 'i', 'd', 'L', 'i', 'n', 'e', 'W', 'i', 'd', 't', 'h', 0,
    'f', 'o', 'c', 'u', 's', 'I', 'n', 'E', 'v', 'e', 'n', 't', 0,
    'v', 'a', 'l', 'u', 'e', 'C', 'h', 'a', 'n', 'g', 'e', 'd', 0,
    'i', 's', 'R', 'e', 's', 'e', 't', 't', 'a', 'b', 'l', 'e', 0,
    'i', 's', 'D', 'e', 's', 'i', 'g', 'n', 'a', 'b', 'l', 'e', 0,
    'i', 'n', 'i', 't', 'i', 'a', 'l', 'S', 'i', 'z', 'e', 0,
    'h', 'e', 'i', 'g', 'h', 't', 'V', 'a', 'l', 'i', 'd', 0,
    'B', 'o', 't', 't', 'o', 'm', 'R', 'i', 'g', 'h', 't', 0,
    's', 'c', 'o', 'p', 'e', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'r', 'o', 'o', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'r', 'e', 's', 'o', 'l', 'v', 'e', 'd', 'U', 'r', 'l', 0,
    'b', 'e', 'g', 'i', 'n', 'C', 'r', 'e', 'a', 't', 'e', 0,
    't', 'a', 'b', 'l', 'e', 't', 'E', 'v', 'e', 'n', 't', 0,
    'b', 'u', 't', 't', 'o', 'n', '2', 'T', 'e', 'x', 't', 0,
    'b', 'u', 't', 't', 'o', 'n', '1', 'T', 'e', 'x', 't', 0,
    'a', 'c', 't', 'i', 'o', 'n', 'E', 'v', 'e', 'n', 't', 0,
    'p', 'a', 'i', 'n', 't', 'E', 'n', 'g', 'i', 'n', 'e', 0,
    'd', 'e', 's', 'c', 'r', 'i', 'p', 't', 'i', 'o', 'n', 0,
    'r', 'e', 's', 'i', 'z', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'c', 'h', 'a', 'n', 'g', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'c', 'u', 's', 't', 'o', 'm', 'E', 'v', 'e', 'n', 't', 0,
    'e', 'v', 'e', 'n', 't', 'F', 'i', 'l', 't', 'e', 'r', 0,
    '_', '_', 'g', 'e', 't', 'i', 't', 'e', 'm', '_', '_', 0,
    'r', 'o', 'o', 't', 'O', 'b', 'j', 'e', 'c', 't', 0,
    'i', 's', 'P', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'c', 'l', 'a', 's', 's', 'B', 'e', 'g', 'i', 'n', 0,
    'w', 'i', 'd', 't', 'h', 'V', 'a', 'l', 'i', 'd', 0,
    'B', 'o', 't', 't', 'o', 'm', 'L', 'e', 'f', 't', 0,
    's', 'o', 'u', 'r', 'c', 'e', 'F', 'i', 'l', 'e', 0,
    'e', 'x', 'p', 'r', 'e', 's', 's', 'i', 'o', 'n', 0,
    's', 'e', 't', 'B', 'a', 's', 'e', 'U', 'r', 'l', 0,
    'f', 'o', 'n', 't', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    's', 'e', 't', 'C', 'o', 'n', 't', 'e', 'x', 't', 0,
    'e', 'n', 't', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'l', 'e', 'a', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'r', 'e', 's', 'i', 'z', 'e', 'M', 'o', 'd', 'e', 0,
    's', 'c', 'e', 'n', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'i', 't', 'e', 'm', 'C', 'h', 'a', 'n', 'g', 'e', 0,
    'o', 'p', 'a', 'q', 'u', 'e', 'A', 'r', 'e', 'a', 0,
    'p', 'a', 'r', 'e', 'n', 't', 'I', 't', 'e', 'm', 0,
    's', 'e', 't', 'V', 'i', 's', 'i', 'b', 'l', 'e', 0,
    'c', 'l', 'o', 's', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'w', 'h', 'e', 'e', 'l', 'E', 'v', 'e', 'n', 't', 0,
    'p', 'a', 'i', 'n', 't', 'E', 'v', 'e', 'n', 't', 0,
    'l', 'i', 'n', 'e', 'N', 'u', 'm', 'b', 'e', 'r', 0,
    'f', 'i', 'e', 'l', 'd', 'W', 'i', 'd', 't', 'h', 0,
    'c', 'l', 'e', 'a', 'r', 'E', 'r', 'r', 'o', 'r', 0,
    'c', 'h', 'i', 'l', 'd', 'E', 'v', 'e', 'n', 't', 0,
    't', 'i', 'm', 'e', 'r', 'E', 'v', 'e', 'n', 't', 0,
    'i', 's', 'W', 'r', 'i', 't', 'a', 'b', 'l', 'e', 0,
    's', 'e', 't', 'S', 'c', 'r', 'i', 'p', 't', 0,
    's', 'e', 't', 'T', 'a', 'r', 'g', 'e', 't', 0,
    'c', 'a', 'n', 'A', 'p', 'p', 'e', 'n', 'd', 0,
    's', 'e', 't', 'S', 'm', 'o', 'o', 't', 'h', 0,
    'i', 'm', 'a', 'g', 'e', 'T', 'y', 'p', 'e', 0,
    'i', 's', 'L', 'o', 'a', 'd', 'i', 'n', 'g', 0,
    's', 'e', 't', 'S', 'o', 'u', 'r', 'c', 'e', 0,
    'o', 'p', 'e', 'r', 'a', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'C', 'o', 'l', 'u', 'm', 'n', 0,
    'm', 'o', 'v', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'r', 'a', 'w', 'I', 't', 'e', 'm', 's', 0,
    'l', 'i', 'n', 'e', 'W', 'i', 'd', 't', 'h', 0,
    's', 'h', 'o', 'w', 'E', 'v', 'e', 'n', 't', 0,
    'h', 'i', 'd', 'e', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'r', 'o', 'p', 'E', 'v', 'e', 'n', 't', 0,
    'd', 'i', 'r', 'e', 'c', 't', 'o', 'r', 'y', 0,
    'a', 'l', 'i', 'g', 'n', 'm', 'e', 'n', 't', 0,
    's', 'e', 't', 'H', 'e', 'i', 'g', 'h', 't', 0,
    'p', 'r', 'e', 'c', 'i', 's', 'i', 'o', 'n', 0,
    'c', 'a', 'n', 'C', 'o', 'u', 'n', 't', 0,
    'c', 'a', 'n', 'C', 'l', 'e', 'a', 'r', 0,
    'T', 'o', 'p', 'R', 'i', 'g', 'h', 't', 0,
    'e', 'v', 'a', 'l', 'u', 'a', 't', 'e', 0,
    'w', 'a', 'r', 'n', 'i', 'n', 'g', 's', 0,
    'f', 'i', 'l', 'l', 'R', 'u', 'l', 'e', 0,
    'h', 'a', 's', 'F', 'o', 'c', 'u', 's', 0,
    't', 'a', 'b', 'A', 'r', 'r', 'a', 'y', 0,
    't', 'a', 'b', 'S', 't', 'o', 'p', 's', 0,
    'u', 's', 'e', 'r', 'D', 'a', 't', 'a', 0,
    's', 'i', 'z', 'e', 'H', 'i', 'n', 't', 0,
    's', 'h', 'o', 'r', 't', 'c', 'u', 't', 0,
    'h', 'a', 's', 'E', 'r', 'r', 'o', 'r', 0,
    'b', 'e', 'h', 'a', 'v', 'i', 'o', 'r', 0,
    'p', 'o', 's', 'i', 't', 'i', 'o', 'n', 0,
    'f', 'i', 'l', 'l', 'C', 'h', 'a', 'r', 0,
    's', 'e', 't', 'W', 'i', 'd', 't', 'h', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 't', 'y', 0,
    'p', 'r', 'o', 'g', 'r', 'e', 's', 's', 0,
    't', 'o', 'S', 't', 'r', 'i', 'n', 'g', 0,
    'c', 'o', 'n', 't', 'a', 'i', 'n', 's', 0,
    '_', '_', 'h', 'a', 's', 'h', '_', '_', 0,
    's', 'e', 't', 'C', 'l', 'i', 'p', 0,
    'T', 'o', 'p', 'L', 'e', 'f', 't', 0,
    'b', 'a', 's', 'e', 'U', 'r', 'l', 0,
    'l', 'o', 'a', 'd', 'U', 'r', 'l', 0,
    'i', 's', 'E', 'r', 'r', 'o', 'r', 0,
    'i', 's', 'R', 'e', 'a', 'd', 'y', 0,
    'e', 'x', 'p', 'o', 's', 'e', 'd', 0,
    'b', 'u', 't', 't', 'o', 'n', '2', 0,
    'b', 'u', 't', 't', 'o', 'n', '1', 0,
    'q', 'u', 'a', 'l', 'i', 't', 'y', 0,
    'd', 'e', 'v', 'T', 'y', 'p', 'e', 0,
    'a', 'd', 'v', 'a', 'n', 'c', 'e', 0,
    'y', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'x', 'M', 'a', 'r', 'g', 'i', 'n', 0,
    'c', 'a', 'p', 't', 'i', 'o', 'n', 0,
    'I', 'n', 'v', 'a', 'l', 'i', 'd', 0,
    'o', 'p', 't', 'i', 'o', 'n', 's', 0,
    's', 'e', 't', 'L', 'i', 'n', 'e', 0,
    'c', 'o', 'n', 't', 'e', 'x', 't', 0,
    'i', 's', 'E', 'm', 'p', 't', 'y', 0,
    '_', '_', 'l', 'e', 'n', '_', '_', 0,
    's', 'e', 't', 'D', 'a', 't', 'a', 0,
    'i', 's', 'V', 'a', 'l', 'i', 'd', 0,
    'f', 'i', 'l', 't', 'e', 'r', 's', 0,
    's', 'm', 'o', 'o', 't', 'h', 0,
    'e', 'r', 'r', 'o', 'r', 's', 0,
    'B', 'o', 't', 't', 'o', 'm', 0,
    'y', 'R', 'o', 'u', 'n', 'd', 0,
    'x', 'R', 'o', 'u', 'n', 'd', 0,
    'm', 'e', 't', 'r', 'i', 'c', 0,
    'e', 'n', 'g', 'i', 'n', 'e', 0,
    'l', 'a', 'y', 'e', 'r', 's', 0,
    'N', 'o', 'r', 'm', 'a', 'l', 0,
    's', 'u', 'n', 'k', 'e', 'n', 0,
    's', 'o', 'u', 'r', 'c', 'e', 0,
    'o', 'p', 't', 'i', 'o', 'n', 0,
    's', 'e', 't', 'U', 'r', 'l', 0,
    'p', 'r', 'o', 'p', 'e', 'r', 0,
    'v', 'a', 'l', 'u', 'e', '9', 0,
    'v', 'a', 'l', 'u', 'e', '8', 0,
    'v', 'a', 'l', 'u', 'e', '7', 0,
    'v', 'a', 'l', 'u', 'e', '6', 0,
    'v', 'a', 'l', 'u', 'e', '5', 0,
    'v', 'a', 'l', 'u', 'e', '4', 0,
    'v', 'a', 'l', 'u', 'e', '3', 0,
    'v', 'a', 'l', 'u', 'e', '0', 0,
    's', 'c', 'r', 'i', 'p', 't', 0,
    's', 'y', 'm', 'b', 'o', 'l', 0,
    's', 'u', 'f', 'f', 'i', 'x', 0,
    'p', 'r', 'e', 'f', 'i', 'x', 0,
    's', 't', 'a', 't', 'u', 's', 0,
    'm', 'e', 't', 'h', 'o', 'd', 0,
    'C', 'e', 'n', 't', 'e', 'r', 0,
    'f', 'o', 'r', 'm', 'a', 't', 0,
    'i', 'n', 's', 'e', 'r', 't', 0,
    'a', 'p', 'p', 'e', 'n', 'd', 0,
    'v', 'a', 'l', 'u', 'e', '2', 0,
    'v', 'a', 'l', 'u', 'e', '1', 0,
    'i', 's', 'N', 'u', 'l', 'l', 0,
    'a', 'c', 't', 'i', 'o', 'n', 0,
    'c', 'o', 'l', 'u', 'm', 'n', 0,
    'c', 'r', 'e', 'a', 't', 'e', 0,
    'f', 'i', 'l', 't', 'e', 'r', 0,
    'o', 'b', 'j', 'e', 'c', 't', 0,
    'p', 'a', 'r', 'e', 'n', 't', 0,
    '_', '_', 'n', 'e', '_', '_', 0,
    '_', '_', 'e', 'q', '_', '_', 0,
    'c', 'a', 'n', 'A', 't', 0,
    'b', 'r', 'u', 's', 'h', 0,
    'p', 'a', 'i', 'n', 't', 0,
    's', 'h', 'a', 'p', 'e', 0,
    'h', 'i', 'n', 't', 's', 0,
    'c', 'l', 'e', 'a', 'r', 0,
    'r', 'e', 's', 'e', 't', 0,
    'c', 'o', 'u', 'n', 't', 0,
    'v', 'a', 'l', 'u', 'e', 0,
    'i', 'n', 'd', 'e', 'x', 0,
    'e', 'r', 'r', 'o', 'r', 0,
    'w', 'r', 'i', 't', 'e', 0,
    'f', 'l', 'a', 'g', 's', 0,
    'e', 'v', 'e', 'n', 't', 0,
    'm', 's', 'e', 'c', 's', 0,
    's', 't', 'a', 't', 'e', 0,
    'c', 'l', 'i', 'p', 0,
    'p', 'o', 'r', 't', 0,
    'k', 'e', 'y', 's', 0,
    'l', 'i', 'n', 'e', 0,
    'm', 'o', 'd', 'e', 0,
    'n', 'a', 'm', 'e', 0,
    'q', 'u', 'i', 't', 0,
    'b', 'a', 's', 'e', 0,
    'f', 'i', 'l', 'l', 0,
    'f', 'r', 'o', 'm', 0,
    's', 'o', 'r', 't', 0,
    'r', 'e', 'a', 'd', 0,
    't', 'y', 'p', 'e', 0,
    's', 'i', 'z', 'e', 0,
    'T', 'o', 'p', 0,
    'p', 'e', 'n', 0,
    'u', 'r', 'l', 0,
    'p', 'o', 's', 0,
    's', 'w', 0,
    's', 'y', 0,
    's', 'x', 0,
    't', 'o', 0,
};

void sipVH_QtDeclarative_0(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QDeclarativeProperty& a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "N",new QDeclarativeProperty(a0),sipType_QDeclarativeProperty,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

QNetworkAccessManager* sipVH_QtDeclarative_1(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QObject*a0)
{
    QNetworkAccessManager* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QObject,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_QNetworkAccessManager, &sipRes);

    return sipRes;
}

void sipVH_QtDeclarative_2(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QRectF& a0,const QRectF& a1)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NN",new QRectF(a0),sipType_QRectF,NULL,new QRectF(a1),sipType_QRectF,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

QPixmap sipVH_QtDeclarative_3(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QString& a0,QSize*a1,const QSize& a2)
{
    QPixmap sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NDN",new QString(a0),sipType_QString,NULL,a1,sipType_QSize,NULL,new QSize(a2),sipType_QSize,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QPixmap, &sipRes);

    return sipRes;
}

QImage sipVH_QtDeclarative_4(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const QString& a0,QSize*a1,const QSize& a2)
{
    QImage sipRes;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "NDN",new QString(a0),sipType_QString,NULL,a1,sipType_QSize,NULL,new QSize(a2),sipType_QSize,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H5", sipType_QImage, &sipRes);

    return sipRes;
}

void sipVH_QtDeclarative_5(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QDeclarativeEngine*a0,const char*a1)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "Ds",a0,sipType_QDeclarativeEngine,NULL,a1);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

void sipVH_QtDeclarative_6(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, const char*a0)
{
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "s",a0);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "Z");
}

QObject* sipVH_QtDeclarative_7(sip_gilstate_t sipGILState, sipVirtErrorHandlerFunc sipErrorHandler, sipSimpleWrapper *sipPySelf, PyObject *sipMethod, QDeclarativeContext*a0)
{
    QObject* sipRes = 0;
    PyObject *sipResObj = sipCallMethod(0, sipMethod, "D",a0,sipType_QDeclarativeContext,NULL);

    sipParseResultEx(sipGILState, sipErrorHandler, sipPySelf, sipMethod, sipResObj, "H2", sipType_QObject, &sipRes);

    return sipRes;
}


/* Convert to a sub-class if possible. */
extern "C" {static const sipTypeDef *sipSubClass_QDeclarativeEngine(void **);}
static const sipTypeDef *sipSubClass_QDeclarativeEngine(void **sipCppRet)
{
    QObject *sipCpp = reinterpret_cast<QObject *>(*sipCppRet);
    const sipTypeDef *sipType;

#line 37 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtDeclarative/qdeclarativeengine.sip"
    static struct class_graph {
        const char *name;
        sipTypeDef **type;
        int yes, no;
    } graph[] = {
        {sipName_QDeclarativeView, &sipType_QDeclarativeView, -1, 1},
        {sipName_QDeclarativeEngine, &sipType_QDeclarativeEngine, -1, 2},
        {sipName_QDeclarativeComponent, &sipType_QDeclarativeComponent, -1, 3},
        {sipName_QDeclarativeItem, &sipType_QDeclarativeItem, -1, 4},
        {sipName_QDeclarativeContext, &sipType_QDeclarativeContext, -1, -1},
    };
    
    int i = 0;
    
    sipType = NULL;
    
    do
    {
        struct class_graph *cg = &graph[i];
    
        if (cg->name != NULL && sipCpp->inherits(cg->name))
        {
            sipType = *cg->type;
            i = cg->yes;
        }
        else
            i = cg->no;
    }
    while (i >= 0);
#line 525 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"

    return sipType;
}
static sipEnumTypeDef enumTypes[] = {
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QDeclarativeView__Status, {0}}, sipNameNr_Status, 22, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QDeclarativeView__ResizeMode, {0}}, sipNameNr_ResizeMode, 22, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QDeclarativeProperty__Type, {0}}, sipNameNr_Type, 16, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QDeclarativeProperty__PropertyTypeCategory, {0}}, sipNameNr_PropertyTypeCategory, 16, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QDeclarativeItem__TransformOrigin, {0}}, sipNameNr_TransformOrigin, 10, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QDeclarativeImageProvider__ImageType, {0}}, sipNameNr_ImageType, 8, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QDeclarativeEngine__ObjectOwnership, {0}}, sipNameNr_ObjectOwnership, 3, NULL},
    {{-1, 0, 0, SIP_TYPE_ENUM, sipNameNr_QDeclarativeComponent__Status, {0}}, sipNameNr_Status, 0, NULL},
};


/*
 * This defines each type in this module.
 */
static sipTypeDef *typesTable[] = {
    &sipTypeDef_QtDeclarative_QDeclarativeComponent.super.ctd_base,
    &enumTypes[7].etd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeContext.super.ctd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeEngine.super.ctd_base,
    &enumTypes[6].etd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeError.super.ctd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeExpression.super.ctd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeExtensionPlugin.super.ctd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeImageProvider.super.ctd_base,
    &enumTypes[5].etd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeItem.super.ctd_base,
    &enumTypes[4].etd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeListProperty_0100QObject.mtd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeListReference.super.ctd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeNetworkAccessManagerFactory.super.ctd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeParserStatus.super.ctd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeProperty.super.ctd_base,
    &enumTypes[3].etd_base,
    &enumTypes[2].etd_base,
    &sipTypeDef_QtDeclarative_QDeclarativePropertyMap.super.ctd_base,
    &sipTypeDef_QtDeclarative_QDeclarativePropertyValueSource.super.ctd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeScriptString.super.ctd_base,
    &sipTypeDef_QtDeclarative_QDeclarativeView.super.ctd_base,
    &enumTypes[1].etd_base,
    &enumTypes[0].etd_base,
    &sipTypeDef_QtDeclarative_QList_0100QDeclarativeError.mtd_base,
    &sipTypeDef_QtDeclarative_QPyDeclarativePropertyValueSource.super.ctd_base,
};


/*
 * This defines the virtual handlers that this module implements and can be
 * used by other modules.
 */
static sipVirtHandlerFunc virtHandlersTable[] = {
    (sipVirtHandlerFunc)sipVH_QtDeclarative_0,
    (sipVirtHandlerFunc)sipVH_QtDeclarative_1,
    (sipVirtHandlerFunc)sipVH_QtDeclarative_2,
    (sipVirtHandlerFunc)sipVH_QtDeclarative_3,
    (sipVirtHandlerFunc)sipVH_QtDeclarative_4,
    (sipVirtHandlerFunc)sipVH_QtDeclarative_5,
    (sipVirtHandlerFunc)sipVH_QtDeclarative_6,
    (sipVirtHandlerFunc)sipVH_QtDeclarative_7,
};


/* This defines the modules that this module needs to import. */
static sipImportedModuleDef importsTable[] = {
    {"PyQt4.QtCore", 1, NULL},
    {"PyQt4.QtNetwork", -1, NULL},
    {"PyQt4.QtGui", -1, NULL},
    {NULL, -1, NULL}
};


/* This defines the class sub-convertors that this module defines. */
static sipSubClassConvertorDef convertorsTable[] = {
    {sipSubClass_QDeclarativeEngine, {141, 0, 0}, NULL},
    {NULL, {0, 0, 0}, NULL}
};


/* This defines this module. */
sipExportedModuleDef sipModuleAPI_QtDeclarative = {
    0,
    SIP_API_MINOR_NR,
    sipNameNr_PyQt4_QtDeclarative,
    0,
    -1,
    sipStrings_QtDeclarative,
    importsTable,
    NULL,
    27,
    typesTable,
    NULL,
    0,
    NULL,
    0,
    NULL,
    virtHandlersTable,
    NULL,
    convertorsTable,
    {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL},
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL,
    NULL
};


/* The SIP API and the APIs of any imported modules. */
const sipAPIDef *sipAPI_QtDeclarative;
const sipExportedModuleDef *sipModuleAPI_QtDeclarative_QtCore;
const sipExportedModuleDef *sipModuleAPI_QtDeclarative_QtNetwork;
const sipExportedModuleDef *sipModuleAPI_QtDeclarative_QtGui;

sip_qt_metaobject_func sip_QtDeclarative_qt_metaobject;
sip_qt_metacall_func sip_QtDeclarative_qt_metacall;
sip_qt_metacast_func sip_QtDeclarative_qt_metacast;


/* The Python module initialisation function. */
#if PY_MAJOR_VERSION >= 3
#define SIP_MODULE_ENTRY        PyInit_QtDeclarative
#define SIP_MODULE_TYPE         PyObject *
#define SIP_MODULE_DISCARD(r)   Py_DECREF(r)
#define SIP_MODULE_RETURN(r)    return (r)
#else
#define SIP_MODULE_ENTRY        initQtDeclarative
#define SIP_MODULE_TYPE         void
#define SIP_MODULE_DISCARD(r)
#define SIP_MODULE_RETURN(r)    return
#endif

#if defined(SIP_STATIC_MODULE)
extern "C" SIP_MODULE_TYPE SIP_MODULE_ENTRY()
#else
PyMODINIT_FUNC SIP_MODULE_ENTRY()
#endif
{
    static PyMethodDef sip_methods[] = {
        {0, 0, 0, 0}
    };

#if PY_MAJOR_VERSION >= 3
    static PyModuleDef sip_module_def = {
        PyModuleDef_HEAD_INIT,
        "PyQt4.QtDeclarative",
        NULL,
        -1,
        sip_methods,
        NULL,
        NULL,
        NULL,
        NULL
    };
#endif

    PyObject *sipModule, *sipModuleDict;
    PyObject *sip_sipmod, *sip_capiobj;

    /* Initialise the module and get it's dictionary. */
#if PY_MAJOR_VERSION >= 3
    sipModule = PyModule_Create(&sip_module_def);
#elif PY_VERSION_HEX >= 0x02050000
    sipModule = Py_InitModule(sipName_PyQt4_QtDeclarative, sip_methods);
#else
    sipModule = Py_InitModule(const_cast<char *>(sipName_PyQt4_QtDeclarative), sip_methods);
#endif

    if (sipModule == NULL)
        SIP_MODULE_RETURN(NULL);

    sipModuleDict = PyModule_GetDict(sipModule);

    /* Get the SIP module's API. */
#if PY_VERSION_HEX >= 0x02050000
    sip_sipmod = PyImport_ImportModule(SIP_MODULE_NAME);
#else
    sip_sipmod = PyImport_ImportModule(const_cast<char *>(SIP_MODULE_NAME));
#endif

    if (sip_sipmod == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

    sip_capiobj = PyDict_GetItemString(PyModule_GetDict(sip_sipmod), "_C_API");
    Py_DECREF(sip_sipmod);

#if defined(SIP_USE_PYCAPSULE)
    if (sip_capiobj == NULL || !PyCapsule_CheckExact(sip_capiobj))
#else
    if (sip_capiobj == NULL || !PyCObject_Check(sip_capiobj))
#endif
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }

#if defined(SIP_USE_PYCAPSULE)
    sipAPI_QtDeclarative = reinterpret_cast<const sipAPIDef *>(PyCapsule_GetPointer(sip_capiobj, SIP_MODULE_NAME "._C_API"));
#else
    sipAPI_QtDeclarative = reinterpret_cast<const sipAPIDef *>(PyCObject_AsVoidPtr(sip_capiobj));
#endif

#if defined(SIP_USE_PYCAPSULE)
    if (sipAPI_QtDeclarative == NULL)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(NULL);
    }
#endif

    /* Export the module and publish it's API. */
    if (sipExportModule(&sipModuleAPI_QtDeclarative,SIP_API_MAJOR_NR,SIP_API_MINOR_NR,0) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    sip_QtDeclarative_qt_metaobject = (sip_qt_metaobject_func)sipImportSymbol("qtcore_qt_metaobject");
    sip_QtDeclarative_qt_metacall = (sip_qt_metacall_func)sipImportSymbol("qtcore_qt_metacall");
    sip_QtDeclarative_qt_metacast = (sip_qt_metacast_func)sipImportSymbol("qtcore_qt_metacast");

    if (!sip_QtDeclarative_qt_metacast)
        Py_FatalError("Unable to import qtcore_qt_metacast");

    /* Initialise the module now all its dependencies have been set up. */
    if (sipInitModule(&sipModuleAPI_QtDeclarative,sipModuleDict) < 0)
    {
        SIP_MODULE_DISCARD(sipModule);
        SIP_MODULE_RETURN(0);
    }

    /* Get the APIs of the modules that this one is dependent on. */
    sipModuleAPI_QtDeclarative_QtCore = sipModuleAPI_QtDeclarative.em_imports[0].im_module;
    sipModuleAPI_QtDeclarative_QtNetwork = sipModuleAPI_QtDeclarative.em_imports[1].im_module;
    sipModuleAPI_QtDeclarative_QtGui = sipModuleAPI_QtDeclarative.em_imports[2].im_module;
#line 119 "/home/desa2/PyQt-x11-gpl-4.10.4/sip/QtDeclarative/qdeclarativeengine.sip"
qpydeclarative_post_init(sipModuleDict);
#line 771 "/home/desa2/PyQt-x11-gpl-4.10.4/QtDeclarative/sipQtDeclarativecmodule.cpp"

    SIP_MODULE_RETURN(sipModule);
}
